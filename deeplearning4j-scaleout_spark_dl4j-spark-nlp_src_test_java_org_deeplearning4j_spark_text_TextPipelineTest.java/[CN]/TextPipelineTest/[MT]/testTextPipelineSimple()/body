{
  JavaRDD<String> corpus=sc.textFile(new ClassPathResource("basic/word2vec.txt").getFile().getAbsolutePath(),3);
  TextPipeline pipeline=new TextPipeline(corpus,1);
  Pair<VocabCache,Long> pair=pipeline.process();
  InMemoryLookupCache lookupCache=(InMemoryLookupCache)pair.getFirst();
  assertEquals(lookupCache.vocabs.size(),6);
  ArrayList<Integer> vocabWordInds=new ArrayList<>();
  for (  VocabWord vw : lookupCache.vocabs.values()) {
    vocabWordInds.add(vw.getIndex());
  }
  assertTrue(Collections.min(vocabWordInds) == 0);
  assertTrue(Collections.max(vocabWordInds) == 5);
  assertTrue(lookupCache.vocabs.containsKey("She"));
  assertTrue(lookupCache.vocabs.containsKey("found"));
  assertTrue(lookupCache.vocabs.containsKey("one"));
  assertTrue(lookupCache.vocabs.containsKey("two"));
  assertTrue(lookupCache.vocabs.containsKey("ba"));
  assertTrue(lookupCache.vocabs.containsKey("abab"));
  assertTrue(pair.getSecond() == 8);
}
