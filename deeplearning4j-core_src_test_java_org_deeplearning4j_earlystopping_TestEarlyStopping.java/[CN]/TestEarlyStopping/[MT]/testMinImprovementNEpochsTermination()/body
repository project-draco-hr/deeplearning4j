{
  Random rng=new Random(123);
  Nd4j.getRandom().setSeed(12345);
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().seed(123).iterations(10).optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).learningRate(0.001).updater(Updater.NESTEROVS).momentum(0.9).list().layer(0,new DenseLayer.Builder().nIn(1).nOut(20).weightInit(WeightInit.XAVIER).activation("tanh").build()).layer(1,new OutputLayer.Builder(LossFunctions.LossFunction.MSE).weightInit(WeightInit.XAVIER).activation("identity").weightInit(WeightInit.XAVIER).nIn(20).nOut(1).build()).pretrain(false).backprop(true).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.setListeners(new ScoreIterationListener(1));
  int nSamples=100;
  INDArray x=Nd4j.linspace(-10,10,nSamples).reshape(nSamples,1);
  INDArray y=Nd4j.getExecutioner().execAndReturn(new Sin(x.dup()));
  DataSet allData=new DataSet(x,y);
  List<DataSet> list=allData.asList();
  Collections.shuffle(list,rng);
  DataSetIterator training=new ListDataSetIterator(list,nSamples);
  double minImprovement=0.0009;
  EarlyStoppingModelSaver<MultiLayerNetwork> saver=new InMemoryModelSaver<>();
  EarlyStoppingConfiguration<MultiLayerNetwork> esConf=new EarlyStoppingConfiguration.Builder<MultiLayerNetwork>().epochTerminationConditions(new MaxEpochsTerminationCondition(1000),new ScoreImprovementEpochTerminationCondition(5,minImprovement)).iterationTerminationConditions(new MaxTimeIterationTerminationCondition(3,TimeUnit.MINUTES)).scoreCalculator(new DataSetLossCalculator(training,true)).modelSaver(saver).build();
  IEarlyStoppingTrainer trainer=new EarlyStoppingTrainer(esConf,net,training);
  EarlyStoppingResult result=trainer.fit();
  assertEquals(28,result.getTotalEpochs());
  assertEquals(27,result.getBestModelEpoch());
  assertEquals(EarlyStoppingResult.TerminationReason.EpochTerminationCondition,result.getTerminationReason());
  String expDetails=new ScoreImprovementEpochTerminationCondition(5,minImprovement).toString();
  assertEquals(expDetails,result.getTerminationDetails());
}
