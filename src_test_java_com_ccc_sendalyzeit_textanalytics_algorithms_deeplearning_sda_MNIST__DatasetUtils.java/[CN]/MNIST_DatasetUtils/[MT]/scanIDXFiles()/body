{
  int max=0;
  System.out.println("> Scanning MNIST Files....");
  System.out.println("> Labels: " + labelFileName);
  System.out.println("> Images: " + imageFileName);
  ByteArrayOutputStream labelBuffer=new ByteArrayOutputStream();
  ByteArrayOutputStream imageBuffer=new ByteArrayOutputStream();
  InputStream labelInputStream=new FileInputStream(labelFileName);
  InputStream imageInputStream=new FileInputStream(imageFileName);
  int read;
  byte[] buffer=new byte[16384];
  while ((read=labelInputStream.read(buffer,0,buffer.length)) != -1) {
    labelBuffer.write(buffer,0,read);
  }
  labelBuffer.flush();
  while ((read=imageInputStream.read(buffer,0,buffer.length)) != -1) {
    imageBuffer.write(buffer,0,read);
  }
  imageBuffer.flush();
  byte[] labelBytes=labelBuffer.toByteArray();
  byte[] imageBytes=imageBuffer.toByteArray();
  byte[] labelMagic=Arrays.copyOfRange(labelBytes,0,OFFSET_SIZE);
  byte[] imageMagic=Arrays.copyOfRange(imageBytes,0,OFFSET_SIZE);
  if (ByteBuffer.wrap(labelMagic).getInt() != LABEL_MAGIC) {
    throw new IOException("Bad magic number in label file!");
  }
  if (ByteBuffer.wrap(imageMagic).getInt() != IMAGE_MAGIC) {
    throw new IOException("Bad magic number in image file!");
  }
  int numberOfLabels=ByteBuffer.wrap(Arrays.copyOfRange(labelBytes,NUMBER_ITEMS_OFFSET,NUMBER_ITEMS_OFFSET + ITEMS_SIZE)).getInt();
  int numberOfImages=ByteBuffer.wrap(Arrays.copyOfRange(imageBytes,NUMBER_ITEMS_OFFSET,NUMBER_ITEMS_OFFSET + ITEMS_SIZE)).getInt();
  if (numberOfImages != numberOfLabels) {
    throw new IOException("The number of labels and images do not match!");
  }
  int numRows=ByteBuffer.wrap(Arrays.copyOfRange(imageBytes,NUMBER_OF_ROWS_OFFSET,NUMBER_OF_ROWS_OFFSET + ROWS_SIZE)).getInt();
  int numCols=ByteBuffer.wrap(Arrays.copyOfRange(imageBytes,NUMBER_OF_COLUMNS_OFFSET,NUMBER_OF_COLUMNS_OFFSET + COLUMNS_SIZE)).getInt();
  if (numRows != ROWS && numRows != COLUMNS) {
    throw new IOException("Bad image. Rows and columns do not equal " + ROWS + "x"+ COLUMNS);
  }
  BufferedWriter bw=new BufferedWriter(new FileWriter(metronomeFormattedMNISTFile));
  for (int i=0; i < numberOfLabels; i++) {
    int label=labelBytes[OFFSET_SIZE + ITEMS_SIZE + i];
    byte[] imageData=Arrays.copyOfRange(imageBytes,(i * IMAGE_SIZE) + IMAGE_OFFSET,(i * IMAGE_SIZE) + IMAGE_OFFSET + IMAGE_SIZE);
    System.out.print(".");
    String formatted_line=formatMNISTHandwritingColumnToMetronomeRecord(imageData,label,255);
    bw.write(formatted_line);
  }
  bw.close();
}
