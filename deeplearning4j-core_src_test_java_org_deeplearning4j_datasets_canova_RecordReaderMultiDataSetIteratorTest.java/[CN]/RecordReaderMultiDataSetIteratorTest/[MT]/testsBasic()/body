{
  RecordReader rr=new CSVRecordReader(0,",");
  rr.initialize(new FileSplit(new ClassPathResource("iris.txt").getTempFileFromArchive()));
  RecordReaderDataSetIterator rrdsi=new RecordReaderDataSetIterator(rr,10,4,3);
  RecordReader rr2=new CSVRecordReader(0,",");
  rr2.initialize(new FileSplit(new ClassPathResource("iris.txt").getTempFileFromArchive()));
  MultiDataSetIterator rrmdsi=new RecordReaderMultiDataSetIterator.Builder(10).addReader("reader",rr2).addInput("reader",0,3).addOutputOneHot("reader",4,3).build();
  while (rrdsi.hasNext()) {
    DataSet ds=rrdsi.next();
    INDArray fds=ds.getFeatureMatrix();
    INDArray lds=ds.getLabels();
    MultiDataSet mds=rrmdsi.next();
    assertEquals(1,mds.getFeatures().length);
    assertEquals(1,mds.getLabels().length);
    assertNull(mds.getFeaturesMaskArrays());
    assertNull(mds.getLabelsMaskArrays());
    INDArray fmds=mds.getFeatures(0);
    INDArray lmds=mds.getLabels(0);
    assertNotNull(fmds);
    assertNotNull(lmds);
    assertEquals(fds,fmds);
    assertEquals(lds,lmds);
  }
  assertFalse(rrmdsi.hasNext());
  ClassPathResource resource=new ClassPathResource("csvsequence_0.txt");
  String featuresPath=resource.getTempFileFromArchive().getAbsolutePath().replaceAll("0","%d");
  resource=new ClassPathResource("csvsequencelabels_0.txt");
  String labelsPath=resource.getTempFileFromArchive().getAbsolutePath().replaceAll("0","%d");
  SequenceRecordReader featureReader=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader=new CSVSequenceRecordReader(1,",");
  featureReader.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  SequenceRecordReaderDataSetIterator iter=new SequenceRecordReaderDataSetIterator(featureReader,labelReader,1,4,false);
  SequenceRecordReader featureReader2=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader2=new CSVSequenceRecordReader(1,",");
  featureReader2.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader2.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  MultiDataSetIterator srrmdsi=new RecordReaderMultiDataSetIterator.Builder(1).addSequenceReader("in",featureReader2).addSequenceReader("out",labelReader2).addInput("in").addOutputOneHot("out",0,4).build();
  while (iter.hasNext()) {
    DataSet ds=iter.next();
    INDArray fds=ds.getFeatureMatrix();
    INDArray lds=ds.getLabels();
    MultiDataSet mds=srrmdsi.next();
    assertEquals(1,mds.getFeatures().length);
    assertEquals(1,mds.getLabels().length);
    assertNull(mds.getFeaturesMaskArrays());
    assertNull(mds.getLabelsMaskArrays());
    INDArray fmds=mds.getFeatures(0);
    INDArray lmds=mds.getLabels(0);
    assertNotNull(fmds);
    assertNotNull(lmds);
    assertEquals(fds,fmds);
    assertEquals(lds,lmds);
  }
  assertFalse(srrmdsi.hasNext());
}
