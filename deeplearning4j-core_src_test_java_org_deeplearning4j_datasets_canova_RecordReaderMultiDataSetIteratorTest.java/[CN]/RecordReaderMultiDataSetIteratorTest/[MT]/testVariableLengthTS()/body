{
  ClassPathResource resource=new ClassPathResource("csvsequence_0.txt");
  String featuresPath=resource.getTempFileFromArchive().getAbsolutePath().replaceAll("0","%d");
  resource=new ClassPathResource("csvsequencelabelsShort_0.txt");
  String labelsPath=resource.getTempFileFromArchive().getAbsolutePath().replaceAll("0","%d");
  SequenceRecordReader featureReader=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader=new CSVSequenceRecordReader(1,",");
  featureReader.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  SequenceRecordReader featureReader2=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader2=new CSVSequenceRecordReader(1,",");
  featureReader2.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader2.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  SequenceRecordReaderDataSetIterator iterAlignStart=new SequenceRecordReaderDataSetIterator(featureReader,labelReader,1,4,false,SequenceRecordReaderDataSetIterator.AlignmentMode.ALIGN_START);
  SequenceRecordReaderDataSetIterator iterAlignEnd=new SequenceRecordReaderDataSetIterator(featureReader2,labelReader2,1,4,false,SequenceRecordReaderDataSetIterator.AlignmentMode.ALIGN_END);
  SequenceRecordReader featureReader3=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader3=new CSVSequenceRecordReader(1,",");
  featureReader3.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader3.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  SequenceRecordReader featureReader4=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader4=new CSVSequenceRecordReader(1,",");
  featureReader4.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader4.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  RecordReaderMultiDataSetIterator rrmdsiStart=new RecordReaderMultiDataSetIterator.Builder(1).addSequenceReader("in",featureReader3).addSequenceReader("out",labelReader3).addInput("in").addOutputOneHot("out",0,4).sequenceAlignmentMode(RecordReaderMultiDataSetIterator.AlignmentMode.ALIGN_START).build();
  RecordReaderMultiDataSetIterator rrmdsiEnd=new RecordReaderMultiDataSetIterator.Builder(1).addSequenceReader("in",featureReader4).addSequenceReader("out",labelReader4).addInput("in").addOutputOneHot("out",0,4).sequenceAlignmentMode(RecordReaderMultiDataSetIterator.AlignmentMode.ALIGN_END).build();
  while (iterAlignStart.hasNext()) {
    DataSet dsStart=iterAlignStart.next();
    DataSet dsEnd=iterAlignEnd.next();
    MultiDataSet mdsStart=rrmdsiStart.next();
    MultiDataSet mdsEnd=rrmdsiEnd.next();
    assertEquals(1,mdsStart.getFeatures().length);
    assertEquals(1,mdsStart.getLabels().length);
    assertEquals(1,mdsStart.getLabelsMaskArrays().length);
    assertEquals(1,mdsEnd.getFeatures().length);
    assertEquals(1,mdsEnd.getLabels().length);
    assertEquals(1,mdsEnd.getLabelsMaskArrays().length);
    assertEquals(dsStart.getFeatureMatrix(),mdsStart.getFeatures(0));
    assertEquals(dsStart.getLabels(),mdsStart.getLabels(0));
    assertEquals(dsStart.getLabelsMaskArray(),mdsStart.getLabelsMaskArray(0));
    assertEquals(dsEnd.getFeatureMatrix(),mdsEnd.getFeatures(0));
    assertEquals(dsEnd.getLabels(),mdsEnd.getLabels(0));
    assertEquals(dsEnd.getLabelsMaskArray(),mdsEnd.getLabelsMaskArray(0));
  }
  assertFalse(rrmdsiStart.hasNext());
  assertFalse(rrmdsiEnd.hasNext());
}
