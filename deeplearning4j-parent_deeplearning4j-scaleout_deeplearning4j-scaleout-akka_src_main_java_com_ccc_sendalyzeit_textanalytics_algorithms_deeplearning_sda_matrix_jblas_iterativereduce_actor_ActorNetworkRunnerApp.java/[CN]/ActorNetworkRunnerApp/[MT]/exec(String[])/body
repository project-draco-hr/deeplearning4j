{
  CmdLineParser parser=new CmdLineParser(this);
  try {
    parser.parseArgument(args);
    if (hiddenLayerSizesOption != null) {
      String[] split=hiddenLayerSizesOption.split(",");
      hiddenLayerSizes=new int[split.length];
      for (int i=0; i < split.length; i++) {
        hiddenLayerSizes[i]=Integer.parseInt(split[i]);
      }
    }
    if (type != null && type.equals("worker")) {
      ZooKeeper zk=new ZookeeperBuilder().setHost(host).build();
      ZookeeperConfigurationRetriever retriever=new ZookeeperConfigurationRetriever(zk,"master");
      Conf conf=retriever.retreive();
      String address=conf.get(MASTER_URL);
      ActorNetworkRunner runner=new ActorNetworkRunner(type,address);
      runner.setup(conf);
    }
 else {
      Conf conf=new Conf();
      Pair<DoubleMatrix,DoubleMatrix> mnist=DeepLearningTest.getMnistExampleBatch(100);
      conf.put(CLASS,getClassForAlgorithm());
      conf.put(LAYER_SIZES,Arrays.toString(hiddenLayerSizes).replace("[","").replace("]","").replace(" ",""));
      conf.put(SPLIT,String.valueOf(10));
      conf.put(N_IN,String.valueOf(mnist.getFirst().columns));
      conf.put(OUT,String.valueOf(mnist.getSecond().columns));
      conf.put(PRE_TRAIN_EPOCHS,String.valueOf(pretrainEpochs));
      conf.put(FINE_TUNE_EPOCHS,String.valueOf(finetuneEpochs));
      conf.put(SEED,String.valueOf(rngSeed));
      conf.put(LEARNING_RATE,String.valueOf(pretrainLearningRate));
      conf.put(LAYER_SIZES,StringUtils.join(hiddenLayerSizes,","));
      conf.put(CORRUPTION_LEVEL,corruptionLevel);
      conf.put(SPLIT,String.valueOf(split));
      conf.put(PARAMS,new ExtraParamsBuilder().algorithm(PARAM_SDA).corruptionlevel(corruptionLevel).finetuneEpochs(finetuneEpochs).finetuneLearningRate(finetineLearningRate).learningRate(pretrainLearningRate).epochs(pretrainEpochs).build());
      ActorNetworkRunner runner=new ActorNetworkRunner();
      runner.setup(conf);
      conf.put(MASTER_URL,runner.getMasterAddress().toString());
      ZooKeeperConfigurationRegister reg=new ZooKeeperConfigurationRegister(conf,new ZookeeperBuilder().build(),"master");
      reg.register();
    }
  }
 catch (  Exception e) {
    parser.printUsage(System.err);
    System.exit(1);
  }
}
