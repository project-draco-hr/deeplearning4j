{
  labelsSumPerColumn.addi(labels.sum(0));
  INDArray error=predictions.sub(labels);
  INDArray absErrorSum=Nd4j.getExecutioner().execAndReturn(new Abs(error.dup())).sum(0);
  INDArray squaredErrorSum=error.mul(error).sum(0);
  sumAbsErrorsPerColumn.addi(absErrorSum);
  sumSquaredErrorsPerColumn.addi(squaredErrorSum);
  sumOfProducts.addi(labels.mul(predictions).sum(0));
  sumSquaredLabels.addi(labels.mul(labels).sum(0));
  sumSquaredPredicted.addi(predictions.mul(predictions).sum(0));
  int nRows=labels.size(0);
  for (int i=0; i < nRows; i++) {
    exampleCount++;
    INDArray lRow=labels.getRow(i);
    INDArray pRow=predictions.getRow(i);
    INDArray deltaPredicted=pRow.sub(currentPredictionMean);
    INDArray deltaActual=lRow.sub(currentMean);
    currentMean.addi(deltaActual.div(exampleCount));
    currentPredictionMean.addi(deltaPredicted.div(exampleCount));
    m2Actual.addi(deltaActual.muli(lRow.sub(currentMean)));
  }
}
