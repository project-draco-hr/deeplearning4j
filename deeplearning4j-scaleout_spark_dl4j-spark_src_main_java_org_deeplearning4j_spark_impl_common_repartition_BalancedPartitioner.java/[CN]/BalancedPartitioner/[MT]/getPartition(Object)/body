{
  int elementIdx=key.hashCode();
  if (elementIdx <= (elementsPerPartition + 1) * remainder) {
    int outputPartition=elementIdx / (elementsPerPartition + 1);
    if (outputPartition >= numPartitions) {
      outputPartition=getRandom().nextInt(numPartitions);
    }
    return outputPartition;
  }
 else {
    int numValsInLargerPartitions=remainder * (elementsPerPartition + 1);
    int idxInSmallerPartitions=elementIdx - numValsInLargerPartitions;
    int smallPartitionIdx=idxInSmallerPartitions / elementsPerPartition;
    int outputPartition=remainder + smallPartitionIdx;
    if (outputPartition >= numPartitions) {
      outputPartition=getRandom().nextInt(numPartitions);
    }
    return outputPartition;
  }
}
