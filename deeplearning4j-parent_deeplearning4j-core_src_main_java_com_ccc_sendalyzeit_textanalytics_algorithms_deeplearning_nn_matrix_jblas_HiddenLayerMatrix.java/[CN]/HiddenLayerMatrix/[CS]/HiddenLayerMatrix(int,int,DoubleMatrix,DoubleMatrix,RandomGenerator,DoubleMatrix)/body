{
  this.n_in=n_in;
  this.n_out=n_out;
  this.input=input;
  if (rng == null) {
    this.rng=new MersenneTwister(1234);
  }
 else   this.rng=rng;
  if (W == null) {
    double a=1.0 / (double)n_in;
    UniformRealDistribution u=new UniformRealDistribution(rng,-a,a);
    this.W=DoubleMatrix.zeros(n_in,n_out);
    for (int i=0; i < this.W.rows; i++)     for (int j=0; j < this.W.columns; j++)     this.W.put(i,j,u.sample());
  }
 else   this.W=W;
  if (b == null)   this.b=DoubleMatrix.zeros(n_out);
 else   this.b=b;
}
