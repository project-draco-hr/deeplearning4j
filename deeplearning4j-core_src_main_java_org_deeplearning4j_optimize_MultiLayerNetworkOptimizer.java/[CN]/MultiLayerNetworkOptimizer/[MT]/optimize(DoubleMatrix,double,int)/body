{
  network.feedForward(network.getInput());
  DoubleMatrix layerInput=network.getSigmoidLayers()[network.getSigmoidLayers().length - 1].sampleHiddenGivenVisible();
  network.getLogLayer().setInput(layerInput);
  network.getLogLayer().setLabels(labels);
  if (layerInput.rows != labels.rows) {
    throw new IllegalStateException("Labels not equal to input");
  }
  if (!network.isForceNumEpochs())   network.getLogLayer().trainTillConvergence(lr,epochs);
 else {
    log.info("Training for " + epochs + " epochs");
    for (int i=0; i < epochs; i++) {
      network.getLogLayer().train(layerInput,labels,lr);
    }
  }
  if (network.isShouldBackProp())   network.backProp(lr,epochs);
}
