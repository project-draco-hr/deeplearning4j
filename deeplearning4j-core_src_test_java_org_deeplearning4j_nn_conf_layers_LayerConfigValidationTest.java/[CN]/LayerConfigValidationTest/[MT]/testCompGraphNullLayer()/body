{
  ComputationGraphConfiguration.GraphBuilder gb=new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).learningRate(0.01).iterations(3).seed(42).miniBatch(false).l1(0.2).l2(0.2).rmsDecay(0.3).regularization(true).updater(Updater.RMSPROP).graphBuilder().addInputs("in").addLayer("L" + 1,new GravesLSTM.Builder().nIn(20).updater(Updater.RMSPROP).nOut(10).weightInit(WeightInit.XAVIER).dropOut(0.4).l1(0.3).activation("sigmoid").build(),"in").addLayer("output",new RnnOutputLayer.Builder().nIn(20).nOut(10).activation("softmax").weightInit(WeightInit.VI).build(),"L" + 1).setOutputs("output");
  ComputationGraphConfiguration conf=gb.build();
  ComputationGraph cg=new ComputationGraph(conf);
  cg.init();
}
