{
  ComputationGraphConfiguration conf=new ComputationGraphConfiguration();
  conf.backprop=backprop;
  conf.pretrain=pretrain;
  conf.backpropType=backpropType;
  conf.tbpttBackLength=tbpttBackLength;
  conf.tbpttFwdLength=tbpttFwdLength;
  conf.layerNamesMap=layerNamesMap;
  conf.layerNumbersMap=layerNumbersMap;
  conf.layerInputs=layerInputs;
  conf.inputPreProcessors=inputPreProcessors;
  conf.networkInputs=networkInputs;
  conf.networkOutputs=networkOutputs;
  Map<String,NeuralNetConfiguration> layers=new HashMap<>();
  for (  Map.Entry<String,NeuralNetConfiguration.Builder> entry : this.layers.entrySet()) {
    layers.put(entry.getKey(),entry.getValue().build());
  }
  conf.layers=layers;
  conf.graphNodes=this.graphNodes;
  conf.graphNodeInputs=this.graphNodeInputs;
  if (!conf.validate()) {
    throw new IllegalStateException("Invalid configuration");
  }
  return conf;
}
