{
  useAdaGrad=conf.getBoolean(Word2VecVariables.ADAGRAD,false);
  negative=conf.getDouble(Word2VecVariables.NEGATIVE,5);
  numWords=conf.getInt(Word2VecVariables.NUM_WORDS,1);
  window=conf.getInt(Word2VecVariables.WINDOW,5);
  alpha=conf.getDouble(Word2VecVariables.ALPHA,0.025f);
  minAlpha=conf.getDouble(Word2VecVariables.MIN_ALPHA,1e-2f);
  totalWords=conf.getInt(Word2VecVariables.NUM_WORDS,1);
  vectorLength=conf.getInt(Word2VecVariables.VECTOR_LENGTH,100);
  initExpTable();
  if (negative > 0 && conf.contains(Word2VecVariables.TABLE)) {
    try {
      ByteArrayInputStream bis=new ByteArrayInputStream(conf.get(Word2VecVariables.TABLE).getBytes());
      DataInputStream dis=new DataInputStream(bis);
      table=Nd4j.read(dis);
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
  }
}
