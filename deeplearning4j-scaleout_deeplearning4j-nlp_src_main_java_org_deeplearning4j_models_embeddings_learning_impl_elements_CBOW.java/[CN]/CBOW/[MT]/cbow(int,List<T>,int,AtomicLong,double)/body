{
  int end=window * 2 + 1 - b;
  int cw=0;
  INDArray neu1=Nd4j.zeros(lookupTable.layerSize());
  INDArray neu1e=Nd4j.zeros(lookupTable.layerSize());
  T currentWord=sentence.get(i);
  for (int a=b; a < end; a++) {
    if (a != window) {
      int c=i - window + a;
      if (c >= 0 && c < sentence.size()) {
        T lastWord=sentence.get(c);
        neu1.addiRowVector(syn0.getRow(lastWord.getIndex()));
        cw++;
      }
    }
  }
  neu1.divi(cw);
  for (int p=0; p < currentWord.getCodeLength(); p++) {
    double f=0;
    int code=currentWord.getCodes().get(p);
    int point=currentWord.getPoints().get(p);
    INDArray syn1row=syn1.getRow(point);
    double dot=Nd4j.getBlasWrapper().dot(neu1,syn1.getRow(point));
    if (dot < -MAX_EXP || dot >= MAX_EXP)     continue;
    int idx=(int)((dot + MAX_EXP) * ((double)expTable.length / MAX_EXP / 2.0));
    if (idx >= expTable.length)     continue;
    f=expTable[idx];
    double g=(1 - code - f) * alpha;
    Nd4j.getBlasWrapper().level1().axpy(syn1row.length(),g,syn1row,neu1e);
    Nd4j.getBlasWrapper().level1().axpy(syn1row.length(),g,neu1,syn1row);
  }
  for (int a=b; a < end; a++) {
    if (a != window) {
      int c=i - window + a;
      if (c >= 0 && c < sentence.size()) {
        T lastWord=sentence.get(c);
        syn0.getRow(lastWord.getIndex()).addiRowVector(neu1e);
        cw++;
      }
    }
  }
}
