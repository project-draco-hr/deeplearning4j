{
  File rootDir=new ClassPathResource("tripledir").getFile();
  LabelAwareSentenceIterator iter=new LabelAwareFileSentenceIterator(rootDir);
  TokenizerFactory tokenizerFactory=new DefaultTokenizerFactory();
  TfIdfVectorizer vectorizer=new TfIdfVectorizer.Builder().setMinWordFrequency(1).setStopWords(new ArrayList<String>()).setTokenizerFactory(tokenizerFactory).setIterator(iter).build();
  vectorizer.fit();
  VocabWord word=vectorizer.getVocabCache().wordFor("file.");
  assumeNotNull(word);
  assertEquals(word,vectorizer.getVocabCache().tokenFor("file."));
  assertEquals(3,vectorizer.getVocabCache().totalNumberOfDocs());
  assertEquals(3,word.getSequencesCount());
  assertEquals(3,word.getElementFrequency(),0.1);
  VocabWord word1=vectorizer.getVocabCache().wordFor("1");
  assertEquals(1,word1.getSequencesCount());
  assertEquals(1,word1.getElementFrequency(),0.1);
  log.info("Labels used: " + vectorizer.getLabelsSource().getLabels());
  assertEquals(3,vectorizer.getLabelsSource().getNumberOfLabelsUsed());
  assertEquals(3,vectorizer.getVocabCache().totalNumberOfDocs());
  assertEquals(11,vectorizer.numWordsEncountered());
  INDArray vector=vectorizer.transform("This is 3 file.");
  log.info("TF-IDF vector: " + Arrays.toString(vector.data().asDouble()));
  assertEquals(0,vector.getDouble(0),0.001);
  assertEquals(0.088,vector.getDouble(1),0.001);
  assertEquals(0.088,vector.getDouble(2),0.001);
  assertEquals(0,vector.getDouble(3),0.001);
  assertEquals(0.119,vector.getDouble(4),0.001);
  assertEquals(0,vector.getDouble(5),0.001);
  assertEquals(0,vector.getDouble(6),0.001);
  DataSet dataSet=vectorizer.vectorize("This is 3 file.","label3");
  assertEquals(0.0,dataSet.getLabels().getDouble(0),0.1);
  assertEquals(0.0,dataSet.getLabels().getDouble(1),0.1);
  assertEquals(1.0,dataSet.getLabels().getDouble(2),0.1);
  File tempFile=File.createTempFile("somefile","Dsdas");
  tempFile.deleteOnExit();
  SerializationUtils.saveObject(vectorizer,tempFile);
  TfIdfVectorizer vectorizer2=SerializationUtils.readObject(tempFile);
  vectorizer2.setTokenizerFactory(tokenizerFactory);
  dataSet=vectorizer2.vectorize("This is 3 file.","label2");
  assertEquals(vector,dataSet.getFeatureMatrix());
}
