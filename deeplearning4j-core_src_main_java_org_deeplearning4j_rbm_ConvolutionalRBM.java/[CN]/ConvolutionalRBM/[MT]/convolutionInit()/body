{
  if (convolutionInitCalled)   return;
  W=new FourDTensor(filterSize[0],filterSize[1],numFilters[0],numFilters[1]);
  wRows=W.rows();
  wCols=W.columns();
  wSlices=W.slices();
  visI=FourDTensor.zeros(visibleSize[0],visibleSize[1],numFilters[0],numFilters[1]);
  hidI=FourDTensor.zeros(fmSize[0],fmSize[1],numFilters[0],numFilters[1]);
  convolutionInitCalled=true;
  vBias=DoubleMatrix.zeros(1);
  hBias=DoubleMatrix.zeros(numFilters[0]);
  for (int i=0; i < this.W.rows; i++)   W.putRow(i,new DoubleMatrix(dist.sample(W.columns)));
  wAdaGrad=new AdaGrad(W.rows,W.columns);
  vBiasAdaGrad=new AdaGrad(vBias.rows,vBias.columns);
  hBiasAdaGrad=new AdaGrad(hBias.rows,hBias.columns);
  convolutionInitCalled=true;
  dWeights=new FourDTensor(W.rows(),W.columns(),W.slices(),W.getNumTensor());
  this.normalizeByInputRows=false;
}
