{
  DoubleMatrix currInput=this.input;
  List<DoubleMatrix> activations=new ArrayList<>();
  activations.add(currInput);
  NeuralNetwork[] layers=getLayers();
  for (int i=0; i < layers.length; i++) {
    AutoEncoder layer=(AutoEncoder)getLayers()[i];
    layer.setInput(currInput);
    if (getSampleOrActivate() != null && getSampleOrActivate().get(i) != null && getSampleOrActivate().get(i) || !sampleFromHiddenActivations) {
      currInput=layer.reconstruct(currInput);
    }
 else     if (sampleFromHiddenActivations) {
      currInput=layer.sampleHiddenGivenVisible(layer.reconstruct(currInput)).getSecond();
    }
 else     currInput=layer.sampleHiddenGivenVisible(currInput).getSecond();
    activations.add(currInput);
  }
  if (getOutputLayer() != null) {
    getOutputLayer().setInput(currInput);
    if (getOutputLayer().getActivationFunction() == null)     if (outputActivationFunction != null)     outputLayer.setActivationFunction(outputActivationFunction);
 else     outputLayer.setActivationFunction(Activations.sigmoid());
    activations.add(getOutputLayer().output(currInput));
  }
  return activations;
}
