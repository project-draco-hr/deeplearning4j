{
  List<DoubleMatrix> R=new ArrayList<>();
  R.add(DoubleMatrix.zeros(input.rows,input.columns));
  List<Pair<DoubleMatrix,DoubleMatrix>> vWvB=unPack(v);
  List<DoubleMatrix> W=weightMatrices();
  for (int i=0; i < layers.length; i++) {
    AutoEncoder a=(AutoEncoder)getLayers()[i];
    ActivationFunction derivative=a.getAct();
    R.add(R.get(i).mmul(W.get(i)).add(acts.get(i).mmul(vWvB.get(i).getFirst().addRowVector(vWvB.get(i).getSecond())).add(1)).mul((derivative.applyDerivative(acts.get(i + 1)))));
  }
  R.add(R.get(R.size() - 1).mmul(W.get(W.size() - 1)).add(acts.get(acts.size() - 2).mmul(vWvB.get(vWvB.size() - 1).getFirst().addRowVector(vWvB.get(vWvB.size() - 1).getSecond()))).mul((outputLayer.getActivationFunction().applyDerivative(acts.get(acts.size() - 1)))));
  return R;
}
