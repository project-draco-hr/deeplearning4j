{
  this.dataSetPath=dataSetPath;
  distributedMap=hazelcast.getMap(DATA_SET_MAP);
  distributedMap.addEntryListener(new EntryListener<String,DataSet>(){
    @Override public void entryAdded(    EntryEvent<String,DataSet> event){
      SerializationUtils.saveObject(event.getValue(),new File(event.getKey()));
    }
    @Override public void entryRemoved(    EntryEvent<String,DataSet> event){
      File f=new File(event.getKey());
      if (f.exists())       f.delete();
    }
    @Override public void entryUpdated(    EntryEvent<String,DataSet> event){
      SerializationUtils.saveObject(event.getValue(),new File(event.getKey()));
    }
    @Override public void entryEvicted(    EntryEvent<String,DataSet> event){
    }
  }
,true);
}
