{
  DoubleMatrix pack=a.pack();
  DoubleMatrix ch=DoubleMatrix.zeros(1,pack.length);
  List<DoubleMatrix> rFeedForward=a.feedForwardR(ch);
  for (int i=0; i < rFeedForward.size(); i++) {
    r=new ClassPathResource("ract-" + i + ".txt");
    DoubleMatrix real=DoubleMatrix.loadAsciiFile(r.getFile().getAbsolutePath());
    DoubleMatrix test=rFeedForward.get(i);
    log.info("Sum for r " + i + " is "+ real.sum()+ " and "+ test.sum());
  }
  ch=DoubleMatrix.zeros(1,pack.length);
  List<DoubleMatrix> backward=a.computeDeltasR(ch);
  for (int i=0; i < backward.size(); i++) {
    r=new ClassPathResource("rdelta-" + i + ".txt");
    DoubleMatrix real=DoubleMatrix.loadAsciiFile(r.getFile().getAbsolutePath());
    DoubleMatrix test=backward.get(i);
    log.info("Sum for r backward prop " + i + " real "+ real.sum()+ " test "+ test.sum());
  }
  r=new ClassPathResource("gv.txt");
  DoubleMatrix gv=DoubleMatrix.loadAsciiFile(r.getFile().getAbsolutePath());
  DoubleMatrix gvTest=a.getBackPropRGradient(ch);
  log.info("Gv sum is " + gv.sum() + " with test gv sum "+ gvTest.sum());
}
