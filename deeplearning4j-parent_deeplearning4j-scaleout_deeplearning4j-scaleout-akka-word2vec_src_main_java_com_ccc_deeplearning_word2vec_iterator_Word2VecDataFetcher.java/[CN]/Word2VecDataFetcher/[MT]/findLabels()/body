{
  int linesCount=0;
  while (files.hasNext()) {
    File next=files.next();
    try {
      LineIterator lines=FileUtils.lineIterator(next);
      if (!lines.hasNext())       continue;
      for (String line=lines.nextLine(); lines.hasNext(); line=lines.nextLine()) {
        List<Window> windows=Windows.windows(line);
        totalExamples+=windows.size();
        linesCount++;
        if (trainWord2Vec)         vec.addToVocab(line);
        Matcher beginMatcher=begin.matcher(line);
        Matcher endMatcher=end.matcher(line);
        while (beginMatcher.find() && endMatcher.find()) {
          String beginGroup=beginMatcher.group();
          String endGroup=endMatcher.group();
          beginGroup=beginGroup.replace("<","").replace(">","");
          endGroup=endGroup.replace("<","").replace(">","");
          if (beginGroup.equals(endGroup)) {
            labels.add(beginGroup);
          }
        }
      }
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
  return linesCount;
}
