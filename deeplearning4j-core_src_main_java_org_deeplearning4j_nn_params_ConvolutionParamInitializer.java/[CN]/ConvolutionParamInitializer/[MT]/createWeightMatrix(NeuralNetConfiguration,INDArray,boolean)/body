{
  org.deeplearning4j.nn.conf.layers.ConvolutionLayer layerConf=(org.deeplearning4j.nn.conf.layers.ConvolutionLayer)conf.getLayer();
  if (initializeParams) {
    Distribution dist=Distributions.createDistribution(conf.getLayer().getDist());
    int[] kernel=layerConf.getKernelSize();
    return WeightInitUtil.initWeights(new int[]{layerConf.getNOut(),layerConf.getNIn(),kernel[0],kernel[1]},layerConf.getWeightInit(),dist,'c',weightView);
  }
 else {
    int[] kernel=layerConf.getKernelSize();
    return WeightInitUtil.reshapeWeights(new int[]{layerConf.getNOut(),layerConf.getNIn(),kernel[0],kernel[1]},weightView,'c');
  }
}
