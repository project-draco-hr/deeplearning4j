{
  int m=A.rows();
  int n=A.columns();
  int nrhs=B.columns();
  int minmn=min(m,n);
  int maxmn=max(m,n);
  if (B.rows() < maxmn) {
    throw new SizeException("Result matrix B must be padded to contain the solution matrix X!");
  }
  int smlsiz=NativeBlas.ilaenv(9,"DGELSD","",m,n,nrhs,0);
  int nlvl=max(0,(int)log2(minmn / (smlsiz + 1)) + 1);
  int[] iwork=new int[3 * minmn * nlvl + 11 * minmn];
  double[] s=new double[minmn];
  int[] rank=new int[1];
  int info=NativeBlas.dgelsd(m,n,nrhs,A.data(),0,m,B.data(),0,B.rows(),s,0,-1,rank,0,iwork,0);
  if (info == 0) {
    return;
  }
 else   if (info < 0) {
    throw new LapackArgumentException("DGESD",-info);
  }
 else   if (info > 0) {
    throw new LapackConvergenceException("DGESD",info + " off-diagonal elements of an intermediat bidiagonal form did not converge to 0.");
  }
}
