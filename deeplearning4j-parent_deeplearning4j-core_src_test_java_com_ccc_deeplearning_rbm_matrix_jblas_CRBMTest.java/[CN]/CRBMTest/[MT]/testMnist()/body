{
  MnistDataFetcher fetcher=new MnistDataFetcher();
  fetcher.fetch(1000);
  DataSet pair=fetcher.next();
  pair.roundToTheNearest(100);
  int numVisible=pair.getFirst().columns;
  RandomGenerator g=new MersenneTwister(123);
  CRBM r=new CRBM.Builder().numberOfVisible(numVisible).numHidden(1000).withRandom(g).build();
  DoubleMatrix input=pair.getFirst();
  for (int i=0; i < 1000; i++) {
    r.contrastiveDivergence(0.1,1,input);
    log.info("Entropy " + r.getReConstructionCrossEntropy());
  }
}
