{
  network.getOutputLayer().setLabels(labels);
  if (!network.isForceNumEpochs()) {
    if (network.isShouldBackProp())     network.backProp(lr,epochs,eval);
  }
 else {
    log.info("Training for " + epochs + " epochs");
    List<INDArray> activations=network.feedForward();
    INDArray train=activations.get(activations.size() - 1);
    for (int i=0; i < epochs; i++) {
      if (i % network.getDefaultConfiguration().getResetAdaGradIterations() == 0)       network.getOutputLayer().getAdaGrad().historicalGradient=null;
      network.getOutputLayer().train(train,labels,lr);
    }
    if (network.isShouldBackProp())     network.backProp(lr,epochs,eval);
  }
}
