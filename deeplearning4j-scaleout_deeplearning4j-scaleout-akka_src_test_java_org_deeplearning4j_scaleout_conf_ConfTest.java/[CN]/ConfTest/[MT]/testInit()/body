{
  Conf c=new Conf();
  c.setSparsity(1e-2);
  c.setDropOut(0.5);
  c.setUseRegularization(true);
  c.setK(1);
  c.setHiddenUnitByLayer(Collections.singletonMap(0,RBM.HiddenUnit.RECTIFIED));
  c.setVisibleUnitByLayer(Collections.singletonMap(0,RBM.VisibleUnit.GAUSSIAN));
  c.setMultiLayerClazz(DBN.class);
  c.setLayerSizes(new int[]{300,300,300});
  c.setnOut(2);
  c.setnIn(2);
  c.setUseAdaGrad(true);
  BaseMultiLayerNetwork build=c.init();
  DBN d=new DBN.Builder().withHiddenUnitsByLayer(Collections.singletonMap(0,RBM.HiddenUnit.RECTIFIED)).withVisibleUnitsByLayer(Collections.singletonMap(0,RBM.VisibleUnit.GAUSSIAN)).withSparsity(1e-2).useRegularization(true).withDropOut(0.5).hiddenLayerSizes(new int[]{300,300,300}).numberOfInputs(2).numberOfOutPuts(2).useAdaGrad(true).build();
  assertEquals(build,d);
}
