{
  for (  String p : SetUtils.union(new HashSet<>(positive),new HashSet<>(negative))) {
    if (!vocabCache.containsWord(p)) {
      return new ArrayList<>();
    }
  }
  WeightLookupTable weightLookupTable=lookupTable;
  INDArray words=Nd4j.create(positive.size() + negative.size(),weightLookupTable.layerSize());
  int row=0;
  for (  String s : positive) {
    words.putRow(row++,weightLookupTable.vector(s));
  }
  for (  String s : negative) {
    words.putRow(row++,weightLookupTable.vector(s).mul(-1));
  }
  INDArray mean=words.isMatrix() ? words.mean(0) : words;
  return wordsNearest(mean,top);
}
