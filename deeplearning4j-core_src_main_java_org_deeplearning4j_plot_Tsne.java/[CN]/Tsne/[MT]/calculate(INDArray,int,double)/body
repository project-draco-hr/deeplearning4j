{
  if (usePca)   X=PCA.pca(X,Math.min(50,X.columns()),normalize);
 else   if (normalize) {
    X=X.sub(X.min(Integer.MAX_VALUE));
    X=X.divi(X.max(Integer.MAX_VALUE));
    X=X.subiRowVector(X.mean(0));
  }
  if (nDims > X.columns())   nDims=X.columns();
  INDArray sumX=pow(X,2).sum(1);
  INDArray D=X.mmul(X.transpose()).mul(-2).addiRowVector(sumX).transpose().addiRowVector(sumX);
  INDArray y=null;
  try {
    y=Nd4j.readTxt("/home/agibsonccc/Desktop/y.txt"," ");
  }
 catch (  IOException e) {
    throw new IllegalStateException("weird");
  }
  INDArray p=d2p(D,perplexity,tolerance);
  p.muli(4);
  if (useAdaGrad) {
    if (adaGrad == null) {
      adaGrad=new AdaGrad(y.shape());
      adaGrad.setMasterStepSize(learningRate);
    }
  }
  for (int i=0; i < maxIter; i++) {
    step(y,p,i);
    if (i == switchMomentumIteration)     momentum=finalMomentum;
    if (i == stopLyingIteration)     p.divi(4);
  }
  return y;
}
