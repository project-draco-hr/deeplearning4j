{
  arr=arr.reshape(new int[]{1,arr.length});
  if (op == ScalarOp.NORM_1) {
    return NDArrayBlas.asum(arr);
  }
 else   if (op == ScalarOp.NORM_2) {
    return NDArrayBlas.nrm2(arr);
  }
 else   if (op == ScalarOp.NORM_MAX) {
    int i=NDArrayBlas.iamax(arr);
    return arr.get(i);
  }
  double s=0.0;
  for (int i=0; i < arr.length; i++) {
switch (op) {
case SUM:
      s+=arr.unSafeGet(i);
    break;
case MEAN:
  s+=arr.unSafeGet(i);
break;
case MAX:
if (arr.unSafeGet(i) > s) s=arr.unSafeGet(i);
break;
case MIN:
if (arr.unSafeGet(i) < s) s=arr.unSafeGet(i);
break;
case PROD:
s*=arr.get(i);
break;
}
}
if (op == ScalarOp.MEAN) s/=arr.length;
return s;
}
