{
  ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("in").setInputTypes(InputType.convolutional(10,8,3)).addLayer("layer",new ConvolutionLayer.Builder().kernelSize(2,2).padding(0,0).stride(1,1).build(),"in").addLayer("out",new OutputLayer.Builder().nOut(10).build(),"layer").setOutputs("out").pretrain(false).backprop(true).build();
  LayerVertex lv=(LayerVertex)conf.getVertices().get("layer");
  FeedForwardLayer l=((FeedForwardLayer)(lv).getLayerConf().getLayer());
  assertEquals(3,l.getNIn());
  assertNull(lv.getPreProcessor());
  conf=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("in").setInputTypes(InputType.convolutionalFlat(10,8,3)).addLayer("layer",new ConvolutionLayer.Builder().kernelSize(2,2).padding(0,0).stride(1,1).build(),"in").addLayer("out",new OutputLayer.Builder().nOut(10).build(),"layer").setOutputs("out").pretrain(false).backprop(true).build();
  lv=(LayerVertex)conf.getVertices().get("layer");
  l=((FeedForwardLayer)(lv).getLayerConf().getLayer());
  assertEquals(3,l.getNIn());
  assertNotNull(lv.getPreProcessor());
  InputPreProcessor preProcessor=lv.getPreProcessor();
  assertTrue(preProcessor instanceof FeedForwardToCnnPreProcessor);
  FeedForwardToCnnPreProcessor preproc=(FeedForwardToCnnPreProcessor)preProcessor;
  assertEquals(10,preproc.getInputHeight());
  assertEquals(8,preproc.getInputWidth());
  assertEquals(3,preproc.getNumChannels());
  conf=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("in").setInputTypes(InputType.convolutionalFlat(10,8,3)).addLayer("l0",new SubsamplingLayer.Builder().kernelSize(2,2).stride(1,1).padding(0,0).build(),"in").addLayer("layer",new ConvolutionLayer.Builder().kernelSize(2,2).padding(0,0).stride(1,1).build(),"l0").addLayer("out",new OutputLayer.Builder().nOut(10).build(),"layer").setOutputs("out").pretrain(false).backprop(true).build();
  lv=(LayerVertex)conf.getVertices().get("l0");
  SubsamplingLayer sl=((SubsamplingLayer)(lv).getLayerConf().getLayer());
  assertNotNull(lv.getPreProcessor());
  preProcessor=lv.getPreProcessor();
  assertTrue(preProcessor instanceof FeedForwardToCnnPreProcessor);
  preproc=(FeedForwardToCnnPreProcessor)preProcessor;
  assertEquals(10,preproc.getInputHeight());
  assertEquals(8,preproc.getInputWidth());
  assertEquals(3,preproc.getNumChannels());
  lv=(LayerVertex)conf.getVertices().get("layer");
  l=((FeedForwardLayer)(lv).getLayerConf().getLayer());
  assertEquals(3,l.getNIn());
  assertNull(lv.getPreProcessor());
}
