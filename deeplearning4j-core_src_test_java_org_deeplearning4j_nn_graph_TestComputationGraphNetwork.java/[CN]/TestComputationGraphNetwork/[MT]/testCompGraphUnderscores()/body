{
  ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).graphBuilder().addInputs("input").addLayer("first_layer",new DenseLayer.Builder().nIn(4).nOut(5).build(),"input").addLayer("output_layer",new OutputLayer.Builder().nIn(5).nOut(3).build(),"first_layer").setOutputs("output_layer").pretrain(false).backprop(true).build();
  ComputationGraph net=new ComputationGraph(conf);
  net.init();
  DataSetIterator iris=new IrisDataSetIterator(10,150);
  while (iris.hasNext()) {
    net.fit(iris.next());
  }
}
