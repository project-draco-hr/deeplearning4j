{
  Pair<DoubleMatrix,DoubleMatrix> mnist=getMnistExampleBatch(1);
  runner=new ActorNetworkRunner();
  conf.put(CLASS,"com.ccc.sendalyzeit.textanalytics.algorithms.deeplearning.sda.matrix.jblas.StackedDenoisingAutoEncoder");
  conf.put(LAYER_SIZES,Arrays.toString(hidden_layer_sizes_arr).replace("[","").replace("]","").replace(" ",""));
  conf.put(SPLIT,String.valueOf(10));
  conf.put(N_IN,String.valueOf(mnist.getFirst().columns));
  conf.put(OUT,String.valueOf(mnist.getSecond().columns));
  conf.put(PRE_TRAIN_EPOCHS,String.valueOf(1));
  conf.put(FINE_TUNE_EPOCHS,String.valueOf(1));
  conf.put(PARAMS,new ExtraParamsBuilder().algorithm(PARAM_SDA).corruptionlevel(0.5).finetuneEpochs(finetune_epochs).finetuneLearningRate(finetune_lr).learningRate(pretrain_lr).epochs(pretraining_epochs).build());
  runner.setup(conf);
  Thread.sleep(10000);
  ActorNetworkRunner worker=new ActorNetworkRunner("worker",runner.getMasterAddress().toString());
  worker.setup(conf);
  runner.train(mnist.getFirst(),mnist.getSecond());
  BaseMultiLayerNetwork trained=runner.getResult().get();
  Evaluation eval=new Evaluation();
  DoubleMatrix predicted=trained.predict(mnist.getFirst());
  eval.eval(mnist.getSecond(),predicted);
  log.info(eval.stats());
}
