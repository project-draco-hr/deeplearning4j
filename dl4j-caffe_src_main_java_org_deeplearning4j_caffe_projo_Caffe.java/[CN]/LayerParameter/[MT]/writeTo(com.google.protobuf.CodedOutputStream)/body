{
  getSerializedSize();
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeBytes(1,getNameBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeBytes(2,getTypeBytes());
  }
  for (int i=0; i < bottom_.size(); i++) {
    output.writeBytes(3,bottom_.getByteString(i));
  }
  for (int i=0; i < top_.size(); i++) {
    output.writeBytes(4,top_.getByteString(i));
  }
  for (int i=0; i < lossWeight_.size(); i++) {
    output.writeFloat(5,lossWeight_.get(i));
  }
  for (int i=0; i < param_.size(); i++) {
    output.writeMessage(6,param_.get(i));
  }
  for (int i=0; i < blobs_.size(); i++) {
    output.writeMessage(7,blobs_.get(i));
  }
  for (int i=0; i < include_.size(); i++) {
    output.writeMessage(8,include_.get(i));
  }
  for (int i=0; i < exclude_.size(); i++) {
    output.writeMessage(9,exclude_.get(i));
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeEnum(10,phase_.getNumber());
  }
  for (int i=0; i < propagateDown_.size(); i++) {
    output.writeBool(11,propagateDown_.get(i));
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeMessage(100,transformParam_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeMessage(101,lossParam_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    output.writeMessage(102,accuracyParam_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeMessage(103,argmaxParam_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeMessage(104,concatParam_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeMessage(105,contrastiveLossParam_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    output.writeMessage(106,convolutionParam_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    output.writeMessage(107,dataParam_);
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    output.writeMessage(108,dropoutParam_);
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    output.writeMessage(109,dummyDataParam_);
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    output.writeMessage(110,eltwiseParam_);
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    output.writeMessage(111,expParam_);
  }
  if (((bitField0_ & 0x00010000) == 0x00010000)) {
    output.writeMessage(112,hdf5DataParam_);
  }
  if (((bitField0_ & 0x00020000) == 0x00020000)) {
    output.writeMessage(113,hdf5OutputParam_);
  }
  if (((bitField0_ & 0x00040000) == 0x00040000)) {
    output.writeMessage(114,hingeLossParam_);
  }
  if (((bitField0_ & 0x00080000) == 0x00080000)) {
    output.writeMessage(115,imageDataParam_);
  }
  if (((bitField0_ & 0x00100000) == 0x00100000)) {
    output.writeMessage(116,infogainLossParam_);
  }
  if (((bitField0_ & 0x00200000) == 0x00200000)) {
    output.writeMessage(117,innerProductParam_);
  }
  if (((bitField0_ & 0x00800000) == 0x00800000)) {
    output.writeMessage(118,lrnParam_);
  }
  if (((bitField0_ & 0x01000000) == 0x01000000)) {
    output.writeMessage(119,memoryDataParam_);
  }
  if (((bitField0_ & 0x02000000) == 0x02000000)) {
    output.writeMessage(120,mvnParam_);
  }
  if (((bitField0_ & 0x04000000) == 0x04000000)) {
    output.writeMessage(121,poolingParam_);
  }
  if (((bitField0_ & 0x08000000) == 0x08000000)) {
    output.writeMessage(122,powerParam_);
  }
  if (((bitField0_ & 0x80000000) == 0x80000000)) {
    output.writeMessage(123,reluParam_);
  }
  if (((bitField1_ & 0x00000002) == 0x00000002)) {
    output.writeMessage(124,sigmoidParam_);
  }
  if (((bitField1_ & 0x00000004) == 0x00000004)) {
    output.writeMessage(125,softmaxParam_);
  }
  if (((bitField1_ & 0x00000010) == 0x00000010)) {
    output.writeMessage(126,sliceParam_);
  }
  if (((bitField1_ & 0x00000020) == 0x00000020)) {
    output.writeMessage(127,tanhParam_);
  }
  if (((bitField1_ & 0x00000040) == 0x00000040)) {
    output.writeMessage(128,thresholdParam_);
  }
  if (((bitField1_ & 0x00000080) == 0x00000080)) {
    output.writeMessage(129,windowDataParam_);
  }
  if (((bitField0_ & 0x20000000) == 0x20000000)) {
    output.writeMessage(130,pythonParam_);
  }
  if (((bitField0_ & 0x10000000) == 0x10000000)) {
    output.writeMessage(131,preluParam_);
  }
  if (((bitField1_ & 0x00000008) == 0x00000008)) {
    output.writeMessage(132,sppParam_);
  }
  if (((bitField1_ & 0x00000001) == 0x00000001)) {
    output.writeMessage(133,reshapeParam_);
  }
  if (((bitField0_ & 0x00400000) == 0x00400000)) {
    output.writeMessage(134,logParam_);
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    output.writeMessage(135,flattenParam_);
  }
  if (((bitField0_ & 0x40000000) == 0x40000000)) {
    output.writeMessage(136,reductionParam_);
  }
  getUnknownFields().writeTo(output);
}
