{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,getNameBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,getTypeBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(3,numOutput_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(4,biasterm_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,weightFiller_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,biasFiller_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(7,pad_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(8,kernelsize_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(9,group_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(10,stride_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    size+=com.google.protobuf.CodedOutputStream.computeEnumSize(11,pool_.getNumber());
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(12,dropoutRatio_);
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(13,localSize_);
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(14,alpha_);
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(15,beta_);
  }
  if (((bitField0_ & 0x00010000) == 0x00010000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(16,getSourceBytes());
  }
  if (((bitField0_ & 0x00020000) == 0x00020000)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(17,scale_);
  }
  if (((bitField0_ & 0x00040000) == 0x00040000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(18,getMeanfileBytes());
  }
  if (((bitField0_ & 0x00080000) == 0x00080000)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(19,batchsize_);
  }
  if (((bitField0_ & 0x00100000) == 0x00100000)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(20,cropsize_);
  }
  if (((bitField0_ & 0x00200000) == 0x00200000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(21,mirror_);
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(22,k_);
  }
  for (int i=0; i < blobs_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(50,blobs_.get(i));
  }
{
    int dataSize=0;
    dataSize=4 * getBlobsLrList().size();
    size+=dataSize;
    size+=2 * getBlobsLrList().size();
  }
{
    int dataSize=0;
    dataSize=4 * getWeightDecayList().size();
    size+=dataSize;
    size+=2 * getWeightDecayList().size();
  }
  if (((bitField0_ & 0x00400000) == 0x00400000)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(53,randSkip_);
  }
  if (((bitField0_ & 0x00800000) == 0x00800000)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(54,detFgThreshold_);
  }
  if (((bitField0_ & 0x01000000) == 0x01000000)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(55,detBgThreshold_);
  }
  if (((bitField0_ & 0x02000000) == 0x02000000)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(56,detFgFraction_);
  }
  if (((bitField0_ & 0x04000000) == 0x04000000)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(58,detContextPad_);
  }
  if (((bitField0_ & 0x08000000) == 0x08000000)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(59,getDetCropModeBytes());
  }
  if (((bitField0_ & 0x10000000) == 0x10000000)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(60,newNum_);
  }
  if (((bitField0_ & 0x20000000) == 0x20000000)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(61,newChannels_);
  }
  if (((bitField0_ & 0x40000000) == 0x40000000)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(62,newHeight_);
  }
  if (((bitField0_ & 0x80000000) == 0x80000000)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(63,newWidth_);
  }
  if (((bitField1_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(64,shuffleImages_);
  }
  if (((bitField1_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(65,concatDim_);
  }
  if (((bitField1_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(1001,hdf5OutputParam_);
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
