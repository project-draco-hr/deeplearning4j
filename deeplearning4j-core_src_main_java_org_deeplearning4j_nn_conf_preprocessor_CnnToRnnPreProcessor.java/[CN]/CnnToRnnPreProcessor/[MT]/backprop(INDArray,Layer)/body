{
  int[] shape=output.shape();
  INDArray output2d;
  if (shape[0] == 1) {
    output2d=output.tensorAlongDimension(0,1,2);
  }
 else   if (shape[2] == 1) {
    output2d=output.tensorAlongDimension(0,1,0);
  }
 else {
    INDArray permuted3d=output.permute(0,2,1);
    output2d=permuted3d.reshape(shape[0] * shape[2],shape[1]);
  }
  if (shape[1] != product)   throw new IllegalArgumentException("Invalid input: expected output size(1)=" + shape[1] + " must be equal to "+ inputHeight+ " x columns "+ inputWidth+ " x depth "+ numChannels+ " = "+ product+ ", received: "+ shape[1]);
  return output2d.reshape(output2d.size(0),numChannels,inputHeight,inputWidth);
}
