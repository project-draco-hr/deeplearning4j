{
  currEpochs++;
  if (currEpochs < epochs) {
    mediator.tell(new DistributedPubSubMediator.Publish(MasterActor.BROADCAST,result),mediator);
    log.info("Updating result on epoch " + currEpochs);
    try {
      Thread.sleep(15000);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
    }
    log.info("Starting next epoch");
    mediator.tell(new DistributedPubSubMediator.Publish(MasterActor.RESULT,samples),mediator);
  }
  this.result=result;
  mediator.tell(new DistributedPubSubMediator.Publish(ModelSavingActor.SAVE,result),mediator);
}
