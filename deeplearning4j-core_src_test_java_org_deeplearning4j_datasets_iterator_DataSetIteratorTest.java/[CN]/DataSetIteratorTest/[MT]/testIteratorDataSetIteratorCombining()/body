{
  int batchSize=3;
  int numBatches=4;
  int featureSize=5;
  int labelSize=6;
  Nd4j.getRandom().setSeed(12345);
  List<DataSet> orig=new ArrayList<>();
  for (int i=0; i < batchSize * numBatches; i++) {
    INDArray features=Nd4j.rand(1,featureSize);
    INDArray labels=Nd4j.rand(1,labelSize);
    orig.add(new DataSet(features,labels));
  }
  DataSetIterator iter=new IteratorDataSetIterator(orig.iterator(),batchSize);
  int count=0;
  while (iter.hasNext()) {
    DataSet ds=iter.next();
    assertArrayEquals(new int[]{batchSize,featureSize},ds.getFeatureMatrix().shape());
    assertArrayEquals(new int[]{batchSize,labelSize},ds.getLabels().shape());
    List<INDArray> fList=new ArrayList<>();
    List<INDArray> lList=new ArrayList<>();
    for (int i=0; i < batchSize; i++) {
      DataSet dsOrig=orig.get(count * batchSize + i);
      fList.add(dsOrig.getFeatureMatrix());
      lList.add(dsOrig.getLabels());
    }
    INDArray fExp=Nd4j.vstack(fList);
    INDArray lExp=Nd4j.vstack(lList);
    assertEquals(fExp,ds.getFeatureMatrix());
    assertEquals(lExp,ds.getLabels());
    count++;
  }
  assertEquals(count,numBatches);
}
