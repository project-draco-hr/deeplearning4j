{
  StyleChart s=new StyleChart.Builder().width(640,LengthUnit.Px).height(480,LengthUnit.Px).margin(LengthUnit.Px,100,40,40,20).strokeWidth(2).pointSize(4).seriesColors(Color.GREEN,Color.MAGENTA).titleStyle(new StyleText.Builder().font("courier").fontSize(16).underline(true).color(Color.GRAY).build()).build();
  assertSerializable(s);
  Component c1=new ChartLine.Builder("Line Chart!",s).addSeries("series0",new double[]{0,1,2,3},new double[]{0,2,1,4}).addSeries("series1",new double[]{0,1,2,3},new double[]{0,1,0.5,2.5}).setGridWidth(1.0,null).build();
  assertSerializable(c1);
  Component c2=new ChartScatter.Builder("Scatter!",s).addSeries("series0",new double[]{0,1,2,3},new double[]{0,2,1,4}).showLegend(true).setGridWidth(0,0).build();
  assertSerializable(c2);
  Component c3=new ChartHistogram.Builder("Histogram!",s).addBin(-1,-0.5,0.2).addBin(-0.5,0,0.5).addBin(0,1,2.5).addBin(1,2,0.5).build();
  assertSerializable(c3);
  Component c4=new ChartStackedArea.Builder("Area Chart!",s).setXValues(new double[]{0,1,2,3,4,5}).addSeries("series0",new double[]{0,1,0,2,0,1}).addSeries("series1",new double[]{2,1,2,0.5,2,1}).build();
  assertSerializable(c4);
  StyleTable ts=new StyleTable.Builder().backgroundColor(Color.LIGHT_GRAY).headerColor(Color.ORANGE).borderWidth(1).columnWidths(LengthUnit.Percent,20,40,40).width(500,LengthUnit.Px).height(200,LengthUnit.Px).build();
  assertSerializable(ts);
  Component c5=new ComponentTable.Builder(ts).header("H1","H2","H3").content(new String[][]{{"row0col0","row0col1","row0col2"},{"row1col0","row1col1","row1col2"}}).build();
  assertSerializable(c5);
  StyleAccordion ac=new StyleAccordion.Builder().height(480,LengthUnit.Px).width(640,LengthUnit.Px).build();
  assertSerializable(ac);
  Component c6=new DecoratorAccordion.Builder(ac).title("Accordion - Collapsed By Default!").setDefaultCollapsed(true).addComponents(c5).build();
  assertSerializable(c6);
  Component c7=new ComponentText.Builder("Here's some blue text in a green div!",new StyleText.Builder().font("courier").fontSize(30).underline(true).color(Color.BLUE).build()).build();
  assertSerializable(c7);
  Style divStyle=new StyleDiv.Builder().width(30,LengthUnit.Percent).height(200,LengthUnit.Px).backgroundColor(Color.GREEN).floatValue(StyleDiv.FloatValue.right).build();
  assertSerializable(divStyle);
  Component c8=new ComponentDiv(divStyle,c7,new ComponentText("(Also: it's float right, 30% width, 200 px high )",null));
  assertSerializable(c8);
  List<ChartTimeline.TimelineEntry> entries=new ArrayList<>();
  for (int i=0; i < 10; i++) {
    entries.add(new ChartTimeline.TimelineEntry(String.valueOf(i),10 * i,10 * i + 5));
  }
  Component c9=new ChartTimeline.Builder("Title",s).addLane("Lane0",entries).build();
  assertSerializable(c9);
}
