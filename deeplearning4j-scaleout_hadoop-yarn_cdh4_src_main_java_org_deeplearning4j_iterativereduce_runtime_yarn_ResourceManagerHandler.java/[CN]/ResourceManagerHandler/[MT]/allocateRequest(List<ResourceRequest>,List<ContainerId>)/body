{
  if (amResourceManager == null)   throw new IllegalStateException("Cannot send allocation request before connecting to the resource manager!");
  LOG.info("Sending allocation request" + ", requestedSize=" + requestedContainers.size() + ", releasedSize="+ releasedContainers.size());
  for (  ResourceRequest req : requestedContainers)   LOG.info("Requesting container, host=" + req.getHostName() + ", amount="+ req.getNumContainers()+ ", memory="+ req.getCapability().getMemory()+ ", priority="+ req.getPriority().getPriority());
  for (  ContainerId rel : releasedContainers)   LOG.info("Releasing container: " + rel.getId());
  AllocateRequest request=Records.newRecord(AllocateRequest.class);
  request.setResponseId(rmRequestId.incrementAndGet());
  request.setApplicationAttemptId(appAttemptId);
  request.addAllAsks(requestedContainers);
  request.addAllReleases(releasedContainers);
  AllocateResponse response=amResourceManager.allocate(request);
  LOG.debug("Got an allocation response, " + ", responseId=" + response.getResponseId() + ", numClusterNodes="+ response.getNumClusterNodes()+ ", headroom="+ response.getAvailableResources().getMemory()+ ", allocatedSize="+ response.getAllocatedContainers().size()+ ", updatedNodes="+ response.getUpdatedNodes().size()+ ", reboot="+ response.getReboot()+ ", completedSize="+ response.getCompletedContainersStatuses().size());
  return response;
}
