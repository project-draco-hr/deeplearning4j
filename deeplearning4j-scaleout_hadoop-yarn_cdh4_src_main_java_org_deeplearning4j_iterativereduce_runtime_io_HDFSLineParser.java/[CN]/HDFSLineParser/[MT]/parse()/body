{
  if (file == null)   throw new IllegalStateException("File cannot be null. Call setFile() before calling parse()");
  if (parseComplete)   throw new IllegalStateException("File has alredy been parsed.");
  FSDataInputStream fis=null;
  BufferedReader br=null;
  try {
    fis=fs.open(file);
    br=new BufferedReader(new InputStreamReader(fis));
    fis.seek(readOffset);
    records=new LinkedList<>();
    LineReader ln=new LineReader(fis);
    Text line=new Text();
    long read=readOffset;
    if (readOffset != 0)     read+=ln.readLine(line);
    while (read < readLength) {
      int r=ln.readLine(line);
      if (r == 0)       break;
      try {
        T record=clazz.newInstance();
        record.fromString(line.toString());
        records.add(record);
      }
 catch (      Exception ex) {
        LOG.warn("Unable to instantiate the updateable record type",ex);
      }
      read+=r;
    }
  }
 catch (  IOException ex) {
    LOG.error("Encountered an error while reading from file " + file,ex);
  }
 finally {
    try {
      if (br != null)       br.close();
      if (fis != null)       fis.close();
    }
 catch (    IOException ex) {
      LOG.error("Can't close file",ex);
    }
  }
  LOG.debug("Read " + records.size() + " records");
}
