{
  MnistDataFetcher fetcher=new MnistDataFetcher(true);
  NeuralNetConfiguration conf=new NeuralNetConfiguration.Builder().momentum(0.9f).optimizationAlgo(OptimizationAlgorithm.ITERATION_GRADIENT_DESCENT).corruptionLevel(0.3).iterations(100).lossFunction(LossFunctions.LossFunction.RECONSTRUCTION_CROSSENTROPY).rng(new MersenneTwister(123)).learningRate(1e-1f).nIn(784).nOut(600).build();
  fetcher.fetch(100);
  DataSet d2=fetcher.next();
  INDArray input=d2.getFeatureMatrix();
  LayerFactory layerFactory=LayerFactories.getFactory(AutoEncoder.class);
  AutoEncoder da=layerFactory.create(conf);
  network=da;
  assertEquals(da.params(),da.params());
  assertEquals(471784,da.params().length());
  da.setParams(da.params());
  da.fit(input);
}
