{
  if (row) {
    if (input.ordering() == NDArrayFactory.FORTRAN) {
      INDArray max=input.max(1);
      INDArray diff=input.subColumnVector(max);
      new ArrayOps().from(diff).op(org.deeplearning4j.linalg.ops.transforms.Exp.class).build().exec();
      diff.diviColumnVector(diff.sum(1).transpose());
      return diff;
    }
 else {
      INDArray max=input.max(1);
      INDArray diff=input.subColumnVector(max);
      new ArrayOps().from(diff).op(org.deeplearning4j.linalg.ops.transforms.Exp.class).build().exec();
      diff.diviColumnVector(diff.sum(1).transpose());
      return diff;
    }
  }
 else {
    if (input.ordering() == NDArrayFactory.FORTRAN) {
      INDArray max=input.max(0).transpose();
      INDArray diff=input.subRowVector(max);
      new ArrayOps().from(diff).op(org.deeplearning4j.linalg.ops.transforms.Exp.class).build().exec();
      diff.diviRowVector(diff.sum(0));
      return diff;
    }
 else {
      INDArray max=input.max(0).transpose();
      INDArray diff=input.subRowVector(max);
      new ArrayOps().from(diff).op(org.deeplearning4j.linalg.ops.transforms.Exp.class).build().exec();
      diff.diviRowVector(diff.sum(0));
      return diff;
    }
  }
}
