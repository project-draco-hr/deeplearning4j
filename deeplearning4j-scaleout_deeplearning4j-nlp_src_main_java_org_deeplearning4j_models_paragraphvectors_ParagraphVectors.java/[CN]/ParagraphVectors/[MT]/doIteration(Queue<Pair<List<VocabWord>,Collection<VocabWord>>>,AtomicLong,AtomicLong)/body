{
  ActorSystem actorSystem=ActorSystem.create();
  final AtomicLong lastReport=new AtomicLong(System.currentTimeMillis());
  Parallelization.iterateInParallel(batch2,new Parallelization.RunnableWithParams<Pair<List<VocabWord>,Collection<VocabWord>>>(){
    @Override public void run(    Pair<List<VocabWord>,Collection<VocabWord>> sentenceWithLabel,    Object[] args){
      double alpha=Math.max(minLearningRate,ParagraphVectors.this.alpha.get() * (1 - (1.0 * (double)numWordsSoFar.get() / (double)totalWords)));
      long diff=Math.abs(lastReport.get() - numWordsSoFar.get());
      if (numWordsSoFar.get() > 0 && diff >= 10000) {
        log.info("Words so far " + numWordsSoFar.get() + " with alpha at "+ alpha);
        lastReport.set(numWordsSoFar.get());
      }
      long increment=0;
      double diff2=0.0;
      trainSentence(sentenceWithLabel,nextRandom,alpha);
      increment+=sentenceWithLabel.getFirst().size();
      numWordsSoFar.set(numWordsSoFar.get() + increment);
    }
  }
,actorSystem);
}
