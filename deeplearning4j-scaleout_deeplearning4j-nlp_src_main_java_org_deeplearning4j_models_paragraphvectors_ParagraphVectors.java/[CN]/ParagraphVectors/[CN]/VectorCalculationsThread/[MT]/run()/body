{
  final Queue<Pair<List<VocabWord>,Collection<VocabWord>>> batch2=new ConcurrentLinkedDeque<>();
  while (roller.hasMoreDocuments()) {
    LabelledDocument document=roller.nextLabelledDocument();
    if (document != null && document.getReferencedContent() != null && !document.getReferencedContent().isEmpty()) {
      List<VocabWord> batch=new ArrayList<>();
      ParagraphVectors.this.addWords(document.getReferencedContent(),nextRandom,batch);
      if (batch.isEmpty()) {
        log.info("Empty batch!");
        continue;
      }
      Collection<VocabWord> docLabels=new ArrayList<>();
      docLabels.add((VocabWord)vocab.wordFor(document.getLabel()));
      double alpha=0.025;
      for (int i=0; i < numIterations; i++) {
        alpha=Math.max(minLearningRate,ParagraphVectors.this.alpha.get() * (1 - (1.0 * (double)numWordsSoFar.get() / (double)totalWords)));
        trainSentence(new Pair<>(batch,docLabels),nextRandom,alpha);
        numWordsSoFar.addAndGet(document.getReferencedContent().size());
      }
      if (documentCounter.incrementAndGet() % 10000 == 0)       log.info("Epoch: [" + epoch + "], Documents learned: ["+ documentCounter.get()+ "], Alpha: ["+ alpha+ "]");
    }
  }
}
