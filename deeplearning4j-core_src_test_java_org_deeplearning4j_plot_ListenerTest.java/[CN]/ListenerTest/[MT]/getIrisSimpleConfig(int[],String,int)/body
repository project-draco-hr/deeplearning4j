{
  MultiLayerConfiguration c=new NeuralNetConfiguration.Builder().nIn(4).nOut(3).dist(new NormalDistribution(0,0.1)).lossFunction(LossFunctions.LossFunction.RMSE_XENT).optimizationAlgo(OptimizationAlgorithm.LINE_GRADIENT_DESCENT).iterations(iterations).batchSize(1).constrainGradientToUnitNorm(false).corruptionLevel(0.0).layer(new RBM.Builder().weightInit(WeightInit.DISTRIBUTION).activation(activationFunction).build()).learningRate(0.1).useAdaGrad(false).regularization(false).l1(0.0).l2(0.0).dropOut(0.0).momentum(0.0).applySparsity(false).sparsity(0.0).seed(12345L).list(hiddenLayerSizes.length + 1).layer(hiddenLayerSizes.length,new OutputLayer.Builder().activation("softmax").weightInit(WeightInit.DISTRIBUTION).dist(new NormalDistribution(0,0.1)).build()).hiddenLayerSizes(hiddenLayerSizes).useDropConnect(false).build();
  return c;
}
