{
  if (inputC.rows != 1 && inputC.columns != 1)   throw new IllegalArgumentException("Illegal input: Must be a vector");
  double len=inputC.length;
  ComplexDouble c2=new ComplexDouble(0,-2).muli(FastMath.PI).divi(len);
  ComplexDoubleMatrix range=MatrixUtil.complexRangeVector(0,len);
  ComplexDoubleMatrix matrix=exp(range.mmul(range.transpose().mul(c2)));
  ComplexDoubleMatrix complexRet=inputC.isRowVector() ? matrix.mmul(inputC) : inputC.mmul(matrix);
  if (n < complexRet.length) {
    ComplexDoubleMatrix newRet=new ComplexDoubleMatrix(1,n);
    for (int i=0; i < n; i++)     newRet.put(i,complexRet.get(i));
    return newRet;
  }
  return complexRet;
}
