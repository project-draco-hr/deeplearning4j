{
  if (getMultiLayerClazz().isAssignableFrom(DBN.class)) {
    return new DBN.Builder().withHiddenUnits(getHiddenUnit()).withVisibleUnits(getVisibleUnit()).withVisibleUnitsByLayer(getVisibleUnitByLayer()).withHiddenUnitsByLayer(getHiddenUnitByLayer()).activateForLayer(getActivationFunctionForLayer()).activateForLayer(getActivationFunctionForLayer()).numberOfInputs(getnIn()).numberOfOutPuts(getnOut()).withClazz(getMultiLayerClazz()).hiddenLayerSizes(getLayerSizes()).renderWeights(getRenderWeightEpochs()).withOutputActivationFunction(outputActivationFunction).lossFunctionByLayer(lossFunctionByLayer).useRegularization(isUseRegularization()).withDropOut(getDropOut()).withLossFunction(getLossFunction()).learningRateForLayer(getLearningRateForLayer()).withSparsity(getSparsity()).useAdaGrad(isUseAdaGrad()).withOptimizationAlgorithm(getOptimizationAlgorithm()).build();
  }
 else {
    return new BaseMultiLayerNetwork.Builder<>().learningRateForLayer(getLearningRateForLayer()).numberOfInputs(getnIn()).numberOfOutPuts(getnOut()).withClazz(getMultiLayerClazz()).withOutputActivationFunction(outputActivationFunction).hiddenLayerSizes(getLayerSizes()).renderWeights(getRenderWeightEpochs()).activateForLayer(getActivationFunctionForLayer()).useRegularization(isUseRegularization()).withDropOut(getDropOut()).withLossFunction(getLossFunction()).lossFunctionByLayer(lossFunctionByLayer).withSparsity(getSparsity()).useAdaGrad(isUseAdaGrad()).withOptimizationAlgorithm(getOptimizationAlgorithm()).build();
  }
}
