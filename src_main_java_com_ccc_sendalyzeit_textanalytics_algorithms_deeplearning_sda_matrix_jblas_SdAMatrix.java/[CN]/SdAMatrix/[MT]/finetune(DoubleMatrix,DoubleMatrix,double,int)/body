{
  for (int epoch=0; epoch < epochs; epoch++) {
    log.info("Epoch " + epoch + " on finetune");
    for (int n=0; n < N; n++) {
      DoubleMatrix layer_input=null;
      DoubleMatrix prev_layer_input;
      for (int i=0; i < n_layers; i++) {
        log.info("Training on " + i + " layer ");
        if (i == 0)         prev_layer_input=train_X.getRow(n);
 else         prev_layer_input=layer_input.dup();
        layer_input=sigmoid_layers[i].sample_h_given_v(prev_layer_input.transpose(),hidden_layer_sizes[i]);
      }
      DoubleMatrix inputCopy=layer_input.dup();
      log.info("Output training");
      log_layer.train(inputCopy,train_Y.getRow(n),lr);
    }
  }
}
