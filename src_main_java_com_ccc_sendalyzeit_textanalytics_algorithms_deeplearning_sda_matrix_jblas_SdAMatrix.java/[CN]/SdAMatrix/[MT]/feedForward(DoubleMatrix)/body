{
  double[] layer_input=new double[0];
  double linear_output;
  double[] prev_layer_input=new double[n_ins];
  for (int j=0; j < n_ins; j++)   prev_layer_input[j]=layer_input2.get(j);
  for (int i=0; i < n_layers; i++) {
    layer_input=new double[sigmoid_layers[i].n_out];
    for (int k=0; k < sigmoid_layers[i].n_out; k++) {
      linear_output=0.0;
      double[] w=sigmoid_layers[i].W.getRow(k).toArray();
      DoubleMatrix w2=new DoubleMatrix(w);
      DoubleMatrix prevInput=new DoubleMatrix(prev_layer_input);
      double score=sigmoid_layers[i].b.get(k) + w2.dot(prevInput);
      log.info(String.valueOf("Score for layer 1 " + score));
      layer_input[k]=sigmoid(linear_output);
    }
    log.info("Layer input arr " + Arrays.toString(layer_input));
    if (i < n_layers - 1) {
      prev_layer_input=new double[sigmoid_layers[i].n_out];
      for (int j=0; j < sigmoid_layers[i].n_out; j++)       prev_layer_input[j]=layer_input[j];
    }
  }
  return new DoubleMatrix(layer_input);
}
