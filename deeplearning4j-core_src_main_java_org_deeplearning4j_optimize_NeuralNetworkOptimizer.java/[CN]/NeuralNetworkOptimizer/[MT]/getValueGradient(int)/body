{
  if (iteration >= 1)   extraParams[extraParams.length - 1]=iteration;
  NeuralNetworkGradient g=network.getGradient(extraParams);
  double[] buffer=new double[getNumParameters()];
  INDArray wGradientFlattened=g.getwGradient().ravel();
  INDArray vBiasGradientFlattened=g.getvBiasGradient().ravel();
  INDArray hBiasGradientFlattened=g.gethBiasGradient().ravel();
  int idx=0;
  for (int i=0; i < g.getwGradient().length(); i++) {
    buffer[idx++]=(double)wGradientFlattened.getScalar(i).element();
  }
  for (int i=0; i < g.getvBiasGradient().length(); i++) {
    buffer[idx++]=(double)vBiasGradientFlattened.getScalar(i).element();
  }
  for (int i=0; i < g.gethBiasGradient().length(); i++) {
    buffer[idx++]=(double)hBiasGradientFlattened.getScalar(i).element();
  }
  return NDArrays.create(buffer);
}
