{
  Map<String,String> env=new LinkedHashMap<String,String>();
  for (  Map.Entry<Object,Object> entry : props.entrySet()) {
    String key=((String)entry.getKey());
    if (key.startsWith("env.")) {
      String envname=key.substring(4);
      String envvalue=(String)entry.getValue();
      env.put(envname,envvalue);
      LOG.debug("Adding " + envname + "="+ envvalue+ " to envrionment");
    }
  }
  StringBuffer sb=new StringBuffer("${CLASSPATH}:./:");
  String path;
  path=Utils.getFileName(props.getProperty(ConfigFields.JAR_PATH));
  sb.append("./").append(path).append(":");
  path=Utils.getFileName(props.getProperty(ConfigFields.APP_JAR_PATH));
  sb.append("./").append(path).append(":");
  for (  String c : props.getProperty(ConfigFields.APP_LIB_PATH).split(",")) {
    if (c.trim().equals(""))     continue;
    path=Utils.getFileName(c.trim());
    sb.append("./").append(path).append(":");
  }
  String[] env_vars={"HADOOP_COMMON_HOME","HADOOP_HDFS_HOME","HADOOP_MAPRED_HOME","YARN_HOME"};
  sb.append("$HADOOP_CONF_DIR");
  sb.append(':');
  for (  String envVar : env_vars) {
    sb.append("$" + envVar + "/*");
    sb.append(':');
    sb.append("$" + envVar + "/lib/*");
    sb.append(':');
  }
  if (props.get(ConfigFields.CLASSPATH_EXTRA) != null) {
    sb.append(props.get(ConfigFields.CLASSPATH_EXTRA)).append(":");
  }
  LOG.debug("Adding CLASSPATH=" + sb.toString() + " to environment");
  env.put("CLASSPATH",sb.toString());
  return env;
}
