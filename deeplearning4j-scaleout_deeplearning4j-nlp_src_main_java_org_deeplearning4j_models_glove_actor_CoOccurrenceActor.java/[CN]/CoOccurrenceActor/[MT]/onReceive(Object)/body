{
  if (message instanceof SentenceWork) {
    SentenceWork work=(SentenceWork)message;
    String s=work.getSentence();
    List<String> tokens=tokenizerFactory.create(s).getTokens();
    for (int i=0; i < tokens.size(); i++) {
      int wordIdx=cache.indexOf(tokens.get(i));
      if (wordIdx < 0)       continue;
      String w1=cache.wordFor(tokens.get(i)).getWord();
      if (w1.equals(Glove.UNK))       continue;
      int windowStop=Math.min(i + windowSize + 1,tokens.size());
      for (int j=i; j < windowStop; j++) {
        int otherWord=cache.indexOf(tokens.get(j));
        if (otherWord < 0)         continue;
        String w2=cache.wordFor(tokens.get(j)).getWord();
        if (w2.equals(Glove.UNK) || otherWord == wordIdx)         continue;
        if (wordIdx < otherWord) {
          coOCurreneCounts.incrementCount(tokens.get(i),tokens.get(j),1.0 / (j - i + Nd4j.EPS_THRESHOLD));
          occurrenceAllocations.incrementCount(work.getId(),1.0);
          if (symmetric) {
            coOCurreneCounts.incrementCount(tokens.get(j),tokens.get(i),1.0 / (j - i + Nd4j.EPS_THRESHOLD));
            occurrenceAllocations.incrementCount(work.getId(),1.0);
          }
        }
 else {
          coOCurreneCounts.incrementCount(tokens.get(j),tokens.get(i),1.0 / (j - i + Nd4j.EPS_THRESHOLD));
          occurrenceAllocations.incrementCount(work.getId(),1.0);
          if (symmetric) {
            coOCurreneCounts.incrementCount(tokens.get(i),tokens.get(j),1.0 / (j - i + Nd4j.EPS_THRESHOLD));
            occurrenceAllocations.incrementCount(work.getId(),1.0);
          }
        }
      }
    }
    processed.incrementAndGet();
  }
 else   unhandled(message);
}
