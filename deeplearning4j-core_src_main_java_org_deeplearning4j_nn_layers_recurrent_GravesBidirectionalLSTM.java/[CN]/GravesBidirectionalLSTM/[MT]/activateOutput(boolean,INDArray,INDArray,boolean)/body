{
  final FwdPassReturn forwardsEval=LSTMHelpers.activateHelper(this,this.conf,this.input,getParam(GravesBidirectionalLSTMParamInitializer.RECURRENT_WEIGHT_KEY_FORWARDS),getParam(GravesBidirectionalLSTMParamInitializer.INPUT_WEIGHT_KEY_FORWARDS),getParam(GravesBidirectionalLSTMParamInitializer.BIAS_KEY_FORWARDS),training,prevOutputActivations,prevMemCellState,forBackprop,true,GravesBidirectionalLSTMParamInitializer.INPUT_WEIGHT_KEY_FORWARDS);
  final FwdPassReturn backwardsEval=LSTMHelpers.activateHelper(this,this.conf,this.input,getParam(GravesBidirectionalLSTMParamInitializer.RECURRENT_WEIGHT_KEY_BACKWARDS),getParam(GravesBidirectionalLSTMParamInitializer.INPUT_WEIGHT_KEY_BACKWARDS),getParam(GravesBidirectionalLSTMParamInitializer.BIAS_KEY_BACKWARDS),training,prevOutputActivations,prevMemCellState,forBackprop,false,GravesBidirectionalLSTMParamInitializer.INPUT_WEIGHT_KEY_BACKWARDS);
  return forwardsEval.fwdPassOutput.add(backwardsEval.fwdPassOutput);
}
