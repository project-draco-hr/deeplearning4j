{
  LFWDataSetIterator iter=new LFWDataSetIterator(10,10,28,28);
  DataSet d=iter.next();
  d.normalizeZeroMeanZeroUnitVariance();
  int nOut=600;
  NeuralNetConfiguration conf=new NeuralNetConfiguration.Builder().hiddenUnit(org.deeplearning4j.nn.conf.layers.RBM.HiddenUnit.RECTIFIED).weightInit(WeightInit.VI).visibleUnit(org.deeplearning4j.nn.conf.layers.RBM.VisibleUnit.GAUSSIAN).layer(new org.deeplearning4j.nn.conf.layers.RBM()).optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).lossFunction(LossFunctions.LossFunction.RMSE_XENT).learningRate(1e-3f).nIn(d.numInputs()).nOut(nOut).build();
  RBM rbm=LayerFactories.getFactory(conf).create(conf,Arrays.<IterationListener>asList(new ScoreIterationListener(1)),0);
  rbm.fit(d.getFeatureMatrix());
}
