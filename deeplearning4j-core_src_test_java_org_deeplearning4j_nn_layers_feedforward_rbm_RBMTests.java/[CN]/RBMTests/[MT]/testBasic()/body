{
  float[][] data=new float[][]{{1,1,1,0,0,0},{1,0,1,0,0,0},{1,1,1,0,0,0},{0,0,1,1,1,0},{0,0,1,1,0,0},{0,0,1,1,1,0},{0,0,1,1,1,0}};
  INDArray input=Nd4j.create(data);
  NeuralNetConfiguration conf=new NeuralNetConfiguration.Builder().lossFunction(LossFunctions.LossFunction.RMSE_XENT).learningRate(1e-1f).layer(new org.deeplearning4j.nn.conf.layers.RBM.Builder().nIn(6).nOut(4).build()).build();
  RBM rbm=LayerFactories.getFactory(conf).create(conf);
  rbm.fit(input);
  assertEquals(24,rbm.gradient().getGradientFor("W").length());
}
