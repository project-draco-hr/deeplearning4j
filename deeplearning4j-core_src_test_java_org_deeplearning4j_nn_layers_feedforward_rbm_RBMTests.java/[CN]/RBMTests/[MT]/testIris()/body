{
  IrisDataFetcher fetcher=new IrisDataFetcher();
  fetcher.fetch(150);
  DataSet d=fetcher.next();
  d.normalizeZeroMeanZeroUnitVariance();
  NeuralNetConfiguration conf=new NeuralNetConfiguration.Builder().learningRate(1e-1f).layer(new org.deeplearning4j.nn.conf.layers.RBM.Builder(org.deeplearning4j.nn.conf.layers.RBM.HiddenUnit.RECTIFIED,org.deeplearning4j.nn.conf.layers.RBM.VisibleUnit.GAUSSIAN).nIn(d.numInputs()).nOut(3).lossFunction(LossFunctions.LossFunction.RMSE_XENT).build()).build();
  int numParams=conf.getLayer().initializer().numParams(conf,true);
  INDArray params=Nd4j.create(1,numParams);
  RBM r=(RBM)conf.getLayer().instantiate(conf,null,0,params,true);
  r.fit(d.getFeatureMatrix());
}
