{
  NeuralNetConfiguration conf=new NeuralNetConfiguration.Builder().learningRate(1e-1f).layer(new org.deeplearning4j.nn.conf.layers.RBM.Builder().nIn(6).nOut(4).lossFunction(LossFunctions.LossFunction.RMSE_XENT).build()).build();
  RBM rbm=LayerFactories.getFactory(conf).create(conf);
  INDArray rand2=Nd4j.rand(new int[]{1,rbm.numParams()});
  rbm.setParams(rand2);
  rbm.computeGradientAndScore();
  INDArray getParams=rbm.params();
  assertEquals(rand2,getParams);
}
