{
  if (w1 == null || w2 == null || w2.getIndex() < 0 || w1.getIndex() == w2.getIndex() || w1.getLabel().equals("STOP") || w2.getLabel().equals("STOP") || w1.getLabel().equals("UNK") || w2.getLabel().equals("UNK"))   return 0.0;
  INDArray l1=this.syn0.slice(w2.getIndex());
  double score=0.0;
  INDArray neu1e=Nd4j.create(configuration.getLayersSize());
  for (int i=0; i < w1.getCodeLength(); i++) {
    int code=w1.getCodes().get(i);
    int point=w1.getPoints().get(i);
    if (point >= syn0.rows() || point < 0)     throw new IllegalStateException("Illegal point " + point);
    INDArray syn1=this.syn1.slice(point);
    double dot=Nd4j.getBlasWrapper().dot(l1,syn1);
    score+=dot;
    if (dot < -MAX_EXP || dot >= MAX_EXP)     continue;
    int idx=(int)((dot + MAX_EXP) * ((double)expTable.length / MAX_EXP / 2.0));
    if (idx >= expTable.length)     continue;
    double f=expTable[idx];
    double g=useAdaGrad ? w1.getGradient(i,(1 - code - f),alpha) : (1 - code - f) * alpha;
    Nd4j.getBlasWrapper().level1().axpy(syn1.length(),g,syn1,neu1e);
    Nd4j.getBlasWrapper().level1().axpy(syn1.length(),g,l1,syn1);
  }
  score/=w1.getCodeLength();
  int target=w1.getIndex();
  int label;
  if (negative > 0)   for (int d=0; d < negative + 1; d++) {
    if (d == 0)     label=1;
 else {
      nextRandom.set(Math.abs(nextRandom.get() * 25214903917L + 11));
      int idx=Math.abs((int)(nextRandom.get() >> 16) % table.length());
      target=table.getInt(idx);
      if (target <= 0)       target=(int)nextRandom.get() % (vocabCache.numWords() - 1) + 1;
      if (target == w1.getIndex())       continue;
      label=0;
    }
    if (target >= syn1Neg.rows() || target < 0)     continue;
    double f=Nd4j.getBlasWrapper().dot(l1,syn1Neg.slice(target));
    double g;
    if (f > MAX_EXP)     g=useAdaGrad ? lookupTable.getGradient(target,(label - 1)) : (label - 1) * alpha;
 else     if (f < -MAX_EXP)     g=label * (useAdaGrad ? lookupTable.getGradient(target,alpha) : alpha);
 else {
      int idx=(int)((f + MAX_EXP) * (expTable.length / MAX_EXP / 2));
      if (idx >= expTable.length)       continue;
      g=useAdaGrad ? lookupTable.getGradient(target,label - expTable[idx]) : (label - expTable[idx]) * alpha;
    }
    Nd4j.getBlasWrapper().level1().axpy(lookupTable.layerSize(),g,syn1Neg.slice(target),neu1e);
    Nd4j.getBlasWrapper().level1().axpy(lookupTable.layerSize(),g,l1,syn1Neg.slice(target));
  }
  Nd4j.getBlasWrapper().level1().axpy(lookupTable.layerSize(),1.0,neu1e,l1);
  return score;
}
