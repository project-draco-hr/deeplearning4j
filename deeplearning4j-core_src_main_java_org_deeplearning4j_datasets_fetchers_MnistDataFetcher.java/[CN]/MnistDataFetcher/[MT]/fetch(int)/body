{
  if (!hasMore())   throw new IllegalStateException("Unable to get more; there are no more images");
  List<Pair<DoubleMatrix,DoubleMatrix>> toConvert=new ArrayList<>();
  for (int i=0; i < numExamples; i++, cursor++) {
    if (!hasMore())     break;
    if (man == null) {
      try {
        man=new MnistManager(rootMnist + MnistFetcher.trainingFilesFilename_unzipped,rootMnist + MnistFetcher.trainingFileLabelsFilename_unzipped);
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
    man.setCurrent(cursor);
    try {
      DoubleMatrix in=MatrixUtil.toMatrix(ArrayUtil.flatten(man.readImage()));
      for (int d=0; d < in.length; d++) {
        if (in.get(d) > 30) {
          in.put(d,1);
        }
 else         in.put(d,0);
      }
      DoubleMatrix out=createOutputVector(man.readLabel());
      boolean found=false;
      for (int col=0; col < out.length; col++) {
        if (out.get(col) > 0) {
          found=true;
          break;
        }
      }
      if (!found)       throw new IllegalStateException("Found a matrix without an outcome");
      toConvert.add(new Pair<>(in,out));
    }
 catch (    IOException e) {
      throw new IllegalStateException("Unable to read image");
    }
  }
  initializeCurrFromList(toConvert);
}
