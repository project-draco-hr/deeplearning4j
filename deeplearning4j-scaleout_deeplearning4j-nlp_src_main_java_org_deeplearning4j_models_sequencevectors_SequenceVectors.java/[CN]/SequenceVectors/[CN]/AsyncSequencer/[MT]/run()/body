{
  isRunning.set(true);
  while (this.iterator.hasMoreSequences()) {
    if (buffer.size() < limitLower) {
      update();
      AtomicInteger linesLoaded=new AtomicInteger(0);
      while (linesLoaded.getAndIncrement() < limitUpper && this.iterator.hasMoreSequences()) {
        Sequence<T> document=this.iterator.nextSequence();
        Sequence<T> newSequence=new Sequence<>();
        if (document.getSequenceLabel() != null) {
          T newLabel=vocab.wordFor(document.getSequenceLabel().getLabel());
          if (newLabel != null)           newSequence.setSequenceLabel(newLabel);
        }
        for (        T element : document.getElements()) {
          if (stopList.contains(element.getLabel()))           continue;
          T realElement=vocab.wordFor(element.getLabel());
          if (realElement != null) {
            newSequence.addElement(realElement);
          }
        }
        if (newSequence.getElements().size() > 0)         buffer.add(newSequence);
        linesLoaded.incrementAndGet();
      }
    }
 else {
      try {
        Thread.sleep(50);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
  isRunning.set(false);
}
