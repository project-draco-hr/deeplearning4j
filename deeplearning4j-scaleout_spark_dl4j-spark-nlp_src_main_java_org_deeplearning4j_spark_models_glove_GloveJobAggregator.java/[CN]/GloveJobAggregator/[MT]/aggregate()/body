{
  Job ret=new Job("","");
  org.deeplearning4j.scaleout.perform.models.glove.GloveResult aggregateResult=new org.deeplearning4j.scaleout.perform.models.glove.GloveResult();
  MultiDimensionalMap<String,String,List<INDArray>> workResults=MultiDimensionalMap.newHashBackedMap();
  Set<String> vocab=new HashSet<>();
  for (  GloveResult r : work) {
    for (    String syn0Key : r.getSyn0Change().keySet()) {
      List<INDArray> syn0List=getOrPutIfNotExists(workResults,syn0Key,"syn0");
      syn0List.add(r.getSyn0Change().get(syn0Key));
      vocab.add(syn0Key);
    }
  }
  for (  String key : vocab) {
    aggregateResult.getSyn0Change().put(key,average(workResults.get(key,"syn0")));
  }
  ret.setResult((Serializable)Arrays.asList(aggregateResult));
  return ret;
}
