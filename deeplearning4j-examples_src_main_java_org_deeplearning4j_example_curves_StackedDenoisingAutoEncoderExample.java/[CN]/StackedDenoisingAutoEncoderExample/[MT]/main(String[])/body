{
  DataSetIterator iter=new MultipleEpochsIterator(50,new MnistDataSetIterator(10,10));
  DataSet ne=iter.next();
  RandomGenerator rng=new MersenneTwister(123);
  StackedDenoisingAutoEncoder sda=new StackedDenoisingAutoEncoder.Builder().hiddenLayerSizes(new int[]{600,500,400}).withRng(rng).useRegularization(true).withL2(2e-5).numberOfInputs(784).numberOfOutPuts(iter.totalOutcomes()).build();
  sda.pretrain(iter,1,1e-1,1);
  iter.reset();
  sda.finetune(iter,1e-1,1);
  BufferedOutputStream bos=new BufferedOutputStream(new FileOutputStream("mnist-dbn.bin"));
  sda.write(bos);
  bos.flush();
  bos.close();
  log.info("Saved dbn");
  iter.reset();
  Evaluation eval=new Evaluation();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    DoubleMatrix predict=sda.output(next.getFirst());
    DoubleMatrix labels=next.getSecond();
    eval.eval(labels,predict);
  }
  log.info("Prediction f scores and accuracy");
  log.info(eval.stats());
}
