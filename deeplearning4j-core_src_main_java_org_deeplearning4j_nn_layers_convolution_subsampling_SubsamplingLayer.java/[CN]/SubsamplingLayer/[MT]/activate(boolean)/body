{
  INDArray pooled, ret;
  int n, c, kh, kw, outWidth, outHeight;
  if (training && conf.getLayer().getDropOut() > 0) {
    this.dropoutMask=Dropout.applyDropout(input,conf.getLayer().getDropOut(),dropoutMask);
  }
  pooled=Convolution.im2col(input,layerConf().getKernelSize(),layerConf().getStride(),layerConf().getPadding());
switch (layerConf().getPoolingType()) {
case AVG:
    return pooled.mean(2,3);
case MAX:
  n=pooled.size(0);
c=pooled.size(1);
kh=pooled.size(2);
kw=pooled.size(3);
outHeight=pooled.size(4);
outWidth=pooled.size(5);
ret=pooled.reshape(n,c,kh * kw,outHeight,outWidth);
maxIndexes=Nd4j.argMax(ret,2);
return ret.max(2);
case NONE:
return input;
default :
throw new IllegalStateException("Pooling type not supported!");
}
}
