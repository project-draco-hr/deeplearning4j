{
  this.nIn=nIn;
  this.nOut=nOut;
  this.input=input;
  this.activationFunction=activationFunction;
  if (rng == null) {
    this.rng=new MersenneTwister(1234);
  }
 else   this.rng=rng;
  if (W == null) {
    NormalDistribution u=new NormalDistribution(rng,0,.01,NormalDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
    this.W=DoubleMatrix.zeros(nIn,nOut);
    for (int i=0; i < this.W.rows; i++)     this.W.putRow(i,new DoubleMatrix(u.sample(this.W.columns)));
  }
 else   this.W=W;
  if (b == null)   this.b=DoubleMatrix.zeros(nOut);
 else   this.b=b;
}
