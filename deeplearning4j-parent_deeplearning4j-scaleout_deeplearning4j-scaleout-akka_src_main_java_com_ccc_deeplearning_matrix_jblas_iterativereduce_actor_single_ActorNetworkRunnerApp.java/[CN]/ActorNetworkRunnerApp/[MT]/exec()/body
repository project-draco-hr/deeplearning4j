{
  if (type != null && type.equals("worker")) {
    log.info("Initializing conf from zookeeper at " + host);
    ZookeeperConfigurationRetriever retriever=new ZookeeperConfigurationRetriever(host,2181,"master");
    Conf conf=retriever.retreive();
    String address=conf.get(MASTER_URL);
    runner=new ActorNetworkRunner(type,address);
    runner.setup(conf);
    retriever.close();
  }
 else {
    Conf conf=new Conf();
    getDataSet();
    conf.put(CLASS,getClassForAlgorithm());
    conf.put(SPLIT,String.valueOf(10));
    if (inputs < 1)     conf.put(N_IN,String.valueOf(iter.inputColumns()));
 else     conf.put(N_IN,String.valueOf(inputs));
    if (outputs < 1)     conf.put(OUT,String.valueOf(iter.totalOutcomes()));
 else     conf.put(OUT,String.valueOf(outputs));
    conf.put(PRE_TRAIN_EPOCHS,String.valueOf(pretrainEpochs));
    conf.put(SEED,String.valueOf(rngSeed));
    conf.put(LEARNING_RATE,String.valueOf(pretrainLearningRate));
    conf.put(L2,String.valueOf(l2));
    conf.put(MOMENTUM,String.valueOf(momentum));
    conf.put(CORRUPTION_LEVEL,corruptionLevel);
    conf.put(SPLIT,String.valueOf(split));
    conf.put(PARAMS,new ExtraParamsBuilder().algorithm(algorithm).corruptionlevel(corruptionLevel).k(k).learningRate(pretrainLearningRate).epochs(pretrainEpochs).build());
    runner=new ActorNetworkRunner("master",iter);
    runner.setup(conf);
    conf.put(MASTER_URL,runner.getMasterAddress().toString());
    ZooKeeperConfigurationRegister reg=new ZooKeeperConfigurationRegister(conf,"master",host,2181);
    reg.register();
    reg.close();
  }
}
