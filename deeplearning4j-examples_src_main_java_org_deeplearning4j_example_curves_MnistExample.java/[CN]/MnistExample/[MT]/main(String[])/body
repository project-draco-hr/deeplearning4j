{
  DataSetIterator iter=new MultipleEpochsIterator(50,new MnistDataSetIterator(10,10));
  DataSet ne=iter.next();
  RandomGenerator rng=new MersenneTwister(123);
  DBN dbn=new DBN.Builder().hiddenLayerSizes(new int[]{600,500,400}).withRng(rng).useRegularization(true).withL2(2e-5f).numberOfInputs(784).numberOfOutPuts(iter.totalOutcomes()).build();
  dbn.pretrain(iter,1,1e-1f,1);
  iter.reset();
  dbn.finetune(iter,1e-1f,1);
  BufferedOutputStream bos=new BufferedOutputStream(new FileOutputStream("mnist-dbn.bin"));
  dbn.write(bos);
  bos.flush();
  bos.close();
  log.info("Saved dbn");
  iter.reset();
  Evaluation eval=new Evaluation();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    INDArray predict=dbn.output(next.getFeatureMatrix());
    INDArray labels=next.getLabels();
    eval.eval(labels,predict);
  }
  log.info("Prediction f scores and accuracy");
  log.info(eval.stats());
}
