{
  INDArray vec=lookupTable.getVector(vertexIdx).dup();
  double norm2=vec.norm2Number().doubleValue();
  PriorityQueue<Pair<Double,Integer>> pq=new PriorityQueue<Pair<Double,Integer>>(new PairComparator());
  Level1 l1=Nd4j.getBlasWrapper().level1();
  for (int i=0; i < numVertices(); i++) {
    if (i == vertexIdx)     continue;
    INDArray other=lookupTable.getVector(i);
    double cosineSim=l1.dot(vec.length(),1.0,vec,other) / (norm2 * other.norm2Number().doubleValue());
    pq.add(new Pair<>(cosineSim,i));
  }
  int[] out=new int[top];
  for (int i=0; i < top; i++) {
    out[i]=pq.remove().getSecond();
  }
  return out;
}
