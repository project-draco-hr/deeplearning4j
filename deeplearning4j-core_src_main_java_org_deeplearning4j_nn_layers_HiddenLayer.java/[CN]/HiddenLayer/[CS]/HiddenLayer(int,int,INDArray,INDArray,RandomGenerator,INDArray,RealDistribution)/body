{
  this.nIn=nIn;
  this.nOut=nOut;
  this.input=input;
  if (rng == null)   this.rng=new MersenneTwister(1234);
 else   this.rng=rng;
  if (dist == null)   this.dist=new NormalDistribution(this.rng,0,.01,NormalDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
 else   this.dist=dist;
  if (W == null) {
    if (weightInit != null) {
      this.W=WeightInitUtil.initWeights(nIn,nOut,this.weightInit,activationFunction);
    }
 else {
      this.W=NDArrays.zeros(nIn,nOut);
      for (int i=0; i < this.W.rows(); i++)       this.W.putRow(i,NDArrays.create(this.dist.sample(this.W.columns())));
    }
  }
 else   this.W=W;
  if (b == null)   this.b=NDArrays.zeros(nOut);
 else   this.b=b;
}
