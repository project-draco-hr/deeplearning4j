{
  List<Point> points=new ArrayList<Point>(initialPointsList);
  clusterSet=new ClusterSet(distanceFunction);
  Random random=new Random();
  final Point center=points.remove(random.nextInt(points.size()));
  clusterSet.addNewClusterWithCenter(center);
  while (clusterSet.getClusterCount() < nbCluster) {
    INDArray dxs=computeDxs(points);
    double r=random.nextFloat() * dxs.getDouble(dxs.length() - 1);
    for (int i=0; i < dxs.length(); i++) {
      if (dxs.getDouble(i) >= r) {
        clusterSet.addNewClusterWithCenter(points.remove(i));
        break;
      }
    }
  }
}
