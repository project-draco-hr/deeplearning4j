{
  DataSetIterator irisData=new IrisDataSetIterator(150,150);
  DataSet next=irisData.next();
  next.normalizeZeroMeanZeroUnitVariance();
  int numExamples=next.numExamples();
  log.info("Training on " + numExamples);
  RBM r=new RBM.Builder().withHidden(RBM.HiddenUnit.RECTIFIED).withVisible(RBM.VisibleUnit.GAUSSIAN).numberOfVisible(irisData.inputColumns()).useAdaGrad(true).numHidden(10).normalizeByInputRows(false).useRegularization(false).build();
  r.trainTillConvergence(next.getFeatureMatrix(),1e-3f,new Object[]{1,1e-3f,2000});
  log.info("\nData " + String.valueOf("\n" + next.getFeatureMatrix()).replaceAll(";","\n"));
  log.info("\nReconstruct " + String.valueOf("\n" + r.reconstruct(r.getInput())).replaceAll(";","\n"));
}
