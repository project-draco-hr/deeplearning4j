{
  SparkDl4jMultiLayer sparkNet=getBasicNetwork();
  MultiLayerNetwork netCopy=sparkNet.getNetwork().clone();
  Evaluation evalExpected=new Evaluation();
  INDArray outLocal=netCopy.output(input,Layer.TrainingMode.TEST);
  evalExpected.eval(labels,outLocal);
  Evaluation evalActual=sparkNet.evaluate(sparkData);
  assertEquals(evalExpected.accuracy(),evalActual.accuracy(),1e-3);
  assertEquals(evalExpected.f1(),evalActual.f1(),1e-3);
  assertEquals(evalExpected.getNumRowCounter(),evalActual.getNumRowCounter(),1e-3);
  assertMapEquals(evalExpected.falseNegatives(),evalActual.falseNegatives());
  assertMapEquals(evalExpected.falsePositives(),evalActual.falsePositives());
  assertMapEquals(evalExpected.trueNegatives(),evalActual.trueNegatives());
  assertMapEquals(evalExpected.truePositives(),evalActual.truePositives());
  assertEquals(evalExpected.precision(),evalActual.precision(),1e-3);
  assertEquals(evalExpected.recall(),evalActual.recall(),1e-3);
  assertEquals(evalExpected.getConfusionMatrix(),evalActual.getConfusionMatrix());
}
