{
  if (this.getInput() == null)   initializeLayers(input.dup());
  if (isUseGaussNewtonVectorProductBackProp())   log.warn("Warning; using gauss newton vector back prop with pretrain is known to cause issues with obscenely large activations.");
  this.input=input;
  INDArray layerInput=null;
  for (int i=0; i < this.getnLayers(); i++) {
    if (i == 0)     layerInput=input;
 else     layerInput=this.getLayers()[i - 1].sampleHiddenGivenVisible(layerInput).getSecond();
    if (isForceNumEpochs()) {
      for (int iteration=0; iteration < iterations; iteration++) {
        getLayers()[i].train(layerInput,lr,new Object[]{corruptionLevel,lr});
        log.info("Error on iteration " + iteration + " for layer "+ (i + 1)+ " is "+ getLayers()[i].getReConstructionCrossEntropy());
        getLayers()[i].iterationDone(iteration);
      }
    }
 else     getLayers()[i].trainTillConvergence(layerInput,lr,new Object[]{corruptionLevel,lr,iterations});
  }
}
