{
  Pair<DoubleMatrix,DoubleMatrix> first=this.getMnistExample(1);
  int numIns=first.getFirst().columns;
  int numLabels=10;
  int[] layerSizes=new int[4];
  Arrays.fill(layerSizes,500);
  double lr=0.1;
  DBN dbn=new DBN.Builder().numberOfInputs(numIns).numberOfOutPuts(numLabels).withRng(new MersenneTwister(123)).hiddenLayerSizes(layerSizes).build();
  List<Pair<DoubleMatrix,DoubleMatrix>> list=this.getMnistExampleBatches(10,500);
  for (int iter=0; iter < list.size(); iter++) {
    Pair<DoubleMatrix,DoubleMatrix> curr=list.get(iter);
    int numCorrect=0;
    if (curr.getFirst().rows != curr.getSecond().rows)     throw new IllegalArgumentException("Rows are not the same");
    dbn.pretrain(curr.getFirst(),2,lr,200);
    dbn.finetune(curr.getSecond(),lr,500);
    DoubleMatrix predicted=dbn.predict(curr.getFirst());
    DoubleMatrix y=curr.getSecond();
    for (int i=0; i < curr.getFirst().rows; i++) {
      DoubleMatrix actualRow=y.getRow(i);
      DoubleMatrix predictedRow=predicted.getRow(i);
      int actualMax=SimpleBlas.iamax(actualRow);
      int predictedMax=SimpleBlas.iamax(predictedRow);
      if (actualMax == predictedMax)       numCorrect++;
    }
    log.info("Correct " + numCorrect + " on iteration "+ iter);
  }
}
