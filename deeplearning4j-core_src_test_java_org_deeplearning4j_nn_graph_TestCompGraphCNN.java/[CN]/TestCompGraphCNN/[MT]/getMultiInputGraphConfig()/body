{
  ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).graphBuilder().addInputs("input").setInputTypes(InputType.convolutional(32,32,3)).addLayer("cnn1",new ConvolutionLayer.Builder(4,4).stride(2,2).nIn(3).nOut(3).build(),"input").addLayer("cnn2",new ConvolutionLayer.Builder(4,4).stride(2,2).nIn(3).nOut(3).build(),"input").addLayer("max1",new SubsamplingLayer.Builder(SubsamplingLayer.PoolingType.MAX).stride(1,1).kernelSize(2,2).build(),"cnn1","cnn2").addLayer("dnn1",new DenseLayer.Builder().nOut(7).build(),"max1").addLayer("output",new OutputLayer.Builder().nIn(7).nOut(10).build(),"dnn1").setOutputs("output").pretrain(false).backprop(true).build();
  return conf;
}
