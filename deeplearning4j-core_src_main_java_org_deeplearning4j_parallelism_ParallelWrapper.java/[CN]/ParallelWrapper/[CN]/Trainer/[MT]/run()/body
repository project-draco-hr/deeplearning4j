{
  try {
    if (originalModel instanceof MultiLayerNetwork) {
      MultiLayerConfiguration conf=((MultiLayerNetwork)originalModel).getLayerWiseConfigurations().clone();
      this.replicatedModel=new MultiLayerNetwork(conf);
      ((MultiLayerNetwork)replicatedModel).init();
    }
 else     if (originalModel instanceof ComputationGraph) {
      this.replicatedModel=new ComputationGraph(((ComputationGraph)originalModel).getConfiguration().clone());
      ((ComputationGraph)this.replicatedModel).init();
    }
    if (!useMDS) {
      while (!shouldStop.get()) {
        DataSet dataSet=queue.poll(100,TimeUnit.MILLISECONDS);
        if (dataSet != null) {
          if (replicatedModel instanceof MultiLayerNetwork) {
            ((MultiLayerNetwork)replicatedModel).fit(dataSet);
          }
 else           if (replicatedModel instanceof ComputationGraph) {
            ((ComputationGraph)replicatedModel).fit(dataSet);
          }
          if (Nd4j.getExecutioner() instanceof GridExecutioner)           ((GridExecutioner)Nd4j.getExecutioner()).flushQueueBlocking();
          running.decrementAndGet();
        }
      }
    }
 else {
      MultiDataSet dataSet=queueMDS.poll(100,TimeUnit.MILLISECONDS);
      if (dataSet != null) {
        if (replicatedModel instanceof ComputationGraph) {
          ((ComputationGraph)replicatedModel).fit(dataSet);
        }
 else         throw new RuntimeException("MultiDataSet can be fit into ComputationGraph only");
        if (Nd4j.getExecutioner() instanceof GridExecutioner)         ((GridExecutioner)Nd4j.getExecutioner()).flushQueueBlocking();
        running.decrementAndGet();
      }
    }
  }
 catch (  Exception e) {
    this.thrownException=e;
  }
}
