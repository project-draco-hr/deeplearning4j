{
  SentenceIterator iter=new BasicLineIterator(inputFile.getAbsolutePath());
  TokenizerFactory t=new DefaultTokenizerFactory();
  t.setTokenPreProcessor(new CommonPreprocessor());
  Word2Vec vec=new Word2Vec.Builder().minWordFrequency(5).iterations(5).learningRate(0.025).layerSize(100).seed(42).sampling(0).negativeSample(5).windowSize(5).modelUtils(new BasicModelUtils<VocabWord>()).useAdaGrad(true).iterate(iter).workers(10).tokenizerFactory(t).elementsLearningAlgorithm(new CBOW<VocabWord>()).build();
  vec.fit();
  Collection<String> lst=vec.wordsNearest("day",10);
  log.info(Arrays.toString(lst.toArray()));
  double sim=vec.similarity("day","night");
  log.info("Day/night similarity: " + sim);
  assertTrue(lst.contains("week"));
  assertTrue(lst.contains("night"));
  assertTrue(lst.contains("year"));
}
