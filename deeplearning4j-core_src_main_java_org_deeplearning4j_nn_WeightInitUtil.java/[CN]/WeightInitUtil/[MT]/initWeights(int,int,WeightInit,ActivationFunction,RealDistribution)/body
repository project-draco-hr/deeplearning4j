{
  INDArray ret=Nd4j.randn(nIn,nOut);
switch (initScheme) {
case VI:
    double r=Math.sqrt(6) / Math.sqrt(nIn + nOut + 1);
  ret.muli(2).muli(r).subi(r);
return ret;
case DISTRIBUTION:
for (int i=0; i < ret.rows(); i++) {
ret.putRow(i,Nd4j.create(dist.sample(ret.columns())));
}
return ret;
case SIZE:
return uniformBasedOnInAndOut(new int[]{nIn,nOut},nIn,nOut);
}
throw new IllegalStateException("Illegal weight init value");
}
