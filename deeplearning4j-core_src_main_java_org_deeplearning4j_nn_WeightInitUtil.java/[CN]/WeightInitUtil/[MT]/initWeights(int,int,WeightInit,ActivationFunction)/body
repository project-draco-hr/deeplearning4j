{
  DoubleMatrix ret=DoubleMatrix.randn(nIn,nOut);
switch (initScheme) {
case SI:
    int maxNonZeroPerColumn=15;
  double shift=0, initCoeff=1;
int smallVal=0;
if (act instanceof RectifiedLinear) {
shift=1e-1;
initCoeff=0.25;
}
int fanOut=Math.min(maxNonZeroPerColumn,nOut);
for (int i=0; i < nOut; i++) {
DoubleMatrix perm=MatrixUtil.toMatrix(Permutations.randomPermutation(nIn)).reshape(nIn,1);
DoubleMatrix subIndices=perm.get(RangeUtils.interval(fanOut,perm.length),RangeUtils.all());
DoubleMatrix indices=perm.get(perm.get(subIndices,MatrixUtil.toMatrix(new int[]{i})));
DoubleMatrix randInit=ret.get(perm.get(indices).muli(smallVal));
if (randInit.length != 0) ret.put(indices,randInit);
}
ret.muli(initCoeff).add(shift);
return ret;
case VI:
double r=Math.sqrt(6) / Math.sqrt(nIn + nOut + 1);
ret.muli(2).muli(r).subi(r);
return ret;
}
throw new IllegalStateException("Illegal weight init value");
}
