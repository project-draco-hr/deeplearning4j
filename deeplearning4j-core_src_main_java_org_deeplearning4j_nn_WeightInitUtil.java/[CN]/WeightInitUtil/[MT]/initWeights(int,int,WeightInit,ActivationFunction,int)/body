{
  INDArray ret=NDArrays.randn(nIn,nOut);
switch (initScheme) {
case SI:
    double shift=0, initCoeff=1;
  int smallVal=0;
if (act instanceof RectifiedLinear) {
  shift=1e-1;
  initCoeff=0.25;
}
double fanOut=nOut;
for (int i=0; i < nOut; i++) {
int[] perm=ArrayUtil.randomPermutation(nIn);
for (int j=0; j < perm.length; j++) {
ret.put(perm[j],j,ret.getScalar(perm[j],j).muli(NDArrays.scalar(smallVal)));
}
}
ret.muli(NDArrays.scalar(initCoeff)).add(NDArrays.scalar(shift));
return ret;
case VI:
double r=Math.sqrt(6) / Math.sqrt(nIn + nOut + 1);
ret.muli(NDArrays.scalar(2)).muli(NDArrays.scalar(r)).subi(NDArrays.scalar(r));
return ret;
}
throw new IllegalStateException("Illegal weight init value");
}
