{
  if (useCurrent) {
    useCurrent=false;
    if (preProcessor != null)     preProcessor.preProcess(last);
    return last;
  }
  List<DataSet> dataSets=new ArrayList<>();
  for (int i=0; i < num; i++) {
    if (!hasNext())     break;
    if (recordReader instanceof SequenceRecordReader) {
      if (sequenceIter == null || !sequenceIter.hasNext()) {
        Collection<Collection<Writable>> sequenceRecord=((SequenceRecordReader)recordReader).sequenceRecord();
        sequenceIter=sequenceRecord.iterator();
      }
      Collection<Writable> record=sequenceIter.next();
      dataSets.add(getDataSet(record));
    }
 else {
      Collection<Writable> record=recordReader.next();
      dataSets.add(getDataSet(record));
    }
  }
  batchNum++;
  if (dataSets.isEmpty())   return new DataSet();
  DataSet ret=DataSet.merge(dataSets);
  last=ret;
  if (preProcessor != null)   preProcessor.preProcess(ret);
  if (recordReader.getLabels() != null)   ret.setLabelNames(recordReader.getLabels());
  return ret;
}
