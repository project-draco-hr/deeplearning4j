{
  system=ActorSystem.create(systemName);
  ActorRefUtils.addShutDownForSystem(system);
  mediator=DistributedPubSubExtension.get(system).mediator();
  epochs=conf.getPretrainEpochs();
  if (type.equals("master")) {
    if (iter == null)     throw new IllegalStateException("Unable to initialize no dataset to train");
    log.info("Starting master");
    masterAddress=startBackend(null,"master",conf,iter);
    try {
      Thread.sleep(60000);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
    }
    mediator.tell(new DistributedPubSubMediator.Publish(MasterActor.MASTER,this),mediator);
    log.info("Starting model saver");
    system.actorOf(Props.create(ModelSavingActor.class,",model-saver"));
    Cluster.get(system).join(masterAddress);
    conf.setMasterUrl(getMasterAddress().toString());
    conf.setMasterAbsPath(ActorRefUtils.absPath(masterActor,system));
    ActorRefUtils.registerConfWithZooKeeper(conf,system);
    log.info("Setup master with epochs " + epochs);
  }
 else {
    Conf c=conf.copy();
    Cluster cluster=Cluster.get(system);
    cluster.join(masterAddress);
    startWorker(masterAddress,c);
    log.info("Setup worker nodes");
  }
}
