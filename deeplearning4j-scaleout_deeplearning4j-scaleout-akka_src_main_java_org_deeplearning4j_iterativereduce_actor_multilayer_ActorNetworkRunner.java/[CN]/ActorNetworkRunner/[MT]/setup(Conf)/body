{
  system=ActorSystem.create(systemName);
  system.actorOf(Props.create(SimpleClusterListener.class),"clusterListener");
  mediator=DistributedPubSubExtension.get(system).mediator();
  epochs=conf.getPretrainEpochs();
  if (type.equals("master")) {
    if (iter == null)     throw new IllegalStateException("Unable to initialize no dataset to train");
    log.info("Starting master");
    masterAddress=startBackend(null,"master",conf,iter);
    try {
      Thread.sleep(30000);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
    }
    mediator.tell(new DistributedPubSubMediator.Publish(MasterActor.MASTER,this),mediator);
    log.info("Starting model saver");
    ActorRef ref=system.actorOf(Props.create(new ModelSavingActor.ModelSavingActorFactory("nn-model.bin")),",model-saver");
    mediator.tell(new DistributedPubSubMediator.Publish(DoneReaper.REAPER,ref),mediator);
    Cluster.get(system).join(masterAddress);
    log.info("Setup master with epochs " + epochs);
  }
 else {
    Conf c=conf.copy();
    ActorRef worker=startWorker(masterAddress,c);
    try {
      Thread.sleep(30000);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
    }
    mediator.tell(new DistributedPubSubMediator.Publish(DoneReaper.REAPER,worker),mediator);
    Cluster.get(system).join(masterAddress);
    log.info("Setup worker nodes");
  }
  conf.setMasterUrl(getMasterAddress().toString());
  ZooKeeperConfigurationRegister reg=new ZooKeeperConfigurationRegister(conf,"master","localhost",2181);
  reg.register();
  reg.close();
}
