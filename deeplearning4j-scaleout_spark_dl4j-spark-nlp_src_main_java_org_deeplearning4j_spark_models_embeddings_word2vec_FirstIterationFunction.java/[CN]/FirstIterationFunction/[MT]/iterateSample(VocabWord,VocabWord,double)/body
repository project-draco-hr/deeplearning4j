{
  if (w1 == null || w2 == null || w2.getIndex() < 0 || w2.getIndex() == w1.getIndex())   return;
  final int currentWordIndex=w2.getIndex();
  INDArray neu1e=Nd4j.create(vectorLength);
  INDArray l1=null;
  if (indexSyn0VecMap.containsKey(currentWordIndex)) {
    l1=indexSyn0VecMap.get(currentWordIndex);
  }
 else {
    l1=getRandomSyn0Vec(vectorLength,(long)currentWordIndex);
  }
  for (int i=0; i < w1.getCodeLength(); i++) {
    int code=w1.getCodes().get(i);
    int point=w1.getPoints().get(i);
    if (point < 0)     throw new IllegalStateException("Illegal point " + point);
    INDArray syn1;
    if (pointSyn1VecMap.containsKey(point)) {
      syn1=pointSyn1VecMap.get(point);
    }
 else {
      syn1=Nd4j.zeros(1,vectorLength);
      pointSyn1VecMap.put(point,syn1);
    }
    double dot=Nd4j.getBlasWrapper().level1().dot(vectorLength,1.0,l1,syn1);
    if (dot < -maxExp || dot >= maxExp)     continue;
    int idx=(int)((dot + maxExp) * ((double)expTable.length / maxExp / 2.0));
    if (idx > expTable.length)     continue;
    double f=expTable[idx];
    double g=(1 - code - f) * (useAdaGrad ? w1.getGradient(i,currentSentenceAlpha,currentSentenceAlpha) : currentSentenceAlpha);
    Nd4j.getBlasWrapper().level1().axpy(vectorLength,g,syn1,neu1e);
    Nd4j.getBlasWrapper().level1().axpy(vectorLength,g,l1,syn1);
  }
  Nd4j.getBlasWrapper().level1().axpy(vectorLength,1.0f,neu1e,l1);
  indexSyn0VecMap.put(currentWordIndex,l1);
}
