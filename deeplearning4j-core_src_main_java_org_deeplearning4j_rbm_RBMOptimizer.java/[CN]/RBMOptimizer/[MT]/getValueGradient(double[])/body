{
  int k=(int)extraParams[0];
  numTimesIterated++;
  if (this.k <= 0)   this.k=k;
  if (numTimesIterated % 10 == 0) {
    this.k++;
  }
  if (this.k >= 15)   this.k=15;
  k=this.k;
  NeuralNetworkGradient gradient=network.getGradient(new Object[]{k,lr});
  DoubleMatrix wAdd=gradient.getwGradient();
  DoubleMatrix vBiasAdd=gradient.getvBiasGradient();
  DoubleMatrix hBiasAdd=gradient.gethBiasGradient();
  int idx=0;
  for (int i=0; i < wAdd.length; i++)   buffer[idx++]=wAdd.get(i);
  for (int i=0; i < vBiasAdd.length; i++)   buffer[idx++]=vBiasAdd.get(i);
  for (int i=0; i < hBiasAdd.length; i++)   buffer[idx++]=hBiasAdd.get(i);
}
