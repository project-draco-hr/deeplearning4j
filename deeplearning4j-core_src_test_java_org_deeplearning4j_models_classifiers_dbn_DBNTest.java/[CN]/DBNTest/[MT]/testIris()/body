{
  RandomGenerator gen=new MersenneTwister(123);
  NeuralNetConfiguration conf=new NeuralNetConfiguration.Builder().hiddenUnit(RBM.HiddenUnit.RECTIFIED).visibleUnit(RBM.VisibleUnit.GAUSSIAN).lossFunction(LossFunctions.LossFunction.RMSE_XENT).rng(gen).learningRate(1e-1f).nIn(4).nOut(3).build();
  DBN d=new DBN.Builder().configure(conf).hiddenLayerSizes(new int[]{4,3,3}).build();
  d.getOutputLayer().conf().setActivationFunction(Activations.softMaxRows());
  d.getOutputLayer().conf().setLossFunction(LossFunctions.LossFunction.MCXENT);
  DataSetIterator iter=new IrisDataSetIterator(150,150);
  DataSet next=iter.next(150);
  next.normalizeZeroMeanZeroUnitVariance();
  d.fit(next);
}
