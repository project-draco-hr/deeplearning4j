{
  LFWDataSetIterator iter=new LFWDataSetIterator(10,10,28,28);
  DataSet d=iter.next();
  d.normalizeZeroMeanZeroUnitVariance();
  int nOut=600;
  RandomGenerator rng=new MersenneTwister(123);
  LayerFactory layerFactory=LayerFactories.getFactory(RBM.class);
  NeuralNetConfiguration conf=new NeuralNetConfiguration.Builder().hiddenUnit(RBM.HiddenUnit.RECTIFIED).weightInit(WeightInit.VI).iterationListener(new ScoreIterationListener(1)).visibleUnit(RBM.VisibleUnit.GAUSSIAN).layerFactory(layerFactory).optimizationAlgo(OptimizationAlgorithm.ITERATION_GRADIENT_DESCENT).lossFunction(LossFunctions.LossFunction.RMSE_XENT).rng(rng).learningRate(1e-3f).nIn(d.numInputs()).nOut(nOut).build();
  RBM rbm=layerFactory.create(conf);
  rbm.fit(d.getFeatureMatrix());
}
