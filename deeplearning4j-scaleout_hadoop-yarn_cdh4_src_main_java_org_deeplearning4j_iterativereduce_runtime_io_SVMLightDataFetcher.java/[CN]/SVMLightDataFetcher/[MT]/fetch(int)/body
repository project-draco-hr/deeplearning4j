{
  boolean result=true;
  if (false == this.record_reader.hasMoreRecords()) {
    throw new IllegalStateException("Unable to get more; there are no more images");
  }
  List<DataSet> vectorBatch=new ArrayList<>();
  for (int i=0; i < numExamples; i++, cursor++) {
    if (false == this.record_reader.hasMoreRecords()) {
      System.out.println("early kickout of svmLight hdfs data fetcher");
      break;
    }
    try {
      result=this.record_reader.next(this.tmpTextRecord);
      if (false == result) {
        System.err.println("SVMLightDataFetcher > hit no recs ");
        break;
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    String valString=this.tmpTextRecord.toString().trim();
    if (valString.equals("")) {
      System.err.println("SVMLightDataFetcher > hit blank line ");
    }
 else {
      Pair<INDArray,INDArray> tmpPair=this.convertTextLineToInputPair(valString);
      DataSet tmpDS=new DataSet(tmpPair.getFirst(),tmpPair.getSecond());
      System.out.println("feature columns: " + tmpDS.getFeatures().columns());
      System.out.println("labels columns: " + tmpDS.getLabels().columns());
      vectorBatch.add(new DataSet(tmpPair.getFirst(),FeatureUtil.toOutcomeVector(tmpPair.getSecond().getInt(0),numOutcomes)));
    }
  }
  System.out.println("number vectors: " + vectorBatch.size());
  initializeCurrFromList(vectorBatch);
}
