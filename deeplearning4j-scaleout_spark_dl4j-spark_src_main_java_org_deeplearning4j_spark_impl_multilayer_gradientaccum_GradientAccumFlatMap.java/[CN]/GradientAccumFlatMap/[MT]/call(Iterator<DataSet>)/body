{
  if (!dataSetIterator.hasNext()) {
    return Collections.emptyList();
  }
  List<DataSet> collect=new ArrayList<>();
  while (dataSetIterator.hasNext()) {
    collect.add(dataSetIterator.next());
  }
  DataSet data=DataSet.merge(collect,false);
  if (log.isDebugEnabled()) {
    log.debug("Training on {} examples with data {}",data.numExamples(),data.labelCounts());
  }
  MultiLayerNetwork network=new MultiLayerNetwork(MultiLayerConfiguration.fromJson(json));
  network.init();
  INDArray val=params.value().dup();
  if (val.length() != network.numParams())   throw new IllegalStateException("Network did not have same number of parameters as the broadcasted set parameters");
  network.setParameters(val);
  network.setUpdater(updater.getValue().clone());
  network.fit(data);
  ScoreReport report=new ScoreReport();
  report.setS(network.score());
  report.setM(Runtime.getRuntime().maxMemory());
  return Collections.singletonList(new Tuple3<>(network.gradient(),network.getUpdater(),report));
}
