{
  if (message instanceof SentenceMessage) {
    scala.concurrent.Future<SentenceMessage> f=Futures.future(new Callable<SentenceMessage>(){
      @Override public SentenceMessage call() throws Exception {
        SentenceMessage m2=(SentenceMessage)message;
        vec.processSentence(m2.getSentence());
        return m2;
      }
    }
,context().dispatcher());
    f.onComplete(new OnComplete<SentenceMessage>(){
      @Override public void onComplete(      Throwable arg0,      SentenceMessage m2) throws Throwable {
        log.info("Processed sentence");
        m2.getChanged().set(System.currentTimeMillis());
      }
    }
,context().dispatcher());
  }
 else   unhandled(message);
}
