{
  try {
    while (!killRunnable && baseIterator.hasNext()) {
      lock.writeLock().lock();
      DataSet ds=baseIterator.next();
      feeder.incrementAndGet();
      lock.writeLock().unlock();
      blockingQueue.put(ds);
    }
  }
 catch (  InterruptedException e) {
    if (killRunnable) {
      return;
    }
 else     exception=new RuntimeException("Runnable interrupted unexpectedly",e);
  }
catch (  RuntimeException e) {
    exception=e;
  }
 finally {
    isAlive.set(false);
    runCompletedSemaphore.release();
  }
}
