{
  if (activations == null || activations.length != 1)   throw new IllegalArgumentException("Invalid input: expect exactly 1 input for forward pass (got: " + (activations == null ? null : activations.length) + ")");
  forwardShape=Arrays.copyOf(activations[0].shape(),activations[0].rank());
switch (activations[0].rank()) {
case 2:
    return activations[0].get(NDArrayIndex.all(),NDArrayIndex.interval(from,to,true));
case 3:
  return activations[0].get(NDArrayIndex.all(),NDArrayIndex.interval(from,to,true),NDArrayIndex.all());
case 4:
return activations[0].get(NDArrayIndex.all(),NDArrayIndex.interval(from,to,true),NDArrayIndex.all(),NDArrayIndex.all());
default :
throw new UnsupportedOperationException("Cannot get subset for activations of rank " + activations[0].rank());
}
}
