{
  List<DoubleMatrix> ret=new ArrayList<>();
  int window=0;
  for (int i=0; i < toSlice.length; i++) {
    if (window >= toSlice.length)     break;
    double[] w=new double[this.windowRowSize * this.windowColumnSize];
    for (int count=0; count < this.windowRowSize * this.windowColumnSize; count++) {
      w[count]=toSlice.get(count + window);
    }
    DoubleMatrix add=new DoubleMatrix(w);
    if (flattened)     add=add.reshape(1,add.length);
 else     add=add.reshape(windowRowSize,windowColumnSize);
    if (addRotate) {
      DoubleMatrix currRotation=add.dup();
      for (int rotation=0; rotation < 3; rotation++) {
        MatrixUtil.rot90(currRotation);
        ret.add(currRotation.dup());
      }
    }
    window+=this.windowRowSize * this.windowColumnSize;
    ret.add(add);
  }
  return ret;
}
