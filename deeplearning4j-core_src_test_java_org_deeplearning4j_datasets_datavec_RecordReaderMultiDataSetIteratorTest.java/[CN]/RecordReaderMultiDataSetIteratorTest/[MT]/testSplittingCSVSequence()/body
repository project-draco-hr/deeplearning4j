{
  for (int i=0; i < 3; i++) {
    new ClassPathResource(String.format("csvsequence_%d.txt",i)).getTempFileFromArchive();
    new ClassPathResource(String.format("csvsequencelabels_%d.txt",i)).getTempFileFromArchive();
    new ClassPathResource(String.format("csvsequencelabelsShort_%d.txt",i)).getTempFileFromArchive();
  }
  ClassPathResource resource=new ClassPathResource("csvsequence_0.txt");
  String featuresPath=resource.getTempFileFromArchive().getAbsolutePath().replaceAll("0","%d");
  resource=new ClassPathResource("csvsequencelabels_0.txt");
  String labelsPath=resource.getTempFileFromArchive().getAbsolutePath().replaceAll("0","%d");
  SequenceRecordReader featureReader=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader=new CSVSequenceRecordReader(1,",");
  featureReader.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  SequenceRecordReaderDataSetIterator iter=new SequenceRecordReaderDataSetIterator(featureReader,labelReader,1,4,false);
  SequenceRecordReader featureReader2=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader2=new CSVSequenceRecordReader(1,",");
  featureReader2.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader2.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  MultiDataSetIterator srrmdsi=new RecordReaderMultiDataSetIterator.Builder(1).addSequenceReader("seq1",featureReader2).addSequenceReader("seq2",labelReader2).addInput("seq1",0,1).addInput("seq1",2,2).addOutputOneHot("seq2",0,4).build();
  while (iter.hasNext()) {
    DataSet ds=iter.next();
    INDArray fds=ds.getFeatureMatrix();
    INDArray lds=ds.getLabels();
    MultiDataSet mds=srrmdsi.next();
    assertEquals(2,mds.getFeatures().length);
    assertEquals(1,mds.getLabels().length);
    assertNull(mds.getFeaturesMaskArrays());
    assertNull(mds.getLabelsMaskArrays());
    INDArray[] fmds=mds.getFeatures();
    INDArray[] lmds=mds.getLabels();
    assertNotNull(fmds);
    assertNotNull(lmds);
    for (int i=0; i < fmds.length; i++)     assertNotNull(fmds[i]);
    for (int i=0; i < lmds.length; i++)     assertNotNull(lmds[i]);
    INDArray expIn1=fds.get(NDArrayIndex.all(),NDArrayIndex.interval(0,1,true),NDArrayIndex.all());
    INDArray expIn2=fds.get(NDArrayIndex.all(),NDArrayIndex.interval(2,2,true),NDArrayIndex.all());
    assertEquals(expIn1,fmds[0]);
    assertEquals(expIn2,fmds[1]);
    assertEquals(lds,lmds[0]);
  }
  assertFalse(srrmdsi.hasNext());
}
