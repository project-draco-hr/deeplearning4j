{
  RecordReader rr=new CSVRecordReader(0,",");
  rr.initialize(new FileSplit(new ClassPathResource("iris.txt").getTempFileFromArchive()));
  RecordReaderDataSetIterator rrdsi=new RecordReaderDataSetIterator(rr,10,4,3);
  RecordReader rr2=new CSVRecordReader(0,",");
  rr2.initialize(new FileSplit(new ClassPathResource("iris.txt").getTempFileFromArchive()));
  MultiDataSetIterator rrmdsi=new RecordReaderMultiDataSetIterator.Builder(10).addReader("reader",rr2).addInput("reader",0,0).addInput("reader",1,2).addOutput("reader",3,3).addOutputOneHot("reader",4,3).build();
  while (rrdsi.hasNext()) {
    DataSet ds=rrdsi.next();
    INDArray fds=ds.getFeatureMatrix();
    INDArray lds=ds.getLabels();
    MultiDataSet mds=rrmdsi.next();
    assertEquals(2,mds.getFeatures().length);
    assertEquals(2,mds.getLabels().length);
    assertNull(mds.getFeaturesMaskArrays());
    assertNull(mds.getLabelsMaskArrays());
    INDArray[] fmds=mds.getFeatures();
    INDArray[] lmds=mds.getLabels();
    assertNotNull(fmds);
    assertNotNull(lmds);
    for (int i=0; i < fmds.length; i++)     assertNotNull(fmds[i]);
    for (int i=0; i < lmds.length; i++)     assertNotNull(lmds[i]);
    INDArray expIn1=fds.get(NDArrayIndex.all(),NDArrayIndex.point(0));
    INDArray expIn2=fds.get(NDArrayIndex.all(),NDArrayIndex.interval(1,2,true));
    INDArray expOut1=fds.get(NDArrayIndex.all(),NDArrayIndex.point(3));
    INDArray expOut2=lds;
    assertEquals(expIn1,fmds[0]);
    assertEquals(expIn2,fmds[1]);
    assertEquals(expOut1,lmds[0]);
    assertEquals(expOut2,lmds[1]);
  }
  assertFalse(rrmdsi.hasNext());
}
