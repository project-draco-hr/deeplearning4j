{
  DBN d=SerializationUtils.readObject(new File(args[0]));
  d.setOutputActivationFunction(Activations.sigmoid());
  DataSetIterator iter=new MnistDataSetIterator(80,60000,false);
  Conf c=new Conf();
  c.setFinetuneEpochs(10000);
  c.setFinetuneLearningRate(1e-2f);
  c.setPretrainLearningRate(1e-1f);
  c.setNormalizeCodeLayer(false);
  c.setRoundCodeLayer(false);
  c.setSplit(100);
  c.setSparsity(0);
  c.setMomentum(9e-1f);
  c.setMultiLayerClazz(DBN.class);
  c.setUseRegularization(true);
  c.setL2(2e-4f);
  c.setSampleHiddenActivations(false);
  c.setOutputLayerLossFunction(OutputLayer.LossFunction.SQUARED_LOSS);
  c.setOutputActivationFunction(Activations.sigmoid());
  DeepAutoEncoderHazelCastStateTracker tracker=new DeepAutoEncoderHazelCastStateTracker();
  tracker.moveToFinetune();
  DeepAutoEncoderDistributedTrainer runner=new DeepAutoEncoderDistributedTrainer("master",iter,d);
  runner.setStateTracker(tracker);
  runner.setModelSaver(new DefaultModelSaver(new File("mnist-example-deepautoencoder.ser")));
  runner.setup(c);
  runner.train();
}
