{
  InMemoryLookupCache cache=new InMemoryLookupCache(false);
  VocabularyHolder holder=new VocabularyHolder.Builder().externalCache(cache).build();
  holder.addWord("testerz");
  holder.transferBackToVocabCache();
  File inputFile=new ClassPathResource("/big/raw_sentences.txt").getFile();
  SentenceIterator iter=UimaSentenceIterator.createWithPath(inputFile.getAbsolutePath());
  TokenizerFactory t=new DefaultTokenizerFactory();
  t.setTokenPreProcessor(new CommonPreprocessor());
  VocabConstructor constructor=new VocabConstructor.Builder().setTokenizerFactory(t).addSource(iter,5).useAdaGrad(false).setTargetVocabCache(cache).build();
  constructor.buildJointVocabulary(false,true);
  assertEquals(634061,cache.totalWordOccurrences());
  assertEquals(243,cache.numWords());
  assertEquals("it",cache.wordAtIndex(0));
  assertEquals("i",cache.wordAtIndex(1));
  assertNotEquals(null,cache.wordFor("testerz"));
  assertEquals(1,cache.wordFrequency("testerz"));
}
