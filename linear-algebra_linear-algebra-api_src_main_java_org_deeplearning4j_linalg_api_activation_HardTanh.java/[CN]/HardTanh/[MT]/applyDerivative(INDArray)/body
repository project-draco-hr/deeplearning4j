{
  if (input instanceof IComplexNDArray) {
    for (int i=0; i < input.length(); i++) {
      IComplexNumber val=(IComplexNumber)input.getScalar(i).element();
      if (val.realComponent().doubleValue() < -1)       val.set(-1,val.imaginaryComponent().doubleValue());
 else       if (val.realComponent().doubleValue() > 1)       val.set(1,val.imaginaryComponent().doubleValue());
 else       val=NDArrays.createDouble(1,0).subi(ComplexUtil.pow(ComplexUtil.tanh(val),2));
      input.put(i,NDArrays.scalar(val));
    }
  }
 else {
    for (int i=0; i < input.length(); i++) {
      double val=(double)input.getScalar(i).element();
      if (val < -1)       val=-1;
 else       if (val > 1)       val=1;
 else       val=1 - Math.pow(Math.tanh(val),2);
      input.put(i,NDArrays.scalar(val));
    }
  }
  return input;
}
