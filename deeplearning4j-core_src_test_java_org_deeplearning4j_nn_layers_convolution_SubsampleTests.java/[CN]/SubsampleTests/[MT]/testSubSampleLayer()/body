{
  DataSetIterator mnist=new MnistDataSetIterator(100,100);
  LayerFactory layerFactory=LayerFactories.getFactory(new SubsamplingLayer());
  NeuralNetConfiguration conf=new NeuralNetConfiguration.Builder().activationFunction("relu").constrainGradientToUnitNorm(true).convolutionType(org.deeplearning4j.nn.conf.layers.ConvolutionLayer.ConvolutionType.MAX).filterSize(5,1,28,28).layer(new SubsamplingLayer()).nIn(784).nOut(1).build();
  Layer convolutionLayer=layerFactory.create(conf);
  DataSet next=mnist.next();
  INDArray input=next.getFeatureMatrix().reshape(next.numExamples(),1,28,28);
  input=input.get(NDArrayIndex.all(),NDArrayIndex.all(),NDArrayIndex.interval(0,20),NDArrayIndex.interval(0,20));
  INDArray output=convolutionLayer.activate(input);
  assertTrue(Arrays.equals(new int[]{next.numExamples(),1,10,21},output.shape()));
}
