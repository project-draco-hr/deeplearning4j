{
  float cost=0.0f;
  for (  MultiDimensionalMap.Entry<String,String,INDArray> entry : currentMatrices.entrySet()) {
    INDArray D=derivatives.get(entry.getFirstKey(),entry.getSecondKey());
    D=NDArrays.getBlasWrapper().scal(scale,D).add(NDArrays.getBlasWrapper().scal(regCost,entry.getValue()));
    derivatives.put(entry.getFirstKey(),entry.getSecondKey(),D);
    cost+=(double)entry.getValue().mul(entry.getValue()).sum(Integer.MAX_VALUE).element() * regCost / 2.0;
  }
  return cost;
}
