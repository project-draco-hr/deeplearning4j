{
  float cost=0.0f;
  for (  MultiDimensionalMap.Entry<String,String,FloatTensor> entry : currentMatrices.entrySet()) {
    FloatTensor D=derivatives.get(entry.getFirstKey(),entry.getSecondKey());
    D=D.scale(scale).add(entry.getValue().scale(regCost));
    derivatives.put(entry.getFirstKey(),entry.getSecondKey(),D);
    cost+=entry.getValue().mul(entry.getValue()).sum() * regCost / 2.0;
  }
  return cost;
}
