{
  DoubleMatrix currInput=this.input;
  List<DoubleMatrix> activations=new ArrayList<>();
  activations.add(currInput);
  for (int i=0; i < getnLayers(); i++) {
    getLayers()[i].setInput(currInput);
    getSigmoidLayers()[i].setInput(input);
    if (getSampleOrActivate() != null && getSampleOrActivate().get(i) != null && getSampleOrActivate().get(i))     currInput=getSigmoidLayers()[i].activate(currInput);
 else     if (useHiddenActivationsForwardProp)     currInput=getSigmoidLayers()[i].sampleHGivenV(currInput);
 else     currInput=getLayers()[i].sampleHiddenGivenVisible(currInput).getSecond();
    activations.add(currInput);
  }
  if (getOutputLayer() != null) {
    getOutputLayer().setInput(activations.get(activations.size() - 1));
    if (getOutputLayer().getActivationFunction() == null)     if (outputActivationFunction != null)     outputLayer.setActivationFunction(outputActivationFunction);
 else     outputLayer.setActivationFunction(Activations.sigmoid());
    activations.add(getOutputLayer().output(activations.get(activations.size() - 1)));
  }
  return activations;
}
