{
  double score1, score2;
  OutputLayer layer=getIrisLogisticLayerConfig("softmax",100,LossFunctions.LossFunction.NEGATIVELOGLIKELIHOOD);
  int nParams=layer.numParams();
  layer.setBackpropGradientsViewArray(Nd4j.create(1,nParams));
  layer.setInput(irisData.getFeatureMatrix());
  layer.setLabels(irisData.getLabels());
  layer.computeGradientAndScore();
  score1=layer.score();
  INDArray origGradient=layer.gradient().gradient().dup();
  NegativeDefaultStepFunction sf=new NegativeDefaultStepFunction();
  BackTrackLineSearch lineSearch=new BackTrackLineSearch(layer,sf,layer.getOptimizer());
  double step=lineSearch.optimize(layer.params(),layer.gradient().gradient(),layer.gradient().gradient());
  INDArray currParams=layer.params();
  sf.step(currParams,origGradient,step);
  layer.setParams(currParams);
  layer.computeGradientAndScore();
  score2=layer.score();
  assertTrue("score1=" + score1 + ", score2="+ score2,score1 > score2);
}
