{
  Class<? extends Layer> clazz=layer.getClass();
  if (clazz.equals(ImageLSTM.class))   return new ImageLSTMLayerFactory(ImageLSTM.class);
 else   if (clazz.equals(GravesLSTM.class))   return new GravesLSTMLayerFactory(GravesLSTM.class);
 else   if (clazz.equals(GravesBidirectionalLSTM.class))   return new GravesBidirectionalLSTMLayerFactory(GravesBidirectionalLSTM.class);
 else   if (clazz.equals(GRU.class))   return new GRULayerFactory(GRU.class);
 else   if (RecursiveAutoEncoder.class.isAssignableFrom(clazz))   return new RecursiveAutoEncoderLayerFactory(RecursiveAutoEncoder.class);
 else   if (BasePretrainNetwork.class.isAssignableFrom(clazz))   return new PretrainLayerFactory(clazz);
 else   if (ConvolutionLayer.class.isAssignableFrom(clazz))   return new ConvolutionLayerFactory(clazz);
 else   if (SubsamplingLayer.class.isAssignableFrom(clazz))   return new SubsampleLayerFactory(clazz);
 else   if (BatchNormalization.class.isAssignableFrom(clazz))   return new BatchNormalizationLayerFactory(clazz);
 else   if (LocalResponseNormalization.class.isAssignableFrom(clazz))   return new LocalResponseNormalizationFactory(clazz);
  return new DefaultLayerFactory(clazz);
}
