{
  if (iteration % freq == 0) {
    List<INDArray> tensors=new ArrayList<>();
    int cnt=0;
    MultiLayerNetwork l=(MultiLayerNetwork)model;
    for (    Layer layer : l.getLayers()) {
      if (layer.type() == Layer.Type.CONVOLUTIONAL) {
        INDArray output=layer.activate();
        log.info("Layer output shape: " + Arrays.toString(output.shape()));
        INDArray tad=output.tensorAlongDimension(21,3,2,1);
        log.info("TAD(3,2,1) shape: " + Arrays.toString(tad.shape()));
        tensors.add(tad);
        cnt++;
      }
    }
    BufferedImage render=rasterizeConvoLayers(tensors);
    try {
      File tempFile=File.createTempFile("cnn_activations",".png");
      tempFile.deleteOnExit();
      ImageIO.write(render,"png",tempFile);
      PathUpdate update=new PathUpdate();
      update.setPath(tempFile.getPath());
      target.request(MediaType.APPLICATION_JSON).post(Entity.entity(update,MediaType.APPLICATION_JSON));
      if (openBrowser && firstIteration) {
        UiUtils.tryOpenBrowser(path,log);
        firstIteration=false;
      }
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
    minibatchNum++;
  }
}
