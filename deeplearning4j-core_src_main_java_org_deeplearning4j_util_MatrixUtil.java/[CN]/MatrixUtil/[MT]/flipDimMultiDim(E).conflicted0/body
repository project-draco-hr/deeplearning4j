{
  if (input instanceof FourDTensor) {
    FourDTensor t=(FourDTensor)input;
    DoubleMatrix ret=new DoubleMatrix(input.rows,input.columns);
    FourDTensor flipped=createBasedOn(ret,t);
    for (int i=0; i < flipped.numTensors(); i++) {
      for (int j=0; j < flipped.getTensor(i).slices(); j++) {
        flipped.put(i,j,flipDim(t.getSliceOfTensor(i,j)));
      }
    }
    return createBasedOn(flipped,input);
  }
 else   if (input instanceof Tensor) {
    Tensor t=(Tensor)input;
    DoubleMatrix ret=new DoubleMatrix(input.rows,input.columns);
    Tensor flipped=createBasedOn(ret,t);
    for (int j=0; j < flipped.slices(); j++) {
      flipped.setSlice(j,flipDim(t.getSlice(j)));
    }
    return createBasedOn(ret,input);
  }
 else   return (E)flipDim(input);
}
