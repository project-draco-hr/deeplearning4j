{
  if (message instanceof SkipGramMessage) {
    final SkipGramMessage m=(SkipGramMessage)message;
    Futures.future(new Callable<Void>(){
      /** 
 * Computes a result, or throws an exception if unable to do so.
 * @return computed result
 * @throws Exception if unable to compute a result
 */
      @Override public Void call() throws Exception {
        vec.skipGram(m.getI(),m.getSentence(),m.getB());
        return null;
      }
    }
,context().dispatcher());
  }
 else   unhandled(message);
}
