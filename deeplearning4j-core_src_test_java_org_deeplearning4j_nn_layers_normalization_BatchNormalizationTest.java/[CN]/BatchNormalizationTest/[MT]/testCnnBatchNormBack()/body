{
  Layer layer=setupActivations(2 * 4 * 4,2);
  layer.preOutput(cnnInput);
  Pair<Gradient,INDArray> actualOut=layer.backpropGradient(cnnEpsilon);
  INDArray expectedEpsilonOut=Nd4j.create(new double[]{0.,0.,0.,0.,-0.5,-0.5,-0.5,-0.5,0.,0.,0.,0.,-0.5,-0.5,-0.5,-0.5,0.,0.,0.,0.,-0.5,-0.5,-0.5,-0.5,0.,0.,0.,0.,-0.5,-0.5,-0.5,-0.5,-2.,-2.,-2.,-2.,-1.5,-1.5,-1.5,-1.5,-2.,-2.,-2.,-2.,-1.5,-1.5,-1.5,-1.5,-2.,-2.,-2.,-2.,-1.5,-1.5,-1.5,-1.5,-2.,-2.,-2.,-2.,-1.5,-1.5,-1.5,-1.5},new int[]{2,2,4,4});
  assertEquals(expectedEpsilonOut,actualOut.getSecond());
}
