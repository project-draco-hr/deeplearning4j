{
  Layer layer=setupActivations(2,16);
  assertArrayEquals(new int[]{1,16},layer.getParam("gamma").shape());
  assertArrayEquals(new int[]{1,16},layer.getParam("beta").shape());
  layer.setParam("gamma",Nd4j.linspace(0,15,16));
  layer.setParam("beta",Nd4j.linspace(0,15,16));
  INDArray activationsActual=layer.preOutput(dnnInput);
  INDArray activationsExpected=Nd4j.create(new double[]{0.00000000e+00,7.81248399e-11,1.56249680e-10,2.34374298e-10,3.12499360e-10,3.90624422e-10,4.68748595e-10,5.46873657e-10,6.24998719e-10,7.03122893e-10,7.81248843e-10,8.59373017e-10,9.37497191e-10,1.01562314e-09,1.09374731e-09,1.17187327e-09,0.00000000e+00,2.00000000e+00,4.00000000e+00,6.00000000e+00,8.00000000e+00,1.00000000e+01,1.20000000e+01,1.40000000e+01,1.60000000e+01,1.80000000e+01,2.00000000e+01,2.20000000e+01,2.40000000e+01,2.60000000e+01,2.80000000e+01,3.00000000e+01},new int[]{2,16});
  System.out.println(Arrays.toString(activationsExpected.data().asFloat()));
  System.out.println(Arrays.toString(activationsActual.data().asFloat()));
  assertEquals(activationsExpected,activationsActual);
  assertArrayEquals(activationsExpected.shape(),activationsActual.shape());
}
