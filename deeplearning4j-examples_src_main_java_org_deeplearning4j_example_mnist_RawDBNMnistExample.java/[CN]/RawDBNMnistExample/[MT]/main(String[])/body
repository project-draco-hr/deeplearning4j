{
  DataSetIterator iter=new RawMnistDataSetIterator(10,40);
  DBN dbn=new DBN.Builder().withHiddenUnits(RBM.HiddenUnit.RECTIFIED).withVisibleUnits(RBM.VisibleUnit.GAUSSIAN).hiddenLayerSizes(new int[]{500,400,250}).numberOfInputs(784).numberOfOutPuts(10).build();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    next.normalizeZeroMeanZeroUnitVariance();
    dbn.pretrain(next.getFeatureMatrix(),1,0.0001,10000);
  }
  iter.reset();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    next.normalizeZeroMeanZeroUnitVariance();
    dbn.setInput(next.getFeatureMatrix());
    dbn.finetune(next.getLabels(),0.001,10000);
  }
  BufferedOutputStream bos=new BufferedOutputStream(new FileOutputStream("mnist-dbn.bin"));
  dbn.write(bos);
  bos.flush();
  bos.close();
  log.info("Saved dbn");
  iter.reset();
  Evaluation eval=new Evaluation();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    INDArray predict=dbn.output(next.getFeatureMatrix());
    INDArray labels=next.getLabels();
    eval.eval(labels,predict);
  }
  log.info("Prediciton f scores and accuracy");
  log.info(eval.stats());
}
