{
  masterHost=InetAddress.getLocalHost().getCanonicalHostName();
  masterPort=port;
  masterAddr=new InetSocketAddress(masterHost,masterPort);
  masterComputable=computableMaster;
  masterUpdateable=updatable;
  props=new Properties();
  props.load(new FileInputStream(ConfigFields.APP_CONFIG_FILE));
  ContainerId containerId=ConverterUtils.toContainerId(System.getenv(ApplicationConstants.AM_CONTAINER_ID_ENV));
  appAttemptId=containerId.getApplicationAttemptId();
  appName=props.getProperty(ConfigFields.APP_NAME,ConfigFields.DEFAULT_APP_NAME).replace(' ','_');
  batchSize=Integer.parseInt(props.getProperty(ConfigFields.APP_BATCH_SIZE,"200"));
  iterationCount=Integer.parseInt(props.getProperty(ConfigFields.APP_ITERATION_COUNT,"1"));
  String inputFormatClassString=props.getProperty(ConfigFields.INPUT_FORMAT_CLASS,ConfigFields.INPUT_FORMAT_CLASS_DEFAULT);
  LOG.debug("Using Input Format: " + inputFormatClassString);
  LOG.info("IR:AppMaster > Using Input Format: " + inputFormatClassString);
  Class<?> if_class=null;
  try {
    if_class=Class.forName(inputFormatClassString);
  }
 catch (  ClassNotFoundException e) {
    e.printStackTrace();
  }
  if (null == if_class) {
    this.inputFormatClass=TextInputFormat.class;
  }
 else   if (InputFormat.class.isAssignableFrom(if_class)) {
    LOG.debug("good input format: " + inputFormatClassString);
    this.inputFormatClass=if_class;
  }
 else {
    LOG.debug("bad input format: " + inputFormatClassString + ", defaulting to TextInputFormat");
    this.inputFormatClass=TextInputFormat.class;
  }
  appConfig=new HashMap<CharSequence,CharSequence>();
  for (  Map.Entry<Object,Object> prop : props.entrySet()) {
    appConfig.put((String)prop.getKey(),(String)prop.getValue());
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Configurartion entries: ");
    for (    Map.Entry<CharSequence,CharSequence> entry : appConfig.entrySet()) {
      LOG.debug(entry.getKey() + "=" + entry.getValue());
    }
    LOG.debug("Initialized application master" + ", masterHost=" + masterHost + ", masterPort="+ masterPort+ ", masterAddress="+ masterAddr+ ", masterComputable="+ masterComputable.getClass().getName()+ ", masterUpdateable="+ masterUpdateable.getClass().getName()+ ", appAttemptId="+ appAttemptId);
  }
}
