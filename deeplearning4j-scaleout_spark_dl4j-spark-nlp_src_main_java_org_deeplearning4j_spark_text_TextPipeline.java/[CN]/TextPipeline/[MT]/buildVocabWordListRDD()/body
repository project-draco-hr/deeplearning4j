{
  if (sentenceWordsCountRDD == null)   throw new IllegalStateException("SentenceWordCountRDD must be defined first. Run buildLookupCache first.");
  Function wordsListToVocabWords=new Function<Pair<List<String>,AtomicLong>,List<VocabWord>>(){
    @Override public List<VocabWord> call(    Pair<List<String>,AtomicLong> pair) throws Exception {
      List<String> wordsList=pair.getFirst();
      List<VocabWord> vocabWordsList=new ArrayList<>();
      for (      String s : wordsList)       vocabWordsList.add(vocabCacheBroadcast.getValue().wordFor(s));
      return vocabWordsList;
    }
  }
;
  Function getSentenceCount=new Function<Pair<List<String>,AtomicLong>,AtomicLong>(){
    @Override public AtomicLong call(    Pair<List<String>,AtomicLong> pair) throws Exception {
      return pair.getSecond();
    }
  }
;
  vocabWordListRDD=sentenceWordsCountRDD.map(wordsListToVocabWords).setName("vocabWordListRDD").cache();
  sentenceCountRDD=sentenceWordsCountRDD.map(getSentenceCount).setName("sentenceCountRDD").cache();
  vocabWordListRDD.count();
  totalWordCount=sentenceCountRDD.reduce(new Function2<AtomicLong,AtomicLong,AtomicLong>(){
    @Override public AtomicLong call(    AtomicLong a,    AtomicLong b){
      return new AtomicLong(a.get() + b.get());
    }
  }
).get();
  sentenceWordsCountRDD.unpersist();
}
