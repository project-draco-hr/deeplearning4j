{
  int discNext=(_disc + 1) % dims;
  if (_disc == disc) {
    KDNode child=node.getLeft();
    if (child != null) {
      return min(child,disc,discNext);
    }
  }
 else   if (node.getLeft() != null || node.getRight() != null) {
    Pair<KDNode,Integer> left=null, right=null;
    if (node.getLeft() != null)     left=min(node.getLeft(),disc,discNext);
    if (node.getRight() != null)     right=min(node.getRight(),disc,discNext);
    if (left != null && right != null) {
      double pointLeft=left.getFirst().getPoint().getDouble(disc);
      double pointRight=right.getFirst().getPoint().getDouble(disc);
      if (pointLeft < pointRight)       return left;
 else       return right;
    }
 else     if (left != null)     return left;
 else     return right;
  }
  return new Pair<>(node,_disc);
}
