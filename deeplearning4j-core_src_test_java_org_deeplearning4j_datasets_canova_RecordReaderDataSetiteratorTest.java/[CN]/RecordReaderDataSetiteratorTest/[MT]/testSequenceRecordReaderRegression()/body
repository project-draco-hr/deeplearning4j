{
  for (int i=0; i < 3; i++) {
    new ClassPathResource(String.format("csvsequence_%d.txt",i)).getTempFileFromArchive();
  }
  ClassPathResource resource=new ClassPathResource("csvsequence_0.txt");
  String featuresPath=resource.getTempFileFromArchive().getAbsolutePath().replaceAll("0","%d");
  resource=new ClassPathResource("csvsequence_0.txt");
  String labelsPath=resource.getTempFileFromArchive().getAbsolutePath().replaceAll("0","%d");
  SequenceRecordReader featureReader=new CSVSequenceRecordReader(1,",");
  SequenceRecordReader labelReader=new CSVSequenceRecordReader(1,",");
  featureReader.initialize(new NumberedFileInputSplit(featuresPath,0,2));
  labelReader.initialize(new NumberedFileInputSplit(labelsPath,0,2));
  SequenceRecordReaderDataSetIterator iter=new SequenceRecordReaderDataSetIterator(featureReader,labelReader,1,0,true);
  assertEquals(3,iter.inputColumns());
  assertEquals(3,iter.totalOutcomes());
  List<DataSet> dsList=new ArrayList<>();
  while (iter.hasNext()) {
    dsList.add(iter.next());
  }
  assertEquals(3,dsList.size());
  for (int i=0; i < 3; i++) {
    DataSet ds=dsList.get(i);
    INDArray features=ds.getFeatureMatrix();
    INDArray labels=ds.getLabels();
    assertArrayEquals(new int[]{1,3,4},features.shape());
    assertArrayEquals(new int[]{1,3,4},labels.shape());
    assertEquals(features,labels);
  }
  featureReader.reset();
  iter=new SequenceRecordReaderDataSetIterator(featureReader,1,0,2,true);
  int count=0;
  while (iter.hasNext()) {
    DataSet ds=iter.next();
    assertEquals(2,ds.getFeatureMatrix().size(1));
    assertEquals(1,ds.getLabels().size(1));
    count++;
  }
  assertEquals(3,count);
  iter.reset();
  count=0;
  while (iter.hasNext()) {
    iter.next();
    count++;
  }
  assertEquals(3,count);
}
