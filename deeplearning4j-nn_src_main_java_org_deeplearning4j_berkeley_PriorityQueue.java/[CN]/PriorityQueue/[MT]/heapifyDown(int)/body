{
  int max=loc;
  int leftChild=leftChild(loc);
  if (leftChild < size()) {
    double priority=priorities[loc];
    double leftChildPriority=priorities[leftChild];
    if (leftChildPriority > priority)     max=leftChild;
    int rightChild=rightChild(loc);
    if (rightChild < size()) {
      double rightChildPriority=priorities[rightChild(loc)];
      if (rightChildPriority > priority && rightChildPriority > leftChildPriority)       max=rightChild;
    }
  }
  if (max == loc)   return;
  swap(loc,max);
  heapifyDown(max);
}
