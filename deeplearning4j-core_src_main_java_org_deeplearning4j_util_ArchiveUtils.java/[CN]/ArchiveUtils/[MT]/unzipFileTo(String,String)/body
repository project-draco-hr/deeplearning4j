{
  File target=new File(file);
  if (!target.exists())   throw new IllegalArgumentException("Archive doesnt exist");
  FileInputStream fin=new FileInputStream(target);
  int BUFFER=2048;
  byte data[]=new byte[BUFFER];
  if (file.endsWith(".zip")) {
    ZipInputStream zis=new ZipInputStream(fin);
    ZipEntry ze=zis.getNextEntry();
    while (ze != null) {
      String fileName=ze.getName();
      File newFile=new File(dest + File.separator + fileName);
      log.info("file unzip : " + newFile.getAbsoluteFile());
      new File(newFile.getParent()).mkdirs();
      FileOutputStream fos=new FileOutputStream(newFile);
      int len;
      while ((len=zis.read(data)) > 0) {
        fos.write(data,0,len);
      }
      fos.close();
      ze=zis.getNextEntry();
    }
    zis.closeEntry();
    zis.close();
  }
 else   if (file.endsWith(".tar.gz")) {
    BufferedInputStream in=new BufferedInputStream(fin);
    GzipCompressorInputStream gzIn=new GzipCompressorInputStream(in);
    TarArchiveInputStream tarIn=new TarArchiveInputStream(gzIn);
    TarArchiveEntry entry=null;
    while ((entry=(TarArchiveEntry)tarIn.getNextEntry()) != null) {
      log.info("Extracting: " + entry.getName());
      if (entry.isDirectory()) {
        File f=new File(dest + File.separator + entry.getName());
        f.mkdirs();
      }
 else {
        int count;
        FileOutputStream fos=new FileOutputStream(dest + File.separator + entry.getName());
        BufferedOutputStream destStream=new BufferedOutputStream(fos,BUFFER);
        while ((count=tarIn.read(data,0,BUFFER)) != -1) {
          destStream.write(data,0,count);
        }
        destStream.flush();
        ;
        IOUtils.closeQuietly(destStream);
      }
    }
    tarIn.close();
  }
}
