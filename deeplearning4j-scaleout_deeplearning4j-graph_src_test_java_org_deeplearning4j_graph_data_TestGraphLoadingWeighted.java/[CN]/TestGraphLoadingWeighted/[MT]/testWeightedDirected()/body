{
  String path=new ClassPathResource("WeightedGraph.txt").getFile().getAbsolutePath();
  int numVertices=9;
  String delim=",";
  String[] ignoreLinesStartingWith=new String[]{"//"};
  IGraph<String,Double> graph=GraphLoader.loadWeightedEdgeListFile(path,numVertices,delim,true,ignoreLinesStartingWith);
  assertEquals(numVertices,graph.numVertices());
  int[] vertexOutDegrees={2,2,1,2,2,1,1,1,1};
  for (int i=0; i < numVertices; i++)   assertEquals(vertexOutDegrees[i],graph.getVertexDegree(i));
  int[][] edges=new int[][]{{1,3},{2,4},{5},{4,6},{5,7},{8},{7},{8},{0}};
  double[][] edgeWeights=new double[][]{{1,3},{12,14},{25},{34,36},{45,47},{58},{67},{78},{80}};
  for (int i=0; i < numVertices; i++) {
    List<Edge<Double>> edgeList=graph.getEdgesOut(i);
    assertEquals(edges[i].length,edgeList.size());
    for (    Edge<Double> e : edgeList) {
      int from=e.getFrom();
      int to=e.getTo();
      double weight=e.getValue();
      assertEquals(i,from);
      assertTrue(ArrayUtils.contains(edges[i],to));
      int idx=ArrayUtils.indexOf(edges[i],to);
      assertEquals(edgeWeights[i][idx],weight,0.0);
    }
  }
  System.out.println(graph);
}
