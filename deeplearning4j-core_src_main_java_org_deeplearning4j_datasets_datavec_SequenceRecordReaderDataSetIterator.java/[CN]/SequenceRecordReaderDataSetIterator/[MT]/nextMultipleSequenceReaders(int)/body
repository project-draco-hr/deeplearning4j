{
  List<INDArray> featureList=new ArrayList<>(num);
  List<INDArray> labelList=new ArrayList<>(num);
  List<RecordMetaData> meta=(collectMetaData ? new ArrayList<RecordMetaData>() : null);
  for (int i=0; i < num && hasNext(); i++) {
    List<List<Writable>> featureSequence;
    List<List<Writable>> labelSequence;
    if (collectMetaData && recordReader instanceof SequenceRecordReaderMeta && labelsReader instanceof SequenceRecordReaderMeta) {
      SequenceRecord f=((SequenceRecordReaderMeta)recordReader).nextSequence();
      SequenceRecord l=((SequenceRecordReaderMeta)labelsReader).nextSequence();
      featureSequence=f.getSequenceRecord();
      labelSequence=l.getSequenceRecord();
      meta.add(new RecordMetaDataComposable(f.getMetaData(),l.getMetaData()));
    }
 else {
      featureSequence=recordReader.sequenceRecord();
      labelSequence=labelsReader.sequenceRecord();
    }
    INDArray features=getFeatures(featureSequence);
    INDArray labels=getLabels(labelSequence);
    featureList.add(features);
    labelList.add(labels);
  }
  return nextMultipleSequenceReaders(featureList,labelList,meta);
}
