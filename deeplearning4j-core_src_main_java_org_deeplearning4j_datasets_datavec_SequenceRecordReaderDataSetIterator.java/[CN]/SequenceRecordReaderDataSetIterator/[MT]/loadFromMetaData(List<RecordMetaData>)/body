{
  if (singleSequenceReaderMode) {
    List<SequenceRecord> records=((SequenceRecordReaderMeta)recordReader).loadSequenceFromMetaData(list);
    List<INDArray> listFeatures=new ArrayList<>(list.size());
    List<INDArray> listLabels=new ArrayList<>(list.size());
    int minLength=Integer.MAX_VALUE;
    int maxLength=Integer.MIN_VALUE;
    for (    SequenceRecord sr : records) {
      INDArray[] fl=getFeaturesLabelsSingleReader(sr.getSequenceRecord());
      listFeatures.add(fl[0]);
      listLabels.add(fl[1]);
      minLength=Math.min(minLength,fl[0].size(0));
      maxLength=Math.max(maxLength,fl[1].size(0));
    }
    return getSingleSequenceReader(listFeatures,listLabels,minLength,maxLength,list);
  }
 else {
    List<RecordMetaData> fMeta=new ArrayList<>();
    List<RecordMetaData> lMeta=new ArrayList<>();
    for (    RecordMetaData m : list) {
      RecordMetaDataComposable m2=(RecordMetaDataComposable)m;
      fMeta.add(m2.getMeta()[0]);
      lMeta.add(m2.getMeta()[1]);
    }
    List<SequenceRecord> f=((SequenceRecordReaderMeta)recordReader).loadSequenceFromMetaData(fMeta);
    List<SequenceRecord> l=((SequenceRecordReaderMeta)labelsReader).loadSequenceFromMetaData(lMeta);
    List<INDArray> featureList=new ArrayList<>(fMeta.size());
    List<INDArray> labelList=new ArrayList<>(fMeta.size());
    for (int i=0; i < fMeta.size(); i++) {
      featureList.add(getFeatures(f.get(i).getSequenceRecord()));
      labelList.add(getLabels(l.get(i).getSequenceRecord()));
    }
    return nextMultipleSequenceReaders(featureList,labelList,list);
  }
}
