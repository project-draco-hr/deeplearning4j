{
  if (kernel.isScalar() && input.isScalar())   return kernel.mul(input);
  INDArray shape=ArrayUtil.toNDArray(input.shape()).add(ArrayUtil.toNDArray(kernel.shape())).subi(1);
  int[] intShape=ArrayUtil.toInts(shape);
  int[] axes=ArrayUtil.range(0,intShape.length);
  IComplexNDArray ret=FFT.rawifftn(FFT.rawfftn(input,intShape,axes).muli(FFT.rawfftn(kernel,intShape,axes)),intShape,axes);
switch (type) {
case FULL:
    return ret;
case SAME:
  return ComplexNDArrayUtil.center(ret,input.shape());
case VALID:
return ComplexNDArrayUtil.center(ret,ArrayUtil.toInts(ArrayUtil.toNDArray(input.shape()).sub(ArrayUtil.toNDArray(kernel.shape())).addi(1)));
}
return ret;
}
