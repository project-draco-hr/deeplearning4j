{
  MnistDataSetIterator iter=new MnistDataSetIterator(60,60000);
  @SuppressWarnings("unchecked") ObjectInputStream ois=new ObjectInputStream(new FileInputStream(args[0]));
  BaseNeuralNetwork network=(BaseNeuralNetwork)ois.readObject();
  DataSet test=null;
  while (iter.hasNext()) {
    test=iter.next();
    DoubleMatrix reconstructed=network.reconstruct(test.getFirst());
    for (int i=0; i < test.numExamples(); i++) {
      DoubleMatrix draw1=test.get(i).getFirst().mul(255);
      DoubleMatrix reconstructed2=reconstructed.getRow(i);
      DoubleMatrix draw2=MatrixUtil.binomial(reconstructed2,1,new MersenneTwister(123)).mul(255);
      DrawMnistGreyScale d=new DrawMnistGreyScale(draw1);
      d.title="REAL";
      d.draw();
      DrawMnistGreyScale d2=new DrawMnistGreyScale(draw2,100,100);
      d2.title="TEST";
      d2.draw();
      Thread.sleep(10000);
      d.frame.dispose();
      d2.frame.dispose();
    }
  }
}
