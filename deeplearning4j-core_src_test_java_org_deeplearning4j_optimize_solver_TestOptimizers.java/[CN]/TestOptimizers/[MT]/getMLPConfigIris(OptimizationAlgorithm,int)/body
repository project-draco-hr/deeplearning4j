{
  MultiLayerConfiguration c=new NeuralNetConfiguration.Builder().weightInit(WeightInit.XAVIER).optimizationAlgo(oa).updater((oa == OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT ? Updater.SGD : Updater.NONE)).iterations(nIterations).constrainGradientToUnitNorm(false).regularization(false).learningRate(0.1).applySparsity(false).sparsity(0.0).seed(12345L).list(2).layer(0,new DenseLayer.Builder().nIn(4).nOut(3).activation("relu").build()).layer(1,new OutputLayer.Builder(LossFunction.MCXENT).activation("softmax").nIn(3).nOut(3).build()).backprop(true).pretrain(false).build();
  return c;
}
