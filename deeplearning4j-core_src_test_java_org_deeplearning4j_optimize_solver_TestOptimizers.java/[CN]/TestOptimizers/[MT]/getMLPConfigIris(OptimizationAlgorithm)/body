{
  MultiLayerConfiguration c=new NeuralNetConfiguration.Builder().weightInit(WeightInit.DISTRIBUTION).dist(new NormalDistribution(0,0.1)).activationFunction("sigmoid").lossFunction(LossFunction.MCXENT).optimizationAlgo(oa).iterations(1).batchSize(5).constrainGradientToUnitNorm(false).corruptionLevel(0.0).learningRate(0.1).regularization(true).l2(0.01).applySparsity(false).sparsity(0.0).seed(12345L).list(4).layer(0,new RBM.Builder().nIn(4).nOut(8).build()).layer(1,new RBM.Builder().nIn(8).nOut(10).build()).layer(2,new RBM.Builder().nIn(10).nOut(5).build()).layer(3,new OutputLayer.Builder(LossFunction.MCXENT).nIn(5).nOut(3).weightInit(WeightInit.DISTRIBUTION).build()).backprop(true).pretrain(false).build();
  return c;
}
