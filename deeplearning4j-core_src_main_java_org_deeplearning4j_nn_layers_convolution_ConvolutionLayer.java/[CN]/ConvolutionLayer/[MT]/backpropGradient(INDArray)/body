{
  int inputHeight=input().size(-2);
  int inputWidth=input().size(-1);
  INDArray weights=getParam(ConvolutionParamInitializer.WEIGHT_KEY);
  INDArray delta=calculateDelta(epsilon);
  Gradient retGradient=new DefaultGradient();
  retGradient.setGradientFor(ConvolutionParamInitializer.BIAS_KEY,delta.sum(0,2,3));
  INDArray col=null;
  INDArray weightGradient=Nd4j.tensorMmul(delta,col,new int[][]{{0,2,3},{0,4,5}});
  retGradient.setGradientFor(ConvolutionParamInitializer.WEIGHT_KEY,weightGradient,'c');
  INDArray nextEpsilon=Nd4j.tensorMmul(weights,delta,new int[][]{{0},{1}});
  nextEpsilon=Nd4j.rollAxis(nextEpsilon,3);
  nextEpsilon=Convolution.col2im(nextEpsilon,layerConf().getStride(),layerConf().getPadding(),inputHeight,inputWidth);
  return new Pair<>(retGradient,nextEpsilon);
}
