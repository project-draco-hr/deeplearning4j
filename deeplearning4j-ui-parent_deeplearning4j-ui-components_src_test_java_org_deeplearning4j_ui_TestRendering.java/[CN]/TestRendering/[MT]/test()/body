{
  List<Component> list=new ArrayList<>();
  StyleChart s=new StyleChart.Builder().width(640,LengthUnit.Px).height(480,LengthUnit.Px).margin(LengthUnit.Px,100,40,40,20).strokeWidth(2).pointSize(4).seriesColors(Color.GREEN,Color.MAGENTA).titleStyle(new StyleText.Builder().font("courier").fontSize(16).underline(true).color(Color.GRAY).build()).build();
  Component c1=new ChartLine.Builder("Line Chart!",s).addSeries("series0",new double[]{0,1,2,3},new double[]{0,2,1,4}).addSeries("series1",new double[]{0,1,2,3},new double[]{0,1,0.5,2.5}).setGridWidth(1.0,null).build();
  list.add(c1);
  Component c2=new ChartScatter.Builder("Scatter!",s).addSeries("series0",new double[]{0,1,2,3},new double[]{0,2,1,4}).showLegend(true).setGridWidth(0,0).build();
  list.add(c2);
  Component c3=new ChartHistogram.Builder("Histogram!",s).addBin(-1,-0.5,0.2).addBin(-0.5,0,0.5).addBin(0,1,2.5).addBin(1,2,0.5).build();
  list.add(c3);
  Component c4=new ChartStackedArea.Builder("Area Chart!",s).setXValues(new double[]{0,1,2,3,4,5}).addSeries("series0",new double[]{0,1,0,2,0,1}).addSeries("series1",new double[]{2,1,2,0.5,2,1}).build();
  list.add(c4);
  StyleTable ts=new StyleTable.Builder().backgroundColor(Color.LIGHT_GRAY).headerColor(Color.ORANGE).borderWidth(1).columnWidths(LengthUnit.Percent,20,40,40).width(500,LengthUnit.Px).height(200,LengthUnit.Px).build();
  Component c5=new ComponentTable.Builder(ts).header("H1","H2","H3").content(new String[][]{{"row0col0","row0col1","row0col2"},{"row1col0","row1col1","row1col2"}}).build();
  list.add(c5);
  StyleAccordion ac=new StyleAccordion.Builder().height(480,LengthUnit.Px).width(640,LengthUnit.Px).build();
  Component c6=new DecoratorAccordion.Builder(ac).title("Accordion - Collapsed By Default!").setDefaultCollapsed(true).addComponents(c5).build();
  list.add(c6);
  Component c7=new ComponentText.Builder("Here's some blue text in a green div!",new StyleText.Builder().font("courier").fontSize(30).underline(true).color(Color.BLUE).build()).build();
  Style divStyle=new StyleDiv.Builder().width(30,LengthUnit.Percent).height(200,LengthUnit.Px).backgroundColor(Color.GREEN).floatValue(StyleDiv.FloatValue.right).build();
  Component c8=new ComponentDiv(divStyle,c7,new ComponentText("(Also: it's float right, 30% width, 200 px high )",null));
  list.add(c8);
  List<ChartTimeline.TimelineEntry> entries=new ArrayList<>();
  for (int i=0; i < 10; i++) {
    entries.add(new ChartTimeline.TimelineEntry(String.valueOf(i),10 * i,10 * i + 5));
  }
  List<ChartTimeline.TimelineEntry> entries2=new ArrayList<>();
  for (int i=0; i < 10; i++) {
    entries2.add(new ChartTimeline.TimelineEntry(String.valueOf(i),(int)(5 * i + 0.2 * i * i),(int)(5 * i + 0.2 * i * i) + 3));
  }
  Component c9=new ChartTimeline.Builder("Title",s).addLane("Lane0",entries).addLane("Lane1",entries2).build();
  list.add(c9);
  StringBuilder sb=new StringBuilder();
  sb.append("<!DOCTYPE html>\n" + "<html lang=\"en\">\n" + "<head>\n"+ "    <meta charset=\"UTF-8\">\n"+ "    <title>Title</title>\n"+ "</head>\n"+ "<body>\n"+ "\n"+ "    <div id=\"maindiv\">\n"+ "\n"+ "    </div>\n"+ "\n"+ "\n"+ "    <script src=\"//code.jquery.com/jquery-1.10.2.js\"></script>\n"+ "    <script src=\"https://code.jquery.com/ui/1.11.4/jquery-ui.min.js\"></script>\n"+ "    <link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\">\n"+ "    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n"+ "    <script src=\"src/main/resources/assets/dl4j-ui.js\"></script>\n"+ "\n"+ "    <script>\n");
  ObjectMapper om=new ObjectMapper();
  for (int i=0; i < list.size(); i++) {
    Component component=list.get(i);
    sb.append("        ").append("var str").append(i).append(" = '").append(om.writeValueAsString(component).replaceAll("'","\\\\'")).append("';\n");
    sb.append("        ").append("var obj").append(i).append(" = Component.getComponent(str").append(i).append(");\n");
    sb.append("        ").append("obj").append(i).append(".render($('#maindiv'));\n");
    sb.append("\n\n");
  }
  sb.append("    </script>\n" + "\n" + "</body>\n"+ "</html>");
  FileUtils.writeStringToFile(new File("TestRendering.html"),sb.toString());
}
