{
  if (isVector()) {
    IComplexNumber s=NDArrays.createDouble(0,0);
    for (int i=0; i < length; i++) {
      s.addi((IComplexNumber)getScalar(i).element());
      putScalar(i,s);
    }
  }
 else   if (dimension == Integer.MAX_VALUE || dimension == shape.length - 1) {
    IComplexNDArray flattened=ravel().dup();
    IComplexNumber prevVal=(IComplexNumber)flattened.getScalar(0).element();
    for (int i=1; i < flattened.length(); i++) {
      IComplexNumber d=prevVal.add((IComplexNumber)flattened.getScalar(i).element());
      flattened.putScalar(i,d);
      prevVal=d;
    }
    return flattened;
  }
 else {
    for (int i=0; i < vectorsAlongDimension(dimension); i++) {
      IComplexNDArray vec=vectorAlongDimension(i,dimension);
      vec.cumsumi(0);
    }
  }
  return this;
}
