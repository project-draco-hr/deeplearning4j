{
  this.counter.set(0);
  this.walker.reset(shuffle);
  return new Iterator<Sequence<T>>(){
    private GraphWalker<T> walker=GraphTransformer.this.walker;
    @Override public void remove(){
      throw new UnsupportedOperationException("This is not supported on read-only iterator");
    }
    @Override public boolean hasNext(){
      return walker.hasNext();
    }
    @Override public Sequence<T> next(){
      Sequence<T> sequence=walker.next();
      sequence.setSequenceId(counter.getAndIncrement());
      if (labelsProvider != null) {
        sequence.setSequenceLabel(labelsProvider.getLabel(sequence.getSequenceId()));
      }
      return sequence;
    }
  }
;
}
