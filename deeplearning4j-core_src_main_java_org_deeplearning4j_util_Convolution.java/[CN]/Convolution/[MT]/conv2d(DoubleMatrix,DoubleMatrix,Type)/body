{
  DoubleMatrix xShape=new DoubleMatrix(1,2);
  xShape.put(0,input.rows);
  xShape.put(1,input.columns);
  DoubleMatrix yShape=new DoubleMatrix(1,2);
  yShape.put(0,kernel.rows);
  yShape.put(1,kernel.columns);
  DoubleMatrix zShape=xShape.add(yShape).sub(1);
  int retRows=(int)zShape.get(0);
  int retCols=(int)zShape.get(1);
  log.info("Conv 2d with dims " + retRows + " x "+ retCols);
  ComplexDoubleMatrix fftInput=complexDisceteFourierTransform(input,retRows,retCols);
  ComplexDoubleMatrix fftKernel=complexDisceteFourierTransform(kernel,retRows,retCols);
  ComplexDoubleMatrix mul=fftKernel.mul(fftInput);
  ComplexDoubleMatrix retComplex=complexInverseDisceteFourierTransform(mul);
  DoubleMatrix ret=retComplex.getReal();
  if (type == Type.VALID) {
    DoubleMatrix validShape=xShape.subi(yShape).add(1);
    DoubleMatrix start=zShape.sub(validShape).div(2);
    DoubleMatrix end=start.add(validShape);
    ret=ret.get(RangeUtils.interval((int)start.get(0),(int)end.get(0)),RangeUtils.interval((int)start.get(1),(int)end.get(1)));
  }
  return ret;
}
