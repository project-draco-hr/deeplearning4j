{
  int end=window * 2 + 1 - b;
  int cw=0;
  INDArray neu1=Nd4j.zeros(lookupTable.layerSize());
  T currentWord=sentence.get(i);
  for (int a=b; a < end; a++) {
    if (a != currentWindow) {
      int c=i - currentWindow + a;
      if (c >= 0 && c < sentence.size()) {
        T lastWord=sentence.get(c);
        neu1.addiRowVector(syn0.getRow(lastWord.getIndex()));
        cw++;
      }
    }
  }
  if (cw == 0)   return;
  neu1.divi(cw);
  INDArray neu1e=iterateSample(currentWord,neu1,nextRandom,alpha);
  for (int a=b; a < end; a++) {
    if (a != window) {
      int c=i - window + a;
      if (c >= 0 && c < sentence.size()) {
        T lastWord=sentence.get(c);
        INDArray syn0row=syn0.getRow(lastWord.getIndex());
        Nd4j.getBlasWrapper().level1().axpy(lookupTable.layerSize(),1.0,neu1e,syn0row);
      }
    }
  }
}
