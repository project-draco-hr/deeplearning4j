{
  org.deeplearning4j.nn.conf.layers.GravesBidirectionalLSTM layerConf=(org.deeplearning4j.nn.conf.layers.GravesBidirectionalLSTM)conf.getLayer();
  double forgetGateInit=layerConf.getForgetGateBiasInit();
  Distribution dist=Distributions.createDistribution(layerConf.getDist());
  int nL=layerConf.getNOut();
  int nLast=layerConf.getNIn();
  conf.addVariable(INPUT_WEIGHT_KEY_FORWARDS);
  conf.addVariable(RECURRENT_WEIGHT_KEY_FORWARDS);
  conf.addVariable(BIAS_KEY_FORWARDS);
  conf.addVariable(INPUT_WEIGHT_KEY_BACKWARDS);
  conf.addVariable(RECURRENT_WEIGHT_KEY_BACKWARDS);
  conf.addVariable(BIAS_KEY_BACKWARDS);
  int nParamsInput=nLast * (4 * nL);
  int nParamsRecurrent=nL * (4 * nL + 3);
  int nBias=4 * nL;
  int rwFOffset=nParamsInput;
  int bFOffset=rwFOffset + nParamsRecurrent;
  int iwROffset=bFOffset + nBias;
  int rwROffset=iwROffset + nParamsInput;
  int bROffset=rwROffset + nParamsRecurrent;
  INDArray iwF=paramsView.get(NDArrayIndex.point(0),NDArrayIndex.interval(0,rwFOffset));
  INDArray rwF=paramsView.get(NDArrayIndex.point(0),NDArrayIndex.interval(rwFOffset,bFOffset));
  INDArray bF=paramsView.get(NDArrayIndex.point(0),NDArrayIndex.interval(bFOffset,iwROffset));
  INDArray iwR=paramsView.get(NDArrayIndex.point(0),NDArrayIndex.interval(iwROffset,rwROffset));
  INDArray rwR=paramsView.get(NDArrayIndex.point(0),NDArrayIndex.interval(rwROffset,bROffset));
  INDArray bR=paramsView.get(NDArrayIndex.point(0),NDArrayIndex.interval(bROffset,bROffset + nBias));
  params.put(INPUT_WEIGHT_KEY_FORWARDS,WeightInitUtil.initWeights(nLast,4 * nL,layerConf.getWeightInit(),dist,iwF));
  params.put(RECURRENT_WEIGHT_KEY_FORWARDS,WeightInitUtil.initWeights(nL,4 * nL + 3,layerConf.getWeightInit(),dist,rwF));
  params.put(INPUT_WEIGHT_KEY_BACKWARDS,WeightInitUtil.initWeights(nLast,4 * nL,layerConf.getWeightInit(),dist,iwR));
  params.put(RECURRENT_WEIGHT_KEY_BACKWARDS,WeightInitUtil.initWeights(nL,4 * nL + 3,layerConf.getWeightInit(),dist,rwR));
  bF.put(new INDArrayIndex[]{new NDArrayIndex(0),NDArrayIndex.interval(nL,2 * nL)},Nd4j.ones(1,nL).muli(forgetGateInit));
  bR.put(new INDArrayIndex[]{new NDArrayIndex(0),NDArrayIndex.interval(nL,2 * nL)},Nd4j.ones(1,nL).muli(forgetGateInit));
  params.put(BIAS_KEY_FORWARDS,bF);
  params.put(BIAS_KEY_BACKWARDS,bR);
}
