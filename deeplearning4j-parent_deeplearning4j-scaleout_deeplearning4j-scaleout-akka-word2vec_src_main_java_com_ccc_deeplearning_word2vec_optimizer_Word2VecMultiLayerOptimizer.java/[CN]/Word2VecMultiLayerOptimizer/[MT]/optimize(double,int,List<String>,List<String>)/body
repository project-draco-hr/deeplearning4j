{
  WordConverter converter=new WordConverter(examples,vec);
  DoubleMatrix labelMatrix=converter.toLabelMatrix(labels);
  DoubleMatrix layerInput=network.sigmoidLayers[network.sigmoidLayers.length - 1].sample_h_given_v();
  network.logLayer.input=layerInput;
  network.logLayer.labels=labelMatrix;
  Double crossEntropy=null;
  StringBuffer debug=new StringBuffer();
  for (int i=0; i < epochs; i++) {
    network.logLayer.train(layerInput,labelMatrix,lr);
    lr*=network.learningRateUpdate;
    if (crossEntropy == null)     crossEntropy=network.negativeLogLikelihood();
 else {
      Double currError=network.negativeLogLikelihood();
      Double diff=Math.abs(currError - crossEntropy);
      crossEntropy=currError;
    }
    debug.append(i + "," + crossEntropy+ "\n");
    log.info("Negative log likelihood on epoch " + i + " "+ network.negativeLogLikelihood());
  }
  try {
    FileUtils.writeStringToFile(new File("/home/agibsonccc/Desktop/layer-logistic.csv"),debug.toString());
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
