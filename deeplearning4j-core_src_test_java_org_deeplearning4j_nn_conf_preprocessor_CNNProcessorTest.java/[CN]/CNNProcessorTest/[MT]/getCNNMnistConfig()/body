{
  Nd4j.ENFORCE_NUMERICAL_STABILITY=true;
  MultiLayerConfiguration.Builder conf=new NeuralNetConfiguration.Builder().seed(123).iterations(5).optimizationAlgo(OptimizationAlgorithm.LINE_GRADIENT_DESCENT).list().layer(0,new org.deeplearning4j.nn.conf.layers.ConvolutionLayer.Builder(new int[]{9,9},new int[]{1,1}).nOut(20).weightInit(WeightInit.XAVIER).activation("relu").build()).layer(1,new SubsamplingLayer.Builder(SubsamplingLayer.PoolingType.MAX,new int[]{2,2}).activation("relu").weightInit(WeightInit.XAVIER).build()).layer(2,new OutputLayer.Builder(LossFunctions.LossFunction.NEGATIVELOGLIKELIHOOD).nIn(20).nOut(10).weightInit(WeightInit.XAVIER).activation("softmax").build());
  new ConvolutionLayerSetup(conf,28,28,1);
  return new MultiLayerNetwork(conf.build());
}
