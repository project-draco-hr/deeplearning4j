{
  numFiles=countFiles();
  CountDownLatch latch=new CountDownLatch(numFiles);
  ActorRef fileActor=system.actorOf(new RoundRobinPool(Runtime.getRuntime().availableProcessors()).props(Props.create(VocabCreatorActor.class,this,latch)));
  for (  File f : rootDir.listFiles()) {
    File[] subFiles=f.listFiles();
    if (f.isFile())     fileActor.tell(f,fileActor);
 else     if (subFiles != null)     for (    File doc : subFiles) {
      if (!doc.isFile())       continue;
      fileActor.tell(doc,fileActor);
    }
  }
  try {
    latch.await();
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
  }
  log.info("Done calculating word frequencies");
}
