{
  if (numWorkers == null)   numWorkers=graph.getSparkContext().defaultParallelism();
  if (collectTrainingStats)   stats.logFitStart();
  if (storageLevelStreams != null)   trainingData.persist(storageLevelStreams);
  if (collectTrainingStats)   stats.logCountStart();
  long totalDataSetObjectCount=trainingData.count();
  if (collectTrainingStats)   stats.logCountEnd();
  int dataSetObjectsPerSplit=getNumDataSetObjectsPerSplit(rddDataSetNumExamples);
  if (collectTrainingStats)   stats.logSplitStart();
  JavaPairRDD<String,PortableDataStream>[] splits=SparkUtils.balancedRandomSplit((int)totalDataSetObjectCount,dataSetObjectsPerSplit,trainingData,rng.nextLong());
  if (collectTrainingStats)   stats.logSplitEnd();
  int splitNum=1;
  for (  JavaPairRDD<String,PortableDataStream> split : splits) {
    JavaRDD<PortableDataStream> streams=split.values();
    if (collectTrainingStats)     stats.logRepartitionStart();
    streams=SparkUtils.repartition(streams,repartition,repartitionStrategy,numObjectsEachWorker(rddDataSetNumExamples),numWorkers);
    if (collectTrainingStats && repartition != Repartition.Never)     stats.logRepartitionEnd();
    doIterationPDS_MDS(graph,streams,splitNum++,splits.length);
  }
  if (collectTrainingStats)   stats.logFitEnd((int)totalDataSetObjectCount);
}
