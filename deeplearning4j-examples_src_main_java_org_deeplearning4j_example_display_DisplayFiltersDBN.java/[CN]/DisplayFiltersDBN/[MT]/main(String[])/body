{
  DataSetIterator iter=new LFWDataSetIterator(10,10);
  BaseMultiLayerNetwork network=SerializationUtils.readObject(new File(args[0]));
  NeuralNetPlotter plotter=new NeuralNetPlotter();
  while (iter.hasNext()) {
    DataSet first=iter.next();
    plotter.plotNetworkGradient(network.getLayers()[0],network.getLayers()[0].getGradient(Conf.getDefaultRbmParams()));
    DoubleMatrix reconstruct=network.reconstruct(first.getFirst(),0);
    for (int j=0; j < first.numExamples(); j++) {
      DoubleMatrix draw1=first.get(j).getFirst().mul(255);
      DoubleMatrix reconstructed2=reconstruct.getRow(j);
      DoubleMatrix draw2=MatrixUtil.binomial(reconstructed2,1,new MersenneTwister(123)).mul(255);
      DrawMnistGreyScale d=new DrawMnistGreyScale(draw1);
      d.title="REAL";
      d.draw();
      DrawMnistGreyScale d2=new DrawMnistGreyScale(draw2,1000,1000);
      d2.title="TEST";
      d2.draw();
      Thread.sleep(10000);
      d.frame.dispose();
      d2.frame.dispose();
    }
  }
}
