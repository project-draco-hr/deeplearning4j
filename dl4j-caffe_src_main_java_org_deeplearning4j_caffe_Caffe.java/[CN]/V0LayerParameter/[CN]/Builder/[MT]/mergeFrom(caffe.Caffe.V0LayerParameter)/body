{
  if (other == caffe.Caffe.V0LayerParameter.getDefaultInstance())   return this;
  if (other.hasName()) {
    bitField0_|=0x00000001;
    name_=other.name_;
    onChanged();
  }
  if (other.hasType()) {
    bitField0_|=0x00000002;
    type_=other.type_;
    onChanged();
  }
  if (other.hasNumOutput()) {
    setNumOutput(other.getNumOutput());
  }
  if (other.hasBiasterm()) {
    setBiasterm(other.getBiasterm());
  }
  if (other.hasWeightFiller()) {
    mergeWeightFiller(other.getWeightFiller());
  }
  if (other.hasBiasFiller()) {
    mergeBiasFiller(other.getBiasFiller());
  }
  if (other.hasPad()) {
    setPad(other.getPad());
  }
  if (other.hasKernelsize()) {
    setKernelsize(other.getKernelsize());
  }
  if (other.hasGroup()) {
    setGroup(other.getGroup());
  }
  if (other.hasStride()) {
    setStride(other.getStride());
  }
  if (other.hasPool()) {
    setPool(other.getPool());
  }
  if (other.hasDropoutRatio()) {
    setDropoutRatio(other.getDropoutRatio());
  }
  if (other.hasLocalSize()) {
    setLocalSize(other.getLocalSize());
  }
  if (other.hasAlpha()) {
    setAlpha(other.getAlpha());
  }
  if (other.hasBeta()) {
    setBeta(other.getBeta());
  }
  if (other.hasK()) {
    setK(other.getK());
  }
  if (other.hasSource()) {
    bitField0_|=0x00010000;
    source_=other.source_;
    onChanged();
  }
  if (other.hasScale()) {
    setScale(other.getScale());
  }
  if (other.hasMeanfile()) {
    bitField0_|=0x00040000;
    meanfile_=other.meanfile_;
    onChanged();
  }
  if (other.hasBatchsize()) {
    setBatchsize(other.getBatchsize());
  }
  if (other.hasCropsize()) {
    setCropsize(other.getCropsize());
  }
  if (other.hasMirror()) {
    setMirror(other.getMirror());
  }
  if (blobsBuilder_ == null) {
    if (!other.blobs_.isEmpty()) {
      if (blobs_.isEmpty()) {
        blobs_=other.blobs_;
        bitField0_=(bitField0_ & ~0x00400000);
      }
 else {
        ensureBlobsIsMutable();
        blobs_.addAll(other.blobs_);
      }
      onChanged();
    }
  }
 else {
    if (!other.blobs_.isEmpty()) {
      if (blobsBuilder_.isEmpty()) {
        blobsBuilder_.dispose();
        blobsBuilder_=null;
        blobs_=other.blobs_;
        bitField0_=(bitField0_ & ~0x00400000);
        blobsBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getBlobsFieldBuilder() : null;
      }
 else {
        blobsBuilder_.addAllMessages(other.blobs_);
      }
    }
  }
  if (!other.blobsLr_.isEmpty()) {
    if (blobsLr_.isEmpty()) {
      blobsLr_=other.blobsLr_;
      bitField0_=(bitField0_ & ~0x00800000);
    }
 else {
      ensureBlobsLrIsMutable();
      blobsLr_.addAll(other.blobsLr_);
    }
    onChanged();
  }
  if (!other.weightDecay_.isEmpty()) {
    if (weightDecay_.isEmpty()) {
      weightDecay_=other.weightDecay_;
      bitField0_=(bitField0_ & ~0x01000000);
    }
 else {
      ensureWeightDecayIsMutable();
      weightDecay_.addAll(other.weightDecay_);
    }
    onChanged();
  }
  if (other.hasRandSkip()) {
    setRandSkip(other.getRandSkip());
  }
  if (other.hasDetFgThreshold()) {
    setDetFgThreshold(other.getDetFgThreshold());
  }
  if (other.hasDetBgThreshold()) {
    setDetBgThreshold(other.getDetBgThreshold());
  }
  if (other.hasDetFgFraction()) {
    setDetFgFraction(other.getDetFgFraction());
  }
  if (other.hasDetContextPad()) {
    setDetContextPad(other.getDetContextPad());
  }
  if (other.hasDetCropMode()) {
    bitField0_|=0x40000000;
    detCropMode_=other.detCropMode_;
    onChanged();
  }
  if (other.hasNewNum()) {
    setNewNum(other.getNewNum());
  }
  if (other.hasNewChannels()) {
    setNewChannels(other.getNewChannels());
  }
  if (other.hasNewHeight()) {
    setNewHeight(other.getNewHeight());
  }
  if (other.hasNewWidth()) {
    setNewWidth(other.getNewWidth());
  }
  if (other.hasShuffleImages()) {
    setShuffleImages(other.getShuffleImages());
  }
  if (other.hasConcatDim()) {
    setConcatDim(other.getConcatDim());
  }
  if (other.hasHdf5OutputParam()) {
    mergeHdf5OutputParam(other.getHdf5OutputParam());
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
