{
  if (!dataSetIterator.hasNext()) {
    return Collections.singletonList(0.0);
  }
  List<DataSet> collect=new ArrayList<>();
  while (dataSetIterator.hasNext()) {
    collect.add(dataSetIterator.next());
  }
  DataSet data=DataSet.merge(collect,false);
  if (log.isDebugEnabled()) {
    log.debug("Scoring {} examples with data {}",data.numExamples(),data.labelCounts());
  }
  MultiLayerNetwork network=new MultiLayerNetwork(MultiLayerConfiguration.fromJson(json));
  network.init();
  INDArray val=params.value();
  if (val.length() != network.numParams(false))   throw new IllegalStateException("Network did not have same number of parameters as the broadcasted set parameters");
  network.setParameters(val);
  double score=network.score(data,false);
  if (network.conf().isMiniBatch())   score*=data.getFeatureMatrix().size(0);
  return Collections.singletonList(score);
}
