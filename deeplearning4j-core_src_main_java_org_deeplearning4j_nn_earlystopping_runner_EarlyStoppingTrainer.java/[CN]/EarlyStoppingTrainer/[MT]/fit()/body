{
  log.info("Starting early stopping training");
  MultiLayerNetwork net=new MultiLayerNetwork(configuration);
  net.init();
  Map<Integer,Double> scoreVsEpoch=new LinkedHashMap<>();
  int epochCount=0;
  while (true) {
    train.reset();
    double lastScore;
    boolean terminate=false;
    IterationTerminationCondition terminationReason=null;
    int iterCount=0;
    while (train.hasNext()) {
      DataSet ds=train.next();
      try {
        net.fit(ds);
      }
 catch (      Exception e) {
        log.warn("Early stopping training terminated due to exception at epoch {}, iteration {}",epochCount,iterCount,e);
        return new EarlyStoppingResult(EarlyStoppingResult.TerminationReason.Error,e.toString(),scoreVsEpoch,bestModelEpoch,bestModelScore,net);
      }
      lastScore=net.score();
      for (      IterationTerminationCondition c : esConfig.getIterationTerminationConditions()) {
        if (c.terminate(lastScore)) {
          terminate=true;
          terminationReason=c;
          break;
        }
      }
      if (terminate)       break;
      iterCount++;
    }
    if (terminate) {
      log.info("Hit per iteration epoch condition at epoch {}, iteration {}. Reason: {}",epochCount,iterCount,terminationReason);
      return new EarlyStoppingResult(EarlyStoppingResult.TerminationReason.IterationTerminationCondition,terminationReason.toString(),scoreVsEpoch,bestModelEpoch,bestModelScore,net);
    }
    log.info("Completed training epoch {}",epochCount);
    epochCount++;
    if (epochCount % esConfig.getEvaluateEveryNEpochs() == 0) {
      double testSetScore=0.0;
      scoreVsEpoch.put(epochCount - 1,testSetScore);
      if (testSetScore < bestModelScore) {
        if (bestModelEpoch == -1) {
          log.info("Score at epoch 0: {}",testSetScore);
        }
 else {
          log.info("New best model: score = {}, epoch = {} (previous: score = {}, epoch = {}",testSetScore,epochCount,bestModelScore,bestModelEpoch);
        }
        bestModelScore=testSetScore;
        bestModelEpoch=epochCount;
        try {
          esConfig.getModelSaver().saveBestModel(net,testSetScore);
        }
 catch (        IOException e) {
          throw new RuntimeException("Error saving best model",e);
        }
      }
      if (esConfig.isSaveLastModel()) {
        try {
          esConfig.getModelSaver().saveLatestModel(net,testSetScore);
        }
 catch (        IOException e) {
          throw new RuntimeException("Error saving most frequent model",e);
        }
      }
    }
  }
}
