{
  ClassPathResource cpr=new ClassPathResource("simplegraph.txt");
  EdgeLineProcessor<String> edgeLineProcessor=new DelimitedEdgeLineProcessor(",",false,"//");
  VertexFactory<String> vertexFactory=new StringVertexFactory("v_%d");
  SimpleGraph<String,String> graph=GraphLoader.loadGraph(cpr.getFile().getAbsolutePath(),edgeLineProcessor,vertexFactory,10,false);
  System.out.println(graph);
  for (int i=0; i < 10; i++) {
    List<Edge<String>> edges=graph.getEdgesOut(i);
    assertEquals(2,edges.size());
    Edge<String> first=edges.get(0);
    if (first.getFrom() == i) {
      assertEquals(i,first.getFrom());
      assertEquals((i + 1) % 10,first.getTo());
    }
 else {
      assertEquals((i + 10 - 1) % 10,first.getFrom());
      assertEquals(i,first.getTo());
    }
    Edge<String> second=edges.get(1);
    assertNotEquals(first.getFrom(),second.getFrom());
    if (second.getFrom() == i) {
      assertEquals(i,second.getFrom());
      assertEquals((i + 1) % 10,second.getTo());
    }
 else {
      assertEquals((i + 10 - 1) % 10,second.getFrom());
      assertEquals(i,second.getTo());
    }
  }
}
