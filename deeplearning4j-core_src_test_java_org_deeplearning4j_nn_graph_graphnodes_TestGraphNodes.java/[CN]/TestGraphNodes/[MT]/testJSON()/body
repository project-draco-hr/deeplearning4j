{
  ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("in").addVertex("v1",new ElementWiseVertex(ElementWiseVertex.Op.Add),"in").addVertex("v2",new org.deeplearning4j.nn.conf.graph.MergeVertex(),"in","in").addVertex("v3",new PreprocessorVertex(new CnnToFeedForwardPreProcessor(1,2,1)),"in").addVertex("v4",new org.deeplearning4j.nn.conf.graph.SubsetVertex(0,1),"in").addVertex("v5",new DuplicateToTimeSeriesVertex("in"),"in").addVertex("v6",new LastTimeStepVertex("in"),"in").addLayer("out",new OutputLayer.Builder().nIn(1).nOut(1).build(),"in").setOutputs("out").build();
  String json=conf.toJson();
  ComputationGraphConfiguration conf2=ComputationGraphConfiguration.fromJson(json);
  assertEquals(conf,conf2);
}
