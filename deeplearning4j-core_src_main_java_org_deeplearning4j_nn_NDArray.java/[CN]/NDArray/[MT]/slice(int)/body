{
  if (shape.length == 0) {
    throw new IllegalArgumentException("Can't slice a 0-d NDArray");
  }
 else   if (shape.length == 1) {
    return new NDArray(data,new int[]{},new int[]{},offset + slice * stride[0]);
  }
 else   if (shape.length == 2) {
    int st=stride[0];
    if (st == 1) {
      return new NDArray(data,new int[]{shape[1]},new int[]{1},offset + slice * stride[0]);
    }
 else {
      return new NDArray(data,new int[]{shape[1]},new int[]{stride[1]},offset + slice * stride[0]);
    }
  }
 else {
    return new NDArray(data,Arrays.copyOfRange(shape,1,shape.length),Arrays.copyOfRange(stride,1,stride.length),offset + slice * stride[0]);
  }
}
