{
  ComplexNDArray result=transform.dup();
  if (transform.size(dimension) != n) {
    int[] shape=ArrayUtil.copy(result.shape());
    shape[dimension]=n;
    if (transform.size(dimension) > n) {
      result=ComplexNDArrayUtil.truncate(result,n,dimension);
    }
 else     result=ComplexNDArrayUtil.padWithZeros(result,shape);
  }
  if (dimension != result.shape().length - 1)   result=result.swapAxes(result.shape().length - 1,dimension);
  result.iterateOverAllRows(new FFTSliceOp(result.size(result.shape().length - 1)));
  if (dimension != result.shape().length - 1)   result=result.swapAxes(result.shape().length - 1,dimension);
  return result;
}
