{
  try {
    new NeuralNetConfiguration.Builder().graphBuilder().addInputs("input1").addLayer("dense1",new DenseLayer.Builder().nIn(2).nOut(2).build(),"input1").addLayer("out",new OutputLayer.Builder().nIn(2).nOut(2).build()).setOutputs("out").build();
    fail("No exception thrown for invalid configuration");
  }
 catch (  IllegalStateException e) {
  }
  try {
    new NeuralNetConfiguration.Builder().graphBuilder().addLayer("dense1",new DenseLayer.Builder().nIn(2).nOut(2).build(),"input1").addLayer("out",new OutputLayer.Builder().nIn(2).nOut(2).build(),"dense1").setOutputs("out").build();
    fail("No exception thrown for invalid configuration");
  }
 catch (  IllegalStateException e) {
  }
  try {
    new NeuralNetConfiguration.Builder().graphBuilder().addInputs("input1").addLayer("dense1",new DenseLayer.Builder().nIn(2).nOut(2).build(),"input1").addLayer("out",new OutputLayer.Builder().nIn(2).nOut(2).build(),"dense1").build();
    fail("No exception thrown for invalid configuration");
  }
 catch (  IllegalStateException e) {
  }
  try {
    new NeuralNetConfiguration.Builder().graphBuilder().addInputs("input1").addLayer("dense1",new DenseLayer.Builder().nIn(2).nOut(2).build(),"input1").addLayer("out",new OutputLayer.Builder().nIn(2).nOut(2).build(),"thisDoesntExist").setOutputs("out").build();
    fail("No exception thrown for invalid configuration");
  }
 catch (  IllegalStateException e) {
  }
  try {
    ComputationGraphConfiguration conf=new NeuralNetConfiguration.Builder().graphBuilder().addInputs("input1").addLayer("dense1",new DenseLayer.Builder().nIn(2).nOut(2).build(),"input1","dense3").addLayer("dense2",new DenseLayer.Builder().nIn(2).nOut(2).build(),"dense1").addLayer("dense3",new DenseLayer.Builder().nIn(2).nOut(2).build(),"dense2").addLayer("out",new OutputLayer.Builder().nIn(2).nOut(2).build(),"dense1").setOutputs("out").build();
    ComputationGraph graph=new ComputationGraph(conf);
    graph.init();
    fail("No exception thrown for invalid configuration");
  }
 catch (  IllegalStateException e) {
  }
}
