{
  IComplexNDArray arr2=new ComplexNDArray(new int[]{3,2});
  assertEquals(3,arr2.rows());
  assertEquals(arr2.rows(),arr2.rows());
  assertEquals(2,arr2.columns());
  assertEquals(arr2.columns(),arr2.columns());
  assertTrue(arr2.isMatrix());
  IComplexNDArray arr=new ComplexNDArray(new double[]{0,1},new int[]{1});
  assertEquals(1,arr.length());
  assertEquals(2,arr.data().length);
  IComplexNumber n1=(IComplexNumber)arr.getScalar(0).element();
  assertEquals(0,n1.realComponent().doubleValue(),1e-1);
  ComplexDouble[] two=new ComplexDouble[2];
  two[0]=new ComplexDouble(1,0);
  two[1]=new ComplexDouble(2,0);
  double[] testArr={1,0,2,0};
  IComplexNDArray assertComplexDouble=new ComplexNDArray(testArr,new int[]{2});
  IComplexNDArray testComplexDouble=new ComplexNDArray(two,new int[]{2});
  assertEquals(assertComplexDouble,testComplexDouble);
}
