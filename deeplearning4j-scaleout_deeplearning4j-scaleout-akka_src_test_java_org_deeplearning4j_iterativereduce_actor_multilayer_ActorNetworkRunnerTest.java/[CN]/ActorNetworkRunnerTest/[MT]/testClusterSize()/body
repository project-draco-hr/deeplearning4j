{
  MnistDataSetIterator mnist=new MnistDataSetIterator(5,5);
  TestDataSetIterator iter=new TestDataSetIterator(mnist);
  ActorNetworkRunner runner=new ActorNetworkRunner(iter);
  Conf conf=new Conf();
  conf.setFinetuneEpochs(1);
  conf.setPretrainEpochs(1);
  conf.setPretrainLearningRate(0.0001);
  conf.setLayerSizes(new int[]{500,250,100});
  conf.setMultiLayerClazz(DBN.class);
  conf.setnOut(10);
  conf.setFinetuneLearningRate(0.0001);
  conf.setnIn(784);
  conf.setL2(0.001);
  conf.setMomentum(0);
  conf.setWeightTransforms(Collections.singletonMap(0,(MatrixTransform)new MultiplyScalar(1000)));
  conf.setSplit(10);
  conf.setUseRegularization(false);
  conf.setDeepLearningParams(new Object[]{1,0.0001,1});
  runner.setStateTrackerPort(1100);
  runner.setup(conf);
  ActorNetworkRunner worker=new ActorNetworkRunner(runner.getMasterAddress().toString(),"worker");
  worker.setStateTrackerPort(1100);
  worker.setup(conf);
  assertEquals(true,runner.getStateTracker().numWorkers() == worker.getStateTracker().numWorkers());
  runner.train();
  assertEquals(true,runner.getStateTracker().isDone());
  runner.shutdown();
  worker.shutdown();
}
