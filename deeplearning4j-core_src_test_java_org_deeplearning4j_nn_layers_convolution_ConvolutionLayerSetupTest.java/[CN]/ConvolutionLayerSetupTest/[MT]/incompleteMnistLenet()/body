{
  MultiLayerConfiguration.Builder builder=new NeuralNetConfiguration.Builder().seed(3).optimizationAlgo(OptimizationAlgorithm.CONJUGATE_GRADIENT).list().layer(0,new org.deeplearning4j.nn.conf.layers.ConvolutionLayer.Builder(new int[]{5,5}).nIn(1).nOut(20).build()).layer(1,new org.deeplearning4j.nn.conf.layers.SubsamplingLayer.Builder(new int[]{2,2},new int[]{2,2}).build()).layer(2,new org.deeplearning4j.nn.conf.layers.ConvolutionLayer.Builder(new int[]{5,5}).nIn(1).nOut(50).build()).layer(3,new org.deeplearning4j.nn.conf.layers.SubsamplingLayer.Builder(new int[]{2,2},new int[]{2,2}).build()).layer(4,new org.deeplearning4j.nn.conf.layers.DenseLayer.Builder().nOut(500).build()).layer(5,new org.deeplearning4j.nn.conf.layers.OutputLayer.Builder(LossFunctions.LossFunction.NEGATIVELOGLIKELIHOOD).activation("softmax").nOut(10).build());
  return builder;
}
