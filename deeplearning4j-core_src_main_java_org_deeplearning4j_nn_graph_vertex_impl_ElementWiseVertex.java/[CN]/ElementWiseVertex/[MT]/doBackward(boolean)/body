{
  if (!canDoBackward())   throw new IllegalStateException("Cannot do backward pass: errors not set");
  if (nInForwardPass == 1)   return new Pair<>(null,epsilons);
switch (op) {
case Add:
    INDArray[] out=new INDArray[nInForwardPass];
  out[0]=epsilons[0];
for (int i=1; i < nInForwardPass; i++) out[i]=out[0].dup();
return new Pair<>(null,out);
case Subtract:
INDArray[] out2=new INDArray[2];
out2[0]=epsilons[0];
out2[1]=epsilons[0].mul(-1);
return new Pair<>(null,out2);
case Product:
throw new UnsupportedOperationException("Not yet implemented");
default :
throw new UnsupportedOperationException("Unknown op: " + op);
}
}
