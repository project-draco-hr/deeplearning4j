{
  super(new double[ArrayUtil.prod(shape)]);
  List<ComplexDouble> list=new ArrayList<>();
  for (int i=0; i < slices.size(); i++) {
    ComplexNDArray flattened=slices.get(i).flatten();
    for (int j=0; j < flattened.length; j++)     list.add(flattened.get(j));
  }
  this.data=new double[ArrayUtil.prod(shape) * 2];
  for (int i=0; i < list.size(); i++)   put(i,list.get(i));
  this.shape=shape;
  this.stride=ArrayUtil.calcStrides(shape);
  this.length=ArrayUtil.prod(shape);
  if (this.shape.length == 2) {
    rows=shape[0];
    columns=shape[1];
  }
}
