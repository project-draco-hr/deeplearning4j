{
  log.info("Training network");
  while (getNetwork() == null) {
    log.info("Network is null, this worker has recently joined the cluster. Asking master for a copy of the current network");
    mediator.tell(new DistributedPubSubMediator.Publish(MasterActor.MASTER,new NeedsModelMessage(id)),getSelf());
    try {
      Thread.sleep(15000);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
    }
  }
  while (this.getCurrent() == null) {
    mediator.tell(new DistributedPubSubMediator.Publish(MasterActor.MASTER,new GiveMeMyJob(id,null)),getSelf());
    log.info("Waiting on null job");
    try {
      Thread.sleep(10000);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
    }
  }
  if (this.getCurrent().isPretrain()) {
    log.info("Worker " + id + " pretraining");
    getNetwork().pretrain(this.getCombinedInput(),extraParams);
  }
 else {
    log.info("Worker " + id + " finetuning");
    getNetwork().finetune(outcomes,learningRate,fineTuneEpochs);
  }
  finishedWork();
  return new UpdateableImpl(getNetwork());
}
