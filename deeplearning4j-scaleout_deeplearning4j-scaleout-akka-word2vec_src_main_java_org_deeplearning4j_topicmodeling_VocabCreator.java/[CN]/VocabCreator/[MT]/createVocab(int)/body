{
  Index vocab=new Index();
  calcWordFrequencies();
  for (  String word : tf.keySet()) {
    double tfVal=MathUtils.tf((int)documentWordFrequencies.getCount(word));
    double idfVal=MathUtils.idf(numFiles,idf.getCount(word));
    double tfidfVal=MathUtils.tfidf(tfVal,idfVal);
    java.util.regex.Matcher m=punct.matcher(word);
    if (!stopWords.contains(word) && !m.matches())     tfidf.setCount(word,tfidfVal);
  }
  Counter<String> aggregate=tfidf;
  aggregate.keepTopNKeys(size - 1);
  log.info("Created vocab of size " + aggregate.size());
  wordScores=aggregate;
  for (  String word : aggregate.keySet()) {
    if (vocab.indexOf(word) < 0)     vocab.add(word);
  }
  currVocab=vocab;
  return vocab;
}
