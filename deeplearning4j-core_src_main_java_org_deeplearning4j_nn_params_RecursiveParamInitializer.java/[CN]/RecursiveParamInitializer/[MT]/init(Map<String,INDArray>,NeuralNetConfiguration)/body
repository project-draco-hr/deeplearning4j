{
  org.deeplearning4j.nn.conf.layers.RecursiveAutoEncoder layerConf=(org.deeplearning4j.nn.conf.layers.RecursiveAutoEncoder)conf.getLayer();
  Distribution dist=Distributions.createDistribution(layerConf.getDist());
  int vis=layerConf.getNIn();
  int out=vis * 2;
  params.put(ENCODER_WEIGHT_KEY,WeightInitUtil.initWeights(new int[]{vis,out},layerConf.getWeightInit(),dist));
  params.put(DECODER_WEIGHT_KEY,WeightInitUtil.initWeights(new int[]{out,vis},layerConf.getWeightInit(),dist));
  params.put(HIDDEN_BIAS_KEY,WeightInitUtil.initWeights(new int[]{1,out},layerConf.getWeightInit(),dist));
  params.put(VISIBLE_BIAS_KEY,WeightInitUtil.initWeights(new int[]{1,vis},layerConf.getWeightInit(),dist));
  conf.addVariable(ENCODER_WEIGHT_KEY);
  conf.addVariable(DECODER_WEIGHT_KEY);
  conf.addVariable(HIDDEN_BIAS_KEY);
  conf.addVariable(VISIBLE_BIAS_KEY);
}
