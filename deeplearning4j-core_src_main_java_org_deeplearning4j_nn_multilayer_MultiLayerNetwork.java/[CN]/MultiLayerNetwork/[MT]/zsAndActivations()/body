{
  INDArray currInput=this.input;
  List<INDArray> activations=new ArrayList<>();
  List<INDArray> zs=new ArrayList<>();
  List<INDArray> derivatives=new ArrayList<>();
  for (int i=0; i < layers.length; i++) {
    currInput=zFromPrevLayer(i,currInput);
    applyDropConnectIfNecessary(currInput);
    zs.add(currInput);
    activations.add(Nd4j.getExecutioner().execAndReturn(Nd4j.getOpFactory().createTransform(layerWiseConfigurations.getConf(i).getActivationFunction(),currInput.dup())));
    derivatives.add(Nd4j.getExecutioner().execAndReturn(Nd4j.getOpFactory().createTransform(layerWiseConfigurations.getConf(i).getActivationFunction(),currInput.dup()).derivative()));
  }
  return new Pair<>(derivatives,activations);
}
