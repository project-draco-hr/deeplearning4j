{
  List<INDArray> params=new ArrayList<>();
  for (  Layer l : layers) {
    if (backwardOnly && l instanceof BasePretrainNetwork) {
      BasePretrainNetwork network=(BasePretrainNetwork)l;
      INDArray paramsForL=network.paramsBackprop();
      params.add(paramsForL);
    }
 else {
      INDArray paramsForL=l.params();
      params.add(paramsForL);
    }
  }
  this.params=Nd4j.toFlattened('f',params);
  int idx=0;
  for (  Layer l : layers) {
    if (backwardOnly && l instanceof BasePretrainNetwork) {
      BasePretrainNetwork network=(BasePretrainNetwork)l;
      INDArray paramsForL=network.paramsBackprop();
      params.add(paramsForL);
      int range=l.numParams(backwardOnly);
      INDArray get=this.params.get(NDArrayIndex.point(0),NDArrayIndex.interval(idx,range + idx));
      if (get.length() < 1)       continue;
      l.setParams(get);
      idx+=range;
    }
 else {
      INDArray paramsForL=l.params();
      params.add(paramsForL);
      int range=l.numParams();
      INDArray get=this.params.get(NDArrayIndex.point(0),NDArrayIndex.interval(idx,range + idx));
      if (get.length() < 1)       continue;
      l.setParams(get);
      idx+=range;
    }
  }
}
