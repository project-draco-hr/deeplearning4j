{
  if (layerWiseConfigurations.isPretrain()) {
    pretrain(iter);
    iter.reset();
    while (iter.hasNext()) {
      DataSet next=iter.next();
      if (next == null || next.getFeatureMatrix() == null || next.getLabels() == null)       break;
      setInput(next.getFeatureMatrix());
      setLabels(next.getLabels());
      finetune();
    }
  }
  if (layerWiseConfigurations.isBackprop()) {
    if (layerWiseConfigurations.isPretrain())     iter.reset();
    update(TaskUtils.buildTask(iter));
    iter.reset();
    while (iter.hasNext()) {
      DataSet next=iter.next();
      if (next == null || next.getFeatureMatrix() == null || next.getLabels() == null)       break;
      boolean hasMaskArrays=next.hasMaskArrays();
      if (layerWiseConfigurations.getBackpropType() == BackpropType.TruncatedBPTT) {
        doTruncatedBPTT(next.getFeatureMatrix(),next.getLabels(),next.getFeaturesMaskArray(),next.getLabelsMaskArray());
      }
 else {
        if (hasMaskArrays)         setLayerMaskArrays(next.getFeaturesMaskArray(),next.getLabelsMaskArray());
        setInput(next.getFeatureMatrix());
        setLabels(next.getLabels());
        if (solver == null) {
          solver=new Solver.Builder().configure(conf()).listeners(getListeners()).model(this).build();
        }
        solver.optimize();
      }
      if (hasMaskArrays)       clearLayerMaskArrays();
    }
  }
}
