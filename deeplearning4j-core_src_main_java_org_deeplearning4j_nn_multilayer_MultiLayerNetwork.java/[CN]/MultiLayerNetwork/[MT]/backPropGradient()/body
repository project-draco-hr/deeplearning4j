{
  List<INDArray> deltas=computeDeltas();
  List<Pair<INDArray,INDArray>> vWvB=new ArrayList<>();
  for (int i=0; i < layers.length; i++)   vWvB.add(new Pair<>(layers[i].getParam(DefaultParamInitializer.WEIGHT_KEY),layers[i].getParam(DefaultParamInitializer.BIAS_KEY)));
  List<Pair<INDArray,INDArray>> list=new ArrayList<>();
  for (int l=0; l < getnLayers() + 1; l++) {
    INDArray gradientChange=deltas.get(l);
    if (gradientChange.length() != getLayers()[l].getParam(DefaultParamInitializer.WEIGHT_KEY).length())     throw new IllegalStateException("Gradient change not equal to weight change");
    INDArray deltaColumnSums=deltas.get(l).isVector() ? deltas.get(l) : deltas.get(l).mean(0);
    list.add(new Pair<>(gradientChange,deltaColumnSums));
  }
  if (mask == null)   initMask();
  return list;
}
