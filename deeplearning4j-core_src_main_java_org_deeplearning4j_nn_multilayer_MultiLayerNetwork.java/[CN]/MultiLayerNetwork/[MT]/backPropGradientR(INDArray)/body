{
  if (mask == null)   initMask();
  List<INDArray> deltas=computeDeltasR(v);
  List<Pair<INDArray,INDArray>> list=new ArrayList<>();
  for (int l=0; l < getnLayers(); l++) {
    INDArray gradientChange=deltas.get(l);
    if (gradientChange.length() != getLayers()[l].getParam(DefaultParamInitializer.WEIGHT_KEY).length())     throw new IllegalStateException("Gradient change not equal to weight change");
    INDArray deltaColumnSums=deltas.get(l).mean(0);
    if (deltaColumnSums.length() != layers[l].getParam(DefaultParamInitializer.BIAS_KEY).length())     throw new IllegalStateException("Bias change not equal to weight change");
    list.add(new Pair<>(gradientChange,deltaColumnSums));
  }
  INDArray pack=pack(list).addi(mask.mul(defaultConfiguration.getL2()).muli(v)).addi(v.mul(layerWiseConfigurations.getDampingFactor()));
  return unPack(pack);
}
