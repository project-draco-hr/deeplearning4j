{
  final int numLayers=this.net.getnLayers();
  INDArray result;
  MultiLayerNetwork mynet=this.net;
  if (rnnState != null) {
    for (int layer=0; layer < rnnState.length; layer++) {
      mynet.rnnSetPreviousState(layer,rnnState[layer]);
    }
  }
 else {
    mynet.rnnClearPreviousState();
  }
  long start=System.currentTimeMillis();
  result=mynet.rnnTimeStep(input);
  long end=System.currentTimeMillis();
  @SuppressWarnings("unchecked") Map<String,INDArray>[] newRNNState=new HashMap[numLayers];
  for (int i=0; i < numLayers; i++) {
    newRNNState[i]=mynet.rnnGetPreviousState(i);
  }
  this.mid.addAndGet(end - start);
  INDArray embedding=Nd4j.zeros(this.nOut);
  for (int i=0; i < this.nOut; i++)   embedding.putScalar(i,result.getDouble(new int[]{0,i,0}));
  return newRNNState;
}
