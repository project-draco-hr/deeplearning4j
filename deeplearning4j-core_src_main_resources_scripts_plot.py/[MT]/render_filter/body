def render_filter(path, n_rows, n_cols, data_length):
    X = load_file(path)
    data = math.sqrt(n_rows)
    print ('data ' + str(data))
    tiled = (ones(((data * n_rows), (data * n_cols)), dtype='unit8') * 51)
    for row in xrange(n_rows):
        for col in xrange(n_cols):
            curr_neuron = col
            patch = X[:, curr_neuron].reshape((data, data))
            normPatch = ((patch - patch.min()) / ((patch.max() - patch.min()) + 1e-06))
            tiled[(row * data):((row * data) + data), (col * data):((col * data) + data)] = (normPatch * 255)
    Image.fromarray(tiled).show()
