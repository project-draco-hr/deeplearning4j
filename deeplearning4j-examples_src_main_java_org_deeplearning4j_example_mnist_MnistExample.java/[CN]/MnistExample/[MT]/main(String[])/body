{
  DataSetIterator iter=new MnistDataSetIterator(60000,60000);
  DataSet shuffled=iter.next();
  shuffled.sortByLabel();
  iter=new ListDataSetIterator(shuffled.asList(),100);
  DBN dbn=new DBN.Builder().hiddenLayerSizes(new int[]{600,500,400}).numberOfInputs(784).numberOfOutPuts(iter.totalOutcomes()).build();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    dbn.pretrain(next.getFeatureMatrix(),1,1e-1f,1000);
  }
  iter.reset();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    dbn.finetune(next.getLabels(),1e-1f,1000);
  }
  BufferedOutputStream bos=new BufferedOutputStream(new FileOutputStream("mnist-dbn.bin"));
  dbn.write(bos);
  bos.flush();
  bos.close();
  iter.reset();
  Evaluation eval=new Evaluation();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    INDArray predict=dbn.output(next.getFeatureMatrix());
    INDArray labels=next.getLabels();
    eval.eval(labels,predict);
  }
  log.info("Prediction f scores and accuracy");
  log.info(eval.stats());
}
