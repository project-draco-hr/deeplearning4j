{
  if (this.input == null || this.layers == null || this.layers[0] == null || this.sigmoidLayers == null || this.sigmoidLayers[0] == null) {
    this.input=input;
    initializeLayers(input);
  }
 else   this.input=input;
  DoubleMatrix layerInput=null;
  for (int i=0; i < nLayers; i++) {
    if (i == 0)     layerInput=this.input;
 else     layerInput=sigmoidLayers[i - 1].sampleHGivenV(layerInput);
    log.info("Training on layer " + (i + 1));
    if (forceNumEpochs) {
      for (int epoch=0; epoch < epochs; epoch++) {
        log.info("Error on epoch " + epoch + " for layer "+ (i + 1)+ " is "+ layers[i].getReConstructionCrossEntropy());
        layers[i].train(layerInput,learningRate,new Object[]{k,learningRate});
      }
    }
 else     layers[i].trainTillConvergence(layerInput,learningRate,new Object[]{k});
  }
}
