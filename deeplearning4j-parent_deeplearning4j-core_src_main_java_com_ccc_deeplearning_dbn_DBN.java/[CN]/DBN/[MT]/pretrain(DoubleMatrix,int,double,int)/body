{
  if (this.input == null) {
    this.input=input;
    initializeLayers(input);
  }
 else   this.input=input;
  DoubleMatrix layerInput=null;
  for (int i=0; i < nLayers; i++) {
    if (i == 0)     layerInput=this.input;
 else     layerInput=sigmoidLayers[i - 1].sampleHGivenV(layerInput);
    log.info("Training on layer " + (i + 1));
    Integer numTimesOver=1;
    Double bestLoss=layers[i].getReConstructionCrossEntropy();
    for (int epoch=0; epoch < epochs; epoch++) {
      boolean trainedProperly=this.trainNetwork(layers[i],sigmoidLayers[i],epoch,layerInput,learningRate,bestLoss,new Object[]{k});
      if (!trainedProperly)       numTimesOver++;
      if (numTimesOver >= 30) {
        log.info("Breaking early; " + numTimesOver);
      }
    }
  }
}
