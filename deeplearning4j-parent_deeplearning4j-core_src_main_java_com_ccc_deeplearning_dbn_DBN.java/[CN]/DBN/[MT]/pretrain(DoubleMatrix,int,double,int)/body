{
  if (this.input == null) {
    this.input=input;
    initializeLayers(input);
  }
  DoubleMatrix layerInput=null;
  for (int i=0; i < nLayers; i++) {
    if (i == 0)     layerInput=this.input;
 else     layerInput=sigmoidLayers[i - 1].sampleHGivenV(layerInput);
    log.info("Training on layer " + (i + 1));
    RBM r=(RBM)this.layers[i];
    HiddenLayer h=this.sigmoidLayers[i];
    StringBuffer debug=new StringBuffer();
    for (int epoch=0; epoch < epochs; epoch++) {
      r.trainTillConvergence(learningRate,k,layerInput);
      h.W=r.W;
      h.b=r.hBias;
      double entropy=r.getReConstructionCrossEntropy();
      debug.append(epoch + "," + entropy+ "\n");
      log.info("Cross entropy for layer " + (i + 1) + " on epoch "+ epoch+ " is "+ entropy);
    }
    try {
      FileUtils.writeStringToFile(new File("/home/agibsonccc/Desktop/layer-" + i + ".csv"),debug.toString());
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
}
