{
  DoubleMatrix z=output(input);
switch (lossFunction) {
case MCXENT:
    DoubleMatrix p_y_given_x=sigmoid(input.mmul(W).addRowVector(b));
  DoubleMatrix dy=labels.sub(p_y_given_x);
return input.transpose().mmul(dy);
case XENT:
DoubleMatrix xEntDiff=z.sub(labels);
return input.transpose().mmul(xEntDiff.div(z.mul(oneMinus(z))));
case MSE:
DoubleMatrix mseDelta=labels.sub(z);
return input.transpose().mmul(mseDelta.neg());
case EXPLL:
return input.transpose().mmul(oneMinus(labels).div(z));
case RMSE_XENT:
return input.transpose().mmul(sqrt(pow(labels.sub(z),2)));
}
throw new IllegalStateException("Invalid loss function");
}
