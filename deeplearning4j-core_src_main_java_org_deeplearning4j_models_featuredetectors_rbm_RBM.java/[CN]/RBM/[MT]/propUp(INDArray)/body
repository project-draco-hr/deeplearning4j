{
  INDArray W=getParam(PretrainParamInitializer.WEIGHT_KEY);
  INDArray hBias=getParam(PretrainParamInitializer.BIAS_KEY);
  if (conf.getVisibleUnit() == VisibleUnit.GAUSSIAN)   this.sigma=v.var(0).divi(input.rows());
  INDArray preSig=v.mmul(W);
  if (conf.isConcatBiases())   preSig=Nd4j.hstack(preSig,hBias);
 else   preSig.addiRowVector(hBias);
  if (conf.getHiddenUnit() == HiddenUnit.RECTIFIED) {
    preSig=max(preSig,1.0);
    return preSig;
  }
 else   if (conf.getHiddenUnit() == HiddenUnit.GAUSSIAN) {
    INDArray add=preSig.add(Nd4j.randn(preSig.rows(),preSig.columns(),conf.getRng()));
    preSig.addi(add);
    return preSig;
  }
 else   if (conf.getHiddenUnit() == HiddenUnit.BINARY) {
    return sigmoid(preSig);
  }
 else   if (conf.getHiddenUnit() == HiddenUnit.SOFTMAX)   return Nd4j.getExecutioner().execAndReturn(Nd4j.getOpFactory().createTransform("softmax",preSig),0);
  throw new IllegalStateException("Hidden unit type should either be binary, gaussian, or rectified linear");
}
