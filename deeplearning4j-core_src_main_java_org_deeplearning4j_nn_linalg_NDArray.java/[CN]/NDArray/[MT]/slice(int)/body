{
  if (shape.length == 0)   throw new IllegalArgumentException("Can't slice a 0-d NDArray");
 else   if (shape.length == 1)   return new NDArray(data,ArrayUtil.empty(),ArrayUtil.empty(),offset + slice * stride[0]);
 else   if (shape.length == 2) {
    int st=stride[0];
    if (st == 1)     return new NDArray(data,ArrayUtil.of(shape[1]),offset + slice * stride[0]);
 else     return new NDArray(data,ArrayUtil.of(shape[1]),ArrayUtil.of(stride[1]),offset + slice * stride[0]);
  }
 else   return new NDArray(data,Arrays.copyOfRange(shape,1,shape.length),Arrays.copyOfRange(stride,1,stride.length),offset + slice * stride[0]);
}
