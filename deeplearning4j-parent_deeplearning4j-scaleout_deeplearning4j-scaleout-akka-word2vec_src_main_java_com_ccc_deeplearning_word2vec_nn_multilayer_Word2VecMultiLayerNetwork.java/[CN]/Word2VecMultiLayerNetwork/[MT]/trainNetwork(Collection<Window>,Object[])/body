{
  int columns=vec.getLayerSize() * vec.getWindow();
  int rows=windows.size();
  if (rows < 1) {
    log.info("Unable to train on empty windows; returning");
    return;
  }
  List<Window> w=new ArrayList<Window>(windows);
  DoubleMatrix ret=new DoubleMatrix(rows,columns);
  DoubleMatrix labels=new DoubleMatrix(rows,this.labelStrings.size());
  for (int i=0; i < rows; i++) {
    Window w2=w.get(i);
    ret.putRow(i,new DoubleMatrix(WindowConverter.asExample(w2,vec)));
    labels.putRow(i,MatrixUtil.toOutcomeVector(this.labelStrings.indexOf(w.get(i).getLabel()),this.labelStrings.size()));
  }
  super.trainNetwork(ret,labels,otherParams);
}
