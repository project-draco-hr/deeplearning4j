{
  NDArray arr=new NDArray(DoubleMatrix.linspace(1,24,24).data,new int[]{4,3,2});
  ComplexNDArray arr2=new ComplexNDArray(arr);
  assertEquals(arr,arr2.getReal());
  NDArray firstSlice=arr.slice(0);
  NDArray firstSliceTest=arr2.slice(0).getReal();
  assertEquals(firstSlice,firstSliceTest);
  NDArray secondSlice=arr.slice(1);
  NDArray secondSliceTest=arr2.slice(1).getReal();
  assertEquals(secondSlice,secondSliceTest);
  NDArray slice0=new NDArray(new double[]{1,2,3,4,5,6},new int[]{3,2});
  NDArray slice2=new NDArray(new double[]{7,8,9,10,11,12},new int[]{3,2});
  ComplexNDArray testSliceComplex=arr2.slice(0);
  ComplexNDArray testSliceComplex2=arr2.slice(1);
  NDArray testSlice0=testSliceComplex.getReal();
  NDArray testSlice1=testSliceComplex2.getReal();
  assertEquals(slice0,testSlice0);
  assertEquals(slice2,testSlice1);
  NDArray n2=new NDArray(DoubleMatrix.linspace(1,30,30).data,new int[]{3,5,2});
  NDArray swapped=n2.swapAxes(n2.shape().length - 1,1);
  NDArray firstSlice2=swapped.slice(0).slice(0);
  ComplexNDArray testSlice=new ComplexNDArray(firstSlice2);
  ComplexNDArray testNoOffset=new ComplexNDArray(new double[]{1,0,3,0,5,0,7,0,9,0},new int[]{5});
  assertEquals(testSlice,testNoOffset);
}
