{
  ComplexNDArray n=new ComplexNDArray(new NDArray(new double[]{1,2,3},new int[]{3}));
  ComplexNDArray swapped=n.swapAxes(1,0);
  assertEquals(n.transpose(),swapped);
  assertEquals(swapped.get(0),n.get(0));
  assertEquals(swapped.get(1),n.get(1));
  assertEquals(swapped.get(2),n.get(2));
  ComplexNDArray n2=new ComplexNDArray(new NDArray(DoubleMatrix.linspace(0,7,8).data,new int[]{2,2,2}));
  ComplexNDArray assertion=n2.permute(new int[]{2,1,0});
  ComplexNDArray validate=new ComplexNDArray(new NDArray(new double[]{0,4,2,6,1,5,3,7},new int[]{2,2,2}));
  assertEquals(validate,assertion);
  ComplexNDArray v1=new ComplexNDArray(new NDArray(DoubleMatrix.linspace(1,8,8).data,new int[]{8}));
  ComplexNDArray swap=v1.swapAxes(1,0);
  ComplexNDArray transposed=v1.transpose();
  assertEquals(swap,transposed);
  transposed.put(1,9);
  swap.put(1,9);
  assertEquals(transposed,swap);
  assertEquals(transposed.get(1),swap.get(1));
  ComplexNDArray row=n2.slice(0).getRow(1);
  row.put(1,9);
  assertEquals(9,row.get(1).real(),1e-1);
}
