{
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().learningRate(0.1).list().layer(0,new DenseLayer.Builder().nIn(9).nOut(10).build()).layer(1,new CustomLayer(3.14159)).layer(2,new OutputLayer.Builder(LossFunctions.LossFunction.MCXENT).nIn(10).nOut(11).build()).pretrain(false).backprop(true).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.init();
  assertEquals(9 * 10 + 10,net.getLayer(0).numParams());
  assertEquals(10 * 10 + 10,net.getLayer(1).numParams());
  assertEquals(10 * 11 + 11,net.getLayer(2).numParams());
  net.output(Nd4j.rand(1,9));
  net.fit(new DataSet(Nd4j.rand(1,9),Nd4j.rand(1,11)));
}
