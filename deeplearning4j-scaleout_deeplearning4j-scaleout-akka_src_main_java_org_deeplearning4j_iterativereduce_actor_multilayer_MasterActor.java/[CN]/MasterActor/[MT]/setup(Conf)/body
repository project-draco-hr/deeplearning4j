{
  RandomGenerator rng=new MersenneTwister(conf.getSeed());
  BaseMultiLayerNetwork network=new BaseMultiLayerNetwork.Builder<>().numberOfInputs(conf.getnIn()).numberOfOutPuts(conf.getnOut()).withClazz(conf.getMultiLayerClazz()).hiddenLayerSizes(conf.getLayerSizes()).withRng(rng).build();
  masterResults=new UpdateableImpl(network);
  Conf c=conf.copy();
  Address masterAddress=Cluster.get(context().system()).selfAddress();
  log.info("Starting worker");
  ActorRef worker=ActorNetworkRunner.startWorker(masterAddress,c);
  log.info("Broadcasting initial master network");
  mediator.tell(new DistributedPubSubMediator.Publish(BROADCAST,new UpdateMessage<>(masterResults)),getSelf());
  mediator.tell(new DistributedPubSubMediator.Publish(MasterActor.MASTER,conf.getPretrainEpochs()),mediator);
}
