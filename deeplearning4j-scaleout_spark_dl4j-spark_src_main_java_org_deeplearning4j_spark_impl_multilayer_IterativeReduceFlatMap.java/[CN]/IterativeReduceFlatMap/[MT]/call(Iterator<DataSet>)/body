{
  if (!dataSetIterator.hasNext()) {
    return Collections.singletonList(new Tuple3<INDArray,Updater,Double>(Nd4j.zeros(this.params.getValue().shape()),null,0.0));
  }
  List<DataSet> collect=new ArrayList<>();
  while (dataSetIterator.hasNext()) {
    collect.add(dataSetIterator.next());
  }
  DataSet data=DataSet.merge(collect,false);
  if (log.isDebugEnabled()) {
    log.debug("Training on {} examples with data {}",data.numExamples(),data.labelCounts());
  }
  INDArray val=params.getValue();
  Updater upd=updater.getValue();
  MultiLayerNetwork network=new MultiLayerNetwork(MultiLayerConfiguration.fromJson(json));
  network.init();
  network.setListeners(new ScoreIterationListener(1),new BestScoreIterationListener(best_score_acc));
  if (val.length() != network.numParams(false))   throw new IllegalStateException("Network did not have same number of parameters as the broadcasted set parameters");
  network.setParameters(val);
  network.setUpdater(upd);
  network.fit(data);
  return Collections.singletonList(new Tuple3<>(network.params(false),network.getUpdater(),network.score()));
}
