{
  List<Updateable> master_results=new ArrayList<>();
  List<Updateable> workerResults=new ArrayList<>();
  int iterations=Integer.parseInt(props.getProperty(APP_NUM_ITERATIONS));
  log.info("Starting Epochs (" + iterations + ")...");
  for (int x=0; x < iterations; x++) {
    for (    ComputableWorker worker : workers) {
      Updateable result=worker.compute();
      workerResults.add(result);
    }
    Updateable master_result=this.master.compute(workerResults,master_results);
    for (    ComputableWorker worker : workers) {
      worker.update(master_result);
    }
    log.info("Complete " + iterations + " Iterations Per Worker.");
    if (null != props.getProperty(APP_OUTPUT_PATH)) {
      String outputPath=props.getProperty(APP_OUTPUT_PATH);
      log.info("Writing the output to: " + outputPath);
      try {
        Path out=new Path(outputPath);
        FileSystem fs=out.getFileSystem(defaultConf);
        FSDataOutputStream fos;
        fos=fs.create(out);
        master.complete(fos);
        fos.flush();
        fos.close();
      }
 catch (      IOException e) {
        log.error("IO Exception loading path",e);
      }
    }
 else     log.info("Not Firing Master::Complete() function due to no output path in conf");
  }
}
