{
  Collection<String> updates=stateTracker.workerUpdates();
  Collection<Job> currentJobs;
  try {
    currentJobs=stateTracker.currentJobs();
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  if (!updates.isEmpty() && currentJobs.isEmpty()) {
    workRouter.update();
    Future<Void> f=Futures.future(new Callable<Void>(){
      /** 
 * Computes a result, or throws an exception if unable to do so.
 * @return computed result
 * @throws Exception if unable to compute a result
 */
      @Override public Void call() throws Exception {
        mediator.tell(new DistributedPubSubMediator.Publish(BatchActor.BATCH,MoreWorkMessage.getInstance()),getSelf());
        log.info("Requesting more work...");
        return null;
      }
    }
,context().dispatcher());
    ActorRefUtils.throwExceptionIfExists(f,context().dispatcher());
  }
 else   if (currentJobs.isEmpty()) {
    stateTracker.finish();
    stateTracker.shutdown();
    context().system().shutdown();
    log.info("Current jobs is empty and no more updates; terminating");
  }
}
