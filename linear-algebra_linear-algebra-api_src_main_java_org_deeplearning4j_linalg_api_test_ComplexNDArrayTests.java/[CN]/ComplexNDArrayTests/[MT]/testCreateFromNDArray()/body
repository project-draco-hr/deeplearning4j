{
  INDArray arr=NDArrays.create(new double[][]{{1,2},{3,4}});
  IComplexNDArray complex=NDArrays.createComplex(arr);
  for (int i=0; i < arr.rows(); i++) {
    for (int j=0; j < arr.columns(); j++) {
      double d=arr.get(i,j);
      IComplexNumber complexD=complex.getComplex(i,j);
      assertEquals(NDArrays.createDouble(d,0),complexD);
    }
  }
  NDArrays.factory().setOrder('f');
  INDArray fortran=NDArrays.create(new double[][]{{1,2},{3,4}});
  assertEquals(arr,fortran);
  IComplexNDArray fortranComplex=NDArrays.createComplex(fortran);
  for (int i=0; i < fortran.rows(); i++) {
    for (int j=0; j < fortran.columns(); j++) {
      double d=fortran.get(i,j);
      IComplexNumber complexD=fortranComplex.getComplex(i,j);
      assertEquals(NDArrays.createDouble(d,0),complexD);
    }
  }
  NDArrays.factory().setOrder('c');
}
