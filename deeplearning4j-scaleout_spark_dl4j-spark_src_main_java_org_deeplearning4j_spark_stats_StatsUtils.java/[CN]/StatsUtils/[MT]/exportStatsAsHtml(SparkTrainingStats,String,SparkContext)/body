{
  Set<String> keySet=sparkTrainingStats.getKeySet();
  List<Component> components=new ArrayList<>();
  StyleChart styleChart=new StyleChart.Builder().backgroundColor(Color.WHITE).width(800,LengthUnit.Px).height(400,LengthUnit.Px).build();
  StyleText styleText=new StyleText.Builder().color(Color.BLACK).fontSize(20).build();
  Component headerText=new ComponentText("Deeplearning4j - Spark Training Analysis Statistics Plots",styleText);
  Component header=new ComponentDiv(new StyleDiv.Builder().height(40,LengthUnit.Px).width(100,LengthUnit.Percent).build(),headerText);
  components.add(header);
  Set<String> keySetInclude=new HashSet<>();
  for (  String s : keySet)   if (sparkTrainingStats.defaultIncludeInPlots(s))   keySetInclude.add(s);
  components.add(getTrainingStatsTimelineChart(sparkTrainingStats,keySetInclude));
  for (  String s : keySet) {
    List<EventStats> list=new ArrayList<>(sparkTrainingStats.getValue(s));
    Collections.sort(list,new StartTimeComparator());
    double[] x=new double[list.size()];
    double[] duration=new double[list.size()];
    for (int i=0; i < duration.length; i++) {
      x[i]=i;
      duration[i]=list.get(i).getDurationMs();
    }
    components.add(new ChartLine.Builder(s,styleChart).addSeries("Duration",x,duration).build());
  }
  String html=StaticPageUtil.renderHTML(components);
  SparkUtils.writeStringToFile(path,html,sc);
}
