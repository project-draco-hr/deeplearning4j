{
  if (iter == null) {
    Word2Vec ret=new Word2Vec();
    ret.layerSize=layerSize;
    ret.window=window;
    ret.stopWords=StopWords.getStopWords();
    ret.setCache(vocabCache);
    ret.minWordFrequency=minWordFrequency;
    try {
      if (tokenizerFactory == null)       tokenizerFactory=new UimaTokenizerFactory();
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
    if (vocabCache == null)     vocabCache=new InMemoryLookupCache(layerSize);
    ret.tokenizerFactory=tokenizerFactory;
    vocabCache.resetWeights();
    vocabCache.incrementWordCount(UNK,1);
    vocabCache.addWordToIndex(0,UNK);
    VocabWord w=new VocabWord(1,UNK);
    w.setIndex(0);
    vocabCache.putVocabWord(UNK,w);
    vocabCache.resetWeights();
    return ret;
  }
 else {
    Word2Vec ret=new Word2Vec();
    ret.layerSize=layerSize;
    ret.sentenceIter=iter;
    ret.window=window;
    ret.stopWords=stopWords;
    ret.minWordFrequency=minWordFrequency;
    ret.setCache(vocabCache);
    ret.minWordFrequency=minWordFrequency;
    try {
      if (tokenizerFactory == null)       tokenizerFactory=new UimaTokenizerFactory();
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
    if (vocabCache == null)     vocabCache=new InMemoryLookupCache(layerSize);
    vocabCache.incrementWordCount(UNK,1);
    vocabCache.addWordToIndex(0,UNK);
    VocabWord w=new VocabWord(1,UNK);
    w.setIndex(0);
    vocabCache.putVocabWord(UNK,w);
    vocabCache.resetWeights();
    ret.tokenizerFactory=tokenizerFactory;
    return ret;
  }
}
