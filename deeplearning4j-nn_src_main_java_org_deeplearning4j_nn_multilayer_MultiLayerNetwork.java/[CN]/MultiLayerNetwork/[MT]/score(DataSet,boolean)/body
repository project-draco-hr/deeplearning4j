{
  boolean hasMaskArray=data.hasMaskArrays();
  if (hasMaskArray)   setLayerMaskArrays(data.getFeaturesMaskArray(),data.getLabelsMaskArray());
  List<INDArray> activations=feedForwardToLayer(layers.length - 2,data.getFeatureMatrix(),training);
  int n=activations.size();
  setLabels(data.getLabels());
  if (getOutputLayer() instanceof IOutputLayer) {
    IOutputLayer ol=(IOutputLayer)getOutputLayer();
    INDArray olInput=activations.get(n - 1);
    if (getLayerWiseConfigurations().getInputPreProcess(n - 1) != null) {
      olInput=getLayerWiseConfigurations().getInputPreProcess(n - 1).preProcess(olInput,input.size(0));
    }
    ol.setInput(olInput);
    ol.setLabels(data.getLabels());
    ol.computeScore(calcL1(),calcL2(),training);
    this.score=ol.score();
  }
 else {
    log.warn("Cannot calculate score wrt labels without an OutputLayer");
    return 0.0;
  }
  if (hasMaskArray)   clearLayerMaskArrays();
  return score();
}
