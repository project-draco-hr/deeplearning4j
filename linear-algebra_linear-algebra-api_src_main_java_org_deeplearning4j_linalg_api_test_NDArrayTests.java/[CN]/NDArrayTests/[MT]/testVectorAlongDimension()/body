{
  INDArray arr=NDArrays.linspace(1,24,24).reshape(new int[]{4,3,2});
  INDArray assertion=NDArrays.create(new float[]{1,2},new int[]{2});
  assertEquals(NDArrays.create(new float[]{3,4},new int[]{2}),arr.vectorAlongDimension(1,2));
  assertEquals(assertion,arr.vectorAlongDimension(0,2));
  assertEquals(arr.vectorAlongDimension(0,1),NDArrays.create(new float[]{1,3,5}));
  INDArray testColumn2Assertion=NDArrays.create(new float[]{7,9,11});
  INDArray testColumn2=arr.vectorAlongDimension(1,1);
  assertEquals(testColumn2Assertion,testColumn2);
  INDArray testColumn3Assertion=NDArrays.create(new float[]{13,15,17});
  INDArray testColumn3=arr.vectorAlongDimension(2,1);
  assertEquals(testColumn3Assertion,testColumn3);
  INDArray v1=NDArrays.linspace(1,4,4).reshape(new int[]{2,2});
  INDArray testColumnV1=v1.vectorAlongDimension(0,0);
  INDArray testColumnV1Assertion=NDArrays.create(new float[]{1,3});
  assertEquals(testColumnV1Assertion,testColumnV1);
  INDArray testRowV1=v1.vectorAlongDimension(1,0);
  INDArray testRowV1Assertion=NDArrays.create(new float[]{2,4});
  assertEquals(testRowV1Assertion,testRowV1);
  INDArray lastAxis=arr.vectorAlongDimension(0,2);
  assertEquals(assertion,lastAxis);
}
