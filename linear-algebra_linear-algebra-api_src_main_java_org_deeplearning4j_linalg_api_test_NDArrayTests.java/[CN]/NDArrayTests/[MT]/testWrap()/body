{
  int[] shape={2,4};
  INDArray d=NDArrays.linspace(1,8,8).reshape(shape[0],shape[1]);
  INDArray n=d;
  assertEquals(d.rows(),n.rows());
  assertEquals(d.columns(),n.columns());
  INDArray vector=NDArrays.linspace(1,3,3);
  INDArray testVector=vector;
  for (int i=0; i < vector.length(); i++)   assertEquals((float)vector.getScalar(i).element(),(float)testVector.getScalar(i).element(),1e-1);
  assertEquals(3,testVector.length());
  assertEquals(true,testVector.isVector());
  assertEquals(true,Shape.shapeEquals(new int[]{3},testVector.shape()));
  INDArray row12=NDArrays.linspace(1,2,2).reshape(2,1);
  INDArray row22=NDArrays.linspace(3,4,2).reshape(1,2);
  assertEquals(row12.rows(),2);
  assertEquals(row12.columns(),1);
  assertEquals(row22.rows(),1);
  assertEquals(row22.columns(),2);
}
