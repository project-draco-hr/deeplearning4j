{
  INDArray WTDelta=W.transpose().mmul(deltaFull);
  INDArray WTDeltaNoBias=WTDelta.isMatrix() ? WTDelta.get(interval(0,1),interval(0,(deltaFull.rows() * 2) + 1)) : WTDelta.get(interval(0,(deltaFull.rows() * 2)));
  int size=deltaFull.length();
  INDArray deltaINDArray=Nd4j.create(size * 2,1);
  INDArray fullVector=Nd4j.concat(0,leftVector,rightVector);
  for (int slice=0; slice < size; ++slice) {
    if (deltaFull.data().dataType() == DataBuffer.DOUBLE) {
      INDArray scaledFullVector=Nd4j.getBlasWrapper().scal(deltaFull.getScalar(slice).getDouble(0),fullVector);
      deltaINDArray=deltaINDArray.add(Wt.slice(slice).add(Wt.slice(slice).transpose()).mmul(scaledFullVector));
    }
 else {
      INDArray scaledFullVector=Nd4j.getBlasWrapper().scal((float)deltaFull.getScalar(slice).getDouble(0),fullVector);
      deltaINDArray.addi(Wt.slice(slice).add(Wt.slice(slice).transpose()).mmul(scaledFullVector));
    }
  }
  return deltaINDArray.add(WTDeltaNoBias);
}
