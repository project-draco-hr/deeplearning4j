{
  MnistDataSetIterator fetcher=new MnistDataSetIterator(300,300);
  MersenneTwister rand=new MersenneTwister(123);
  DenoisingAutoEncoder da=new DenoisingAutoEncoder.Builder().numberOfVisible(784).numHidden(100).withRandom(rand).build();
  DataSet data=null;
  if (fetcher.hasNext()) {
    data=fetcher.next();
    double lr=0.1;
    da.trainTillConverge(data.getFirst(),lr,0.6);
    log.info("Cross entropy " + da.getReConstructionCrossEntropy() + " negative log likelihood "+ da.negativeLoglikelihood(0.6));
  }
  DoubleMatrix reconstructed=da.reconstruct(data.getFirst());
  for (int i=0; i < data.getFirst().length; i++) {
    double d=data.getFirst().get(i);
    double r=reconstructed.get(i);
    if (d == 1)     log.info("D " + d + " R "+ r);
  }
}
