{
  final INDArray dxs=Nd4j.create(this.initFeatures.size(),this.initFeatures.get(0).columns());
  final AtomicInteger sum=new AtomicInteger(0);
  final CountDownLatch latch=new CountDownLatch(initFeatures.size());
  for (int i=0; i < this.initFeatures.size(); i++) {
    final int i2=i;
    exec.submit(new Runnable(){
      @Override public void run(){
        INDArray features=initFeatures.get(i2);
        int nearestCentroidIndex=nearestCentroid(features);
        INDArray nearestCentroid=centroids.getRow(nearestCentroidIndex);
        sum.getAndAdd((int)Math.pow(getDistance(features,nearestCentroid),2));
        dxs.putScalar(i2,sum.get());
        latch.countDown();
      }
    }
);
  }
  try {
    latch.await();
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
  }
  return dxs;
}
