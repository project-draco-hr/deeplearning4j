{
  NDArray test=new NDArray(DoubleMatrix.linspace(1,4,4).data,new int[]{2,2});
  final AtomicInteger count=new AtomicInteger(0);
  test.iterateOverDimension(1,new SliceOp(){
    @Override public void operate(    DimensionSlice nd){
      log.info("Operator " + nd);
      NDArray test=(NDArray)nd.getResult();
      if (count.get() == 0) {
        NDArray firstDimension=new NDArray(new double[]{1,2},new int[]{2});
        assertEquals(firstDimension,test);
      }
 else {
        NDArray firstDimension=new NDArray(new double[]{3,4},new int[]{2});
        assertEquals(firstDimension,test);
      }
      count.incrementAndGet();
    }
  }
);
  count.set(0);
  test.iterateOverDimension(0,new SliceOp(){
    @Override public void operate(    DimensionSlice nd){
      log.info("Operator " + nd);
      NDArray test=(NDArray)nd.getResult();
      if (count.get() == 0) {
        NDArray firstDimension=new NDArray(new double[]{1,3},new int[]{2});
        assertEquals(firstDimension,test);
      }
 else {
        NDArray firstDimension=new NDArray(new double[]{2,4},new int[]{2});
        assertEquals(firstDimension,test);
      }
      count.incrementAndGet();
    }
  }
);
}
