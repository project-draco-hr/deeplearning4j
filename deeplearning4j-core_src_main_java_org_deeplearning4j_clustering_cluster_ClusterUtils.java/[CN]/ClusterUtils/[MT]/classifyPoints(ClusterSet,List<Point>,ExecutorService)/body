{
  final ClusterSetInfo clusterSetInfo=ClusterSetInfo.initialize(clusterSet,true);
  List<Runnable> tasks=new ArrayList<>();
  for (  final Point point : points) {
    tasks.add(new Runnable(){
      public void run(){
        try {
          PointClassification result=classifyPoint(clusterSet,point);
          if (result.isNewLocation())           clusterSetInfo.getPointLocationChange().incrementAndGet();
          clusterSetInfo.getClusterInfo(result.getCluster().getId()).getPointDistancesFromCenter().put(point.getId(),result.getDistanceFromCenter());
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
    }
);
  }
  MultiThreadUtils.parallelTasks(tasks,executorService);
  return clusterSetInfo;
}
