{
  final Random random=new Random();
  List<Runnable> tasks=new ArrayList<Runnable>();
  for (int i=0, j=clusters.size(); i < j; i++) {
    final Cluster cluster=clusters.get(i);
    tasks.add(new Runnable(){
      public void run(){
        try {
          ClusterInfo clusterInfo=clusterSetInfo.getClusterInfo(cluster.getId());
          List<String> fartherPoints=clusterInfo.getPointsFartherFromCenterThan(maxDistance);
          int rank=java.lang.Math.min(fartherPoints.size(),3);
          String pointId=fartherPoints.get(random.nextInt(rank));
          Point point=cluster.removePoint(pointId);
          clusterSet.addNewClusterWithCenter(point);
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
    }
);
  }
  MultiThreadUtils.parallelTasks(tasks,executorService);
}
