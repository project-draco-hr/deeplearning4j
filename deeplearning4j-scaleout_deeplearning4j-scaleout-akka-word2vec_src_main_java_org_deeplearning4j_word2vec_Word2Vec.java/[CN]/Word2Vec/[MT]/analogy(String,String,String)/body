{
  INDArray wv0=getWordVectorMatrix(word0);
  INDArray wv1=getWordVectorMatrix(word1);
  INDArray wv2=getWordVectorMatrix(word2);
  INDArray wordVector=wv1.sub(wv0).add(wv2);
  if (wv1 == null || wv2 == null || wv0 == null)   return null;
  INDArray tempVector;
  String name;
  List<VocabWord> wordEntrys=new ArrayList<>(topNSize);
  for (int i=0; i < syn0.rows(); i++) {
    name=wordIndex.get(i).toString();
    if (name.equals(word0) || name.equals(word1) || name.equals(word2)) {
      continue;
    }
    tempVector=syn0.getRow(i);
    double dist=NDArrays.getBlasWrapper().dot(wordVector,tempVector);
    insertTopN(name,dist,wordEntrys);
  }
  return new TreeSet<>(wordEntrys);
}
