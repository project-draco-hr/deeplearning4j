{
  this.shape=shape;
  if (this.shape.length == 1) {
    rows=1;
    columns=this.shape[0];
  }
 else   if (this.shape().length == 2) {
    if (shape[0] == 1) {
      this.shape=new int[1];
      this.shape[0]=shape[1];
      rows=1;
      columns=shape[1];
    }
 else {
      rows=shape[0];
      columns=shape[1];
    }
  }
 else   if (this.shape.length == 1) {
    columns=this.shape[0];
    rows=1;
  }
  if (this.ordering == '\u0000')   this.ordering=NDArrays.order();
  this.length=ArrayUtil.prod(this.shape);
  if (this.stride == null) {
    if (ordering == NDArrayFactory.FORTRAN)     this.stride=ArrayUtil.calcStridesFortran(shape);
 else     this.stride=ArrayUtil.calcStrides(this.shape);
  }
  if (this.stride.length != this.shape.length) {
    if (ordering == NDArrayFactory.FORTRAN)     this.stride=ArrayUtil.calcStridesFortran(this.shape);
 else     this.stride=ArrayUtil.calcStrides(this.shape);
  }
}
