{
  if (!hasNext())   throw new NoSuchElementException("No next elements");
  Map<String,List<List<Writable>>> nextRRVals=new HashMap<>();
  Map<String,List<List<List<Writable>>>> nextSeqRRVals=new HashMap<>();
  List<RecordMetaDataComposableMap> nextMetas=(collectMetaData ? new ArrayList<RecordMetaDataComposableMap>() : null);
  for (  Map.Entry<String,RecordReader> entry : recordReaders.entrySet()) {
    RecordReader rr=entry.getValue();
    List<List<Writable>> writables=new ArrayList<>(num);
    for (int i=0; i < num && rr.hasNext(); i++) {
      List<Writable> record;
      if (collectMetaData && metaCollectionPossible) {
        Record r=((RecordReaderMeta)rr).nextRecord();
        record=r.getRecord();
        if (nextMetas.size() <= i) {
          nextMetas.add(new RecordMetaDataComposableMap(new HashMap<String,RecordMetaData>()));
        }
        RecordMetaDataComposableMap map=nextMetas.get(i);
        map.getMeta().put(entry.getKey(),r.getMetaData());
      }
 else {
        record=rr.next();
      }
      writables.add(record);
    }
    nextRRVals.put(entry.getKey(),writables);
  }
  for (  Map.Entry<String,SequenceRecordReader> entry : sequenceRecordReaders.entrySet()) {
    SequenceRecordReader rr=entry.getValue();
    List<List<List<Writable>>> writables=new ArrayList<>(num);
    for (int i=0; i < num && rr.hasNext(); i++) {
      List<List<Writable>> sequence;
      if (collectMetaData && metaCollectionPossible) {
        SequenceRecord r=((SequenceRecordReaderMeta)rr).nextSequence();
        sequence=r.getSequenceRecord();
        if (nextMetas.size() <= i) {
          nextMetas.add(new RecordMetaDataComposableMap(new HashMap<String,RecordMetaData>()));
        }
        RecordMetaDataComposableMap map=nextMetas.get(i);
        map.getMeta().put(entry.getKey(),r.getMetaData());
      }
 else {
        sequence=rr.sequenceRecord();
      }
      writables.add(sequence);
    }
    nextSeqRRVals.put(entry.getKey(),writables);
  }
  return nextMultiDataSet(nextRRVals,nextSeqRRVals,nextMetas);
}
