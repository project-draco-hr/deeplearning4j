{
  Class<?> layerClazz=layer.getClass();
  Field[] neuralNetConfFields=Dl4jReflection.getAllFields(configInst.getClass());
  Field[] layerFields=Dl4jReflection.getAllFields(layerClazz);
  for (  Field neuralNetField : neuralNetConfFields) {
    neuralNetField.setAccessible(true);
    for (    Field layerField : layerFields) {
      layerField.setAccessible(true);
      if (neuralNetField.getName().equals(layerField.getName())) {
        try {
          Object valForConfig=neuralNetField.get(configInst);
          Object layerFieldValue=layerField.get(layer);
          if (layerFieldValue != null) {
            if (valForConfig.getClass().equals(layerFieldValue.getClass())) {
              neuralNetField.set(configInst,layerFieldValue);
            }
          }
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
  }
  return configInst;
}
