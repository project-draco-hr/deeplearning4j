{
  this.minimize=neuralNetConfiguration.minimize;
  this.layerFactory=neuralNetConfiguration.layerFactory;
  this.numLineSearchIterations=neuralNetConfiguration.numLineSearchIterations;
  this.batchSize=neuralNetConfiguration.batchSize;
  this.sparsity=neuralNetConfiguration.sparsity;
  this.useAdaGrad=neuralNetConfiguration.useAdaGrad;
  this.lr=neuralNetConfiguration.lr;
  this.momentum=neuralNetConfiguration.momentum;
  this.l2=neuralNetConfiguration.l2;
  this.numIterations=neuralNetConfiguration.numIterations;
  this.k=neuralNetConfiguration.k;
  this.corruptionLevel=neuralNetConfiguration.corruptionLevel;
  this.visibleUnit=neuralNetConfiguration.visibleUnit;
  this.hiddenUnit=neuralNetConfiguration.hiddenUnit;
  this.useRegularization=neuralNetConfiguration.useRegularization;
  this.momentumAfter=neuralNetConfiguration.momentumAfter;
  this.resetAdaGradIterations=neuralNetConfiguration.resetAdaGradIterations;
  this.dropOut=neuralNetConfiguration.dropOut;
  this.applySparsity=neuralNetConfiguration.applySparsity;
  this.weightInit=neuralNetConfiguration.weightInit;
  this.optimizationAlgo=neuralNetConfiguration.optimizationAlgo;
  this.lossFunction=neuralNetConfiguration.lossFunction;
  this.constrainGradientToUnitNorm=neuralNetConfiguration.constrainGradientToUnitNorm;
  this.rng=neuralNetConfiguration.rng;
  this.dist=neuralNetConfiguration.dist;
  this.seed=neuralNetConfiguration.seed;
  this.nIn=neuralNetConfiguration.nIn;
  this.nOut=neuralNetConfiguration.nOut;
  this.activationFunction=neuralNetConfiguration.activationFunction;
  this.visibleUnit=neuralNetConfiguration.visibleUnit;
  this.weightShape=neuralNetConfiguration.weightShape;
  this.stride=neuralNetConfiguration.stride;
  this.filterSize=neuralNetConfiguration.filterSize;
  this.convolutionType=neuralNetConfiguration.getConvolutionType();
  this.featureMapSize=neuralNetConfiguration.featureMapSize;
  this.l1=neuralNetConfiguration.l1;
  this.hiddenUnit=neuralNetConfiguration.hiddenUnit;
}
