{
  if (useDropConnect && (Double.isNaN(dropOut) && (Double.isNaN(layer.getDropOut()))))   throw new IllegalStateException(layerName + " dropConnect is set to true but dropout rate has not been added to configuration.");
  if (useDropConnect && dropOut == 0.0)   throw new IllegalStateException(layerName + " dropConnect is set to true but dropout rate is set to 0.0");
  if (useRegularization && (Double.isNaN(l1) && layer != null && Double.isNaN(layer.getL1()) && Double.isNaN(l2) && Double.isNaN(layer.getL2()) && (Double.isNaN(dropOut) || dropOut == 0.0) && (Double.isNaN(layer.getDropOut()) || layer.getDropOut() == 0.0)))   log.warn(layerName + " regularization is set to true but l1, l2 or dropout has not been added to configuration.");
  if (layer != null) {
    if (useRegularization) {
      if (!Double.isNaN(l1) && Double.isNaN(layer.getL1()))       layer.setL1(l1);
      if (!Double.isNaN(l2) && Double.isNaN(layer.getL2()))       layer.setL2(l2);
    }
 else     if (!useRegularization && (!Double.isNaN(l1) || !Double.isNaN(layer.getL1()) || !Double.isNaN(l2)|| !Double.isNaN(layer.getL2())) || layer.getL1() != 0.0 || layer.getL2() != 0.0)     log.warn(layerName + " l1 or l2 has been added to configuration but useRegularization is set to false.");
    if (Double.isNaN(l2) && Double.isNaN(layer.getL2()))     layer.setL2(0.0);
    if (Double.isNaN(l1) && Double.isNaN(layer.getL1()))     layer.setL1(0.0);
    if (layer.getWeightInit() == WeightInit.DISTRIBUTION) {
      if (dist != null && layer.getDist() == null)       layer.setDist(dist);
 else       if (dist == null && layer.getDist() == null) {
        layer.setDist(new NormalDistribution(1e-3,1));
        log.warn(layerName + " distribution is automatically set to normalize distribution with mean 1e-3 and variance 1.");
      }
    }
 else     if ((dist != null || layer.getDist() != null))     log.warn(layerName + " distribution is set but will not be applied unless weight init is set to WeighInit.DISTRIBUTION.");
  }
}
