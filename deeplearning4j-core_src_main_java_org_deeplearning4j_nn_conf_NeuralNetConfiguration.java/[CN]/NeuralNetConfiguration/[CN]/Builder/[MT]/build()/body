{
  NeuralNetConfiguration ret=new NeuralNetConfiguration();
  ret.activationFunction=this.activationFunction;
  ret.applySparsity=this.applySparsity;
  ret.batchSize=this.batchSize;
  ret.constrainGradientToUnitNorm=this.constrainGradientToUnitNorm;
  ret.convolutionType=this.convolutionType;
  ret.corruptionLevel=this.corruptionLevel;
  ret.dist=this.dist;
  ret.dropOut=this.dropOut;
  ret.filterSize=this.filterSize;
  ret.k=this.k;
  ret.kernel=this.kernel;
  ret.l1=this.l1;
  ret.l2=this.l2;
  ret.hiddenUnit=this.hiddenUnit;
  ret.visibleUnit=this.visibleUnit;
  ret.weightShape=this.weightShape;
  ret.nIn=this.nIn;
  ret.nOut=this.nOut;
  ret.useRegularization=this.useRegularization;
  ret.optimizationAlgo=this.optimizationAlgo;
  ret.rng=this.rng;
  ret.seed=this.seed;
  ret.minimize=this.minimize;
  ret.lr=this.lr;
  ret.listeners=this.listeners;
  ret.numLineSearchIterations=this.numLineSearchIterations;
  ret.stride=this.stride;
  ret.useAdaGrad=this.adagrad;
  ret.layerFactory=this.layerFactory;
  ret.momentum=this.momentum;
  ret.momentumAfter=this.momentumAfter;
  ret.numIterations=this.numIterations;
  ret.stepFunction=stepFunction;
  ret.lossFunction=this.lossFunction;
  ret.featureMapSize=featureMapSize;
  return ret;
}
