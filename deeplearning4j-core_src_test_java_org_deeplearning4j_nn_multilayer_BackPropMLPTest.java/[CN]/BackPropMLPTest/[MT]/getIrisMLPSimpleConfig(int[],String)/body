{
  MultiLayerConfiguration c=new NeuralNetConfiguration.Builder().nIn(4).nOut(3).weightInit(WeightInit.DISTRIBUTION).dist(new NormalDistribution(0,0.1)).activationFunction(activationFunction).lossFunction(LossFunction.XENT).optimizationAlgo(OptimizationAlgorithm.GRADIENT_DESCENT).iterations(1).batchSize(1).constrainGradientToUnitNorm(false).corruptionLevel(0.0).layer(new RBM()).learningRate(0.1).useAdaGrad(false).regularization(false).l1(0.0).l2(0.0).dropOut(0.0).momentum(0.0).applySparsity(false).sparsity(0.0).seed(12345L).list(hiddenLayerSizes.length + 1).hiddenLayerSizes(hiddenLayerSizes).override(hiddenLayerSizes.length,new ClassifierOverride()).backward(true).pretrain(false).useDropConnect(false).build();
  return c;
}
