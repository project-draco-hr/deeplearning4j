{
  int size=13;
  DataSetIterator baseIter=new TestIterator(size,0);
  DataSetIterator async=new AsyncDataSetIterator(baseIter,1);
  for (int i=0; i < size; i++) {
    assertTrue(async.hasNext());
    DataSet ds=async.next();
    assertEquals(ds.getFeatureMatrix().getDouble(0),i,0.0);
    assertEquals(ds.getLabels().getDouble(0),i,0.0);
  }
  assertFalse(async.hasNext());
  async.reset();
  assertEquals(baseIter.cursor(),0);
  assertTrue(async.hasNext());
  ((AsyncDataSetIterator)async).shutdown();
  baseIter=new TestIterator(size,5);
  async=new AsyncDataSetIterator(baseIter,5);
  for (int i=0; i < size; i++) {
    assertTrue(async.hasNext());
    DataSet ds=async.next();
    assertEquals(ds.getFeatureMatrix().getDouble(0),i,0.0);
    assertEquals(ds.getLabels().getDouble(0),i,0.0);
  }
  assertFalse(async.hasNext());
  async.reset();
  assertEquals(baseIter.cursor(),0);
  assertTrue(async.hasNext());
  ((AsyncDataSetIterator)async).shutdown();
  baseIter=new TestIterator(size,100);
  async=new AsyncDataSetIterator(baseIter,100);
  for (int i=0; i < size; i++) {
    assertTrue(async.hasNext());
    DataSet ds=async.next();
    assertEquals(ds.getFeatureMatrix().getDouble(0),i,0.0);
    assertEquals(ds.getLabels().getDouble(0),i,0.0);
  }
  assertFalse(async.hasNext());
  async.reset();
  assertEquals(baseIter.cursor(),0);
  assertTrue(async.hasNext());
  ((AsyncDataSetIterator)async).shutdown();
  baseIter=new TestIterator(size,1000);
  async=new AsyncDataSetIterator(baseIter,5);
  for (int i=0; i < size; i++) {
    assertTrue(async.hasNext());
    DataSet ds=async.next();
    assertEquals(ds.getFeatureMatrix().getDouble(0),i,0.0);
    assertEquals(ds.getLabels().getDouble(0),i,0.0);
  }
  assertFalse(async.hasNext());
  async.reset();
  assertEquals(baseIter.cursor(),0);
  assertTrue(async.hasNext());
  ((AsyncDataSetIterator)async).shutdown();
}
