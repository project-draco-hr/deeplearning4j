{
  MultiLayerConfiguration conf=new NeuralNetConfiguration.Builder().activation("relu").list(2).layer(0,new DenseLayer.Builder().nIn(2).nOut(2).build()).layer(1,new DenseLayer.Builder().nIn(2).nOut(2).build()).build();
  MultiLayerNetwork net=new MultiLayerNetwork(conf);
  net.init();
  assertEquals(conf.getConf(0).getLayer().getActivationFunction().toString(),"relu");
  assertEquals(conf.getConf(1).getLayer().getActivationFunction().toString(),"relu");
  conf=new NeuralNetConfiguration.Builder().activation("relu").list(2).layer(0,new DenseLayer.Builder().nIn(2).nOut(2).build()).layer(1,new DenseLayer.Builder().nIn(2).nOut(2).activation("tanh").build()).build();
  net=new MultiLayerNetwork(conf);
  net.init();
  assertEquals(conf.getConf(0).getLayer().getActivationFunction().toString(),"relu");
  assertEquals(conf.getConf(1).getLayer().getActivationFunction().toString(),"tanh");
}
