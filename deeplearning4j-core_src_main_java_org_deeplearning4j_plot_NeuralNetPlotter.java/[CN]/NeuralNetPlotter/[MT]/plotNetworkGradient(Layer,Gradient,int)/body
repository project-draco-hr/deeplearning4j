{
  histogram(new String[]{"W","hbias","vbias","w-gradient","hbias-gradient","vbias-gradient"},new INDArray[]{network.getParam(DefaultParamInitializer.WEIGHT_KEY),network.getParam(PretrainParamInitializer.BIAS_KEY),network.getParam(PretrainParamInitializer.VISIBLE_BIAS_KEY),gradient.gradientLookupTable().get(DefaultParamInitializer.WEIGHT_KEY),gradient.gradientLookupTable().get(DefaultParamInitializer.BIAS_KEY),gradient.gradientLookupTable().get(PretrainParamInitializer.VISIBLE_BIAS_KEY)});
  plotActivations(network);
  FilterRenderer render=new FilterRenderer();
  try {
    if (network.getParam(DefaultParamInitializer.WEIGHT_KEY).shape().length > 2) {
      INDArray w=network.getParam(DefaultParamInitializer.WEIGHT_KEY).dup();
      INDArray render2=w.transpose();
      render.renderFilters(render2,"currimg.png",w.columns(),w.rows(),w.slices());
    }
 else     render.renderFilters(network.getParam(DefaultParamInitializer.WEIGHT_KEY).dup(),"currimg.png",(int)Math.sqrt(network.getParam(DefaultParamInitializer.WEIGHT_KEY).rows()),(int)Math.sqrt(network.getParam(DefaultParamInitializer.WEIGHT_KEY).rows()),patchesPerRow);
  }
 catch (  Exception e) {
    log.error("Unable to plot filter, continuing...",e);
  }
}
