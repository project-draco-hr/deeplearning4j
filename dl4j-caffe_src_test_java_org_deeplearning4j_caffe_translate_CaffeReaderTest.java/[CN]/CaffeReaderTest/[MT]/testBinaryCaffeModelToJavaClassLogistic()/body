{
  NetParameter net=reader.readBinaryNet(getLogisticBinaryNetPath(),1000);
  assertEquals(net.getName(),"LogisticRegressionNet");
  assertEquals(net.getLayerCount(),3);
  LayerParameter firstLayer=net.getLayer(0);
  assertTrue(firstLayer != null);
  assertEquals(firstLayer.getName(),"data");
  assertEquals(firstLayer.getType(),"HDF5Data");
  List firstLayerTopList=firstLayer.getTopList();
  assertEquals(firstLayerTopList.size(),2);
  assertEquals(firstLayerTopList.get(0),"data");
  assertEquals(firstLayerTopList.get(1),"label");
  assertEquals(firstLayer.getBottomCount(),0);
  LayerParameter secondLayer=net.getLayer(1);
  assertTrue(secondLayer != null);
  assertEquals(secondLayer.getName(),"fc1");
  assertEquals(secondLayer.getType(),"InnerProduct");
  List secondLayerTopList=secondLayer.getTopList();
  assertEquals(secondLayerTopList.size(),1);
  assertEquals(secondLayerTopList.get(0),"fc1");
  List secondLayerBottomList=secondLayer.getBottomList();
  assertEquals(secondLayerBottomList.size(),1);
  assertEquals(secondLayerBottomList.get(0),"data");
  Caffe.BlobProto secondLayerWeightBlob=secondLayer.getBlobs(0);
  Caffe.BlobProto secondLayerBiasBlob=secondLayer.getBlobs(1);
  assertEquals(secondLayerWeightBlob.getShape().getDimList(),Arrays.asList(3L,4L));
  assertEquals(secondLayerWeightBlob.getData(0),0.789,1e-1);
  assertEquals(secondLayerWeightBlob.getData(11),2.35,1e-1);
  assertEquals(secondLayerBiasBlob.getShape().getDimList(),Arrays.asList(3L));
  assertEquals(secondLayerBiasBlob.getData(0),0.862,1e-1);
  assertEquals(secondLayerBiasBlob.getData(2),-2.104,1e-1);
  LayerParameter thirdLayer=net.getLayer(2);
  assertTrue(thirdLayer != null);
  assertEquals(thirdLayer.getName(),"loss");
  assertEquals(thirdLayer.getType(),"SoftmaxWithLoss");
  List thirdLayerTopList=thirdLayer.getTopList();
  List thirdLayerBottomList=thirdLayer.getBottomList();
  assertEquals(thirdLayerTopList.get(0),"loss");
  assertEquals(thirdLayerBottomList.get(0),"fc1");
  assertEquals(thirdLayerBottomList.get(1),"label");
}
