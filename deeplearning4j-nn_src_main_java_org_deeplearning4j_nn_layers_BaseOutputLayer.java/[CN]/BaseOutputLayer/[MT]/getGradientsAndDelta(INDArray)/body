{
  INDArray output=Nd4j.getExecutioner().execAndReturn(Nd4j.getOpFactory().createTransform(conf().getLayer().getActivationFunction(),preOut.dup()));
  INDArray outSubLabels=output.sub(getLabels2d());
  Gradient gradient=new DefaultGradient();
  INDArray weightGradView=gradientViews.get(DefaultParamInitializer.WEIGHT_KEY);
  INDArray biasGradView=gradientViews.get(DefaultParamInitializer.BIAS_KEY);
  gradient.gradientForVariable().put(DefaultParamInitializer.WEIGHT_KEY,weightGradView);
  gradient.gradientForVariable().put(DefaultParamInitializer.BIAS_KEY,biasGradView);
  if (maskArray != null) {
    outSubLabels.muliColumnVector(maskArray);
  }
  Triple<Gradient,INDArray,INDArray> triple;
switch (layerConf().getLossFunction()) {
  }
  return triple;
}
