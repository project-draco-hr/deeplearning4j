{
  Evaluation evaluation=new Evaluation(Arrays.asList("class0","class1"));
  INDArray predicted0=Nd4j.create(new double[]{1,0});
  INDArray predicted1=Nd4j.create(new double[]{0,1});
  INDArray actual0=Nd4j.create(new double[]{1,0});
  INDArray actual1=Nd4j.create(new double[]{0,1});
  for (int i=0; i < 20; i++) {
    evaluation.eval(actual0,predicted0);
  }
  for (int i=0; i < 3; i++) {
    evaluation.eval(actual0,predicted1);
  }
  for (int i=0; i < 10; i++) {
    evaluation.eval(actual1,predicted0);
  }
  for (int i=0; i < 5; i++) {
    evaluation.eval(actual1,predicted1);
  }
  assertEquals(20,evaluation.truePositives().get(0),0);
  assertEquals(3,evaluation.falseNegatives().get(0),0);
  assertEquals(10,evaluation.falsePositives().get(0),0);
  assertEquals(5,evaluation.trueNegatives().get(0),0);
  System.out.println(evaluation.confusionToString());
}
