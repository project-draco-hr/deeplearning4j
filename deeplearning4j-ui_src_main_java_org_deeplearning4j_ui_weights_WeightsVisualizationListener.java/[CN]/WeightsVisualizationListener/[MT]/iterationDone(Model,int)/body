{
  if (iteration == 5) {
    log.info("Model param keys: " + model.paramTable().keySet());
    for (    String key : model.paramTable().keySet()) {
      log.info("Dimensions for params at key [" + key + "] : "+ Arrays.toString(model.paramTable().get(key).shape()));
      if (model.paramTable().get(key).shape().length == 2) {
        writeRows(model.paramTable().get(key),new File("mb_" + minibatchNum + "_param_"+ key+ ".txt"));
      }
    }
    Layer l=(Layer)model;
    INDArray activationMean=l.activate();
    log.info("Activation mean shape: " + Arrays.toString(activationMean.shape()));
    INDArray weights=Transforms.sigmoid(activationMean);
    log.info("Weights shape: " + Arrays.toString(weights.shape()));
    writeRows(activationMean,new File("activationMean_" + minibatchNum + ".txt"));
    writeRows(weights,new File("weights_" + minibatchNum + ".txt"));
    BufferedImage image=ImageLoader.toImage(weights);
    BufferedImage image2=ImageLoader.toImage(activationMean);
    try {
      ImageIO.write(image,"png",new File("tmp_" + minibatchNum + ".png"));
      ImageIO.write(image2,"png",new File("mean_" + minibatchNum + ".png"));
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    minibatchNum++;
  }
}
