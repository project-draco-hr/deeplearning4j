{
  ClassPathResource resource=new ClassPathResource("/labeled");
  File file=resource.getFile();
  LabelAwareSentenceIterator iter=LabelAwareUimaSentenceIterator.createWithPath(file.getAbsolutePath());
  TokenizerFactory t=new UimaTokenizerFactory();
  ParagraphVectors vec=new ParagraphVectors.Builder().minWordFrequency(1).iterations(5).labels(Arrays.asList("negative","neutral","positive")).layerSize(100).stopWords(new ArrayList<String>()).windowSize(5).iterate(iter).tokenizerFactory(t).build();
  vec.fit();
  assertNotEquals(vec.lookupTable().vector("UNK"),vec.lookupTable().vector("negative"));
  assertNotEquals(vec.lookupTable().vector("UNK"),vec.lookupTable().vector("positive"));
  assertNotEquals(vec.lookupTable().vector("UNK"),vec.lookupTable().vector("neutral"));
}
