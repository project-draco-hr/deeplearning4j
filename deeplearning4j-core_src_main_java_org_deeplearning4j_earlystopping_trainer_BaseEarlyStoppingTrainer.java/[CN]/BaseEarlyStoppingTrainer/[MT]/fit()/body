{
  log.info("Starting early stopping training");
  if (esConfig.getScoreCalculator() == null)   log.warn("No score calculator provided for early stopping. Score will be reported as 0.0 to epoch termination conditions");
  if (esConfig.getIterationTerminationConditions() != null) {
    for (    IterationTerminationCondition c : esConfig.getIterationTerminationConditions()) {
      c.initialize();
    }
  }
  if (esConfig.getEpochTerminationConditions() != null) {
    for (    EpochTerminationCondition c : esConfig.getEpochTerminationConditions()) {
      c.initialize();
    }
  }
  if (listener != null)   listener.onStart(esConfig,model);
  Map<Integer,Double> scoreVsEpoch=new LinkedHashMap<>();
  int epochCount=0;
  while (true) {
    reset();
    double lastScore;
    boolean terminate=false;
    IterationTerminationCondition terminationReason=null;
    int iterCount=0;
    while (iterator.hasNext()) {
      DataSet ds=train.next();
      try {
        if (train != null)         fit(train.next());
 else         fit(trainMulti.next());
      }
 catch (      Exception e) {
        log.warn("Early stopping training terminated due to exception at epoch {}, iteration {}",epochCount,iterCount,e);
        T bestModel;
        try {
          bestModel=esConfig.getModelSaver().getBestModel();
        }
 catch (        IOException e2) {
          throw new RuntimeException(e2);
        }
        return new EarlyStoppingResult<T>(EarlyStoppingResult.TerminationReason.Error,e.toString(),scoreVsEpoch,bestModelEpoch,bestModelScore,epochCount,bestModel);
      }
      lastScore=model.score();
      for (      IterationTerminationCondition c : esConfig.getIterationTerminationConditions()) {
        if (c.terminate(lastScore)) {
          terminate=true;
          terminationReason=c;
          break;
        }
      }
      if (terminate)       break;
      iterCount++;
    }
    if (terminate) {
      log.info("Hit per iteration epoch termination condition at epoch {}, iteration {}. Reason: {}",epochCount,iterCount,terminationReason);
      if (esConfig.isSaveLastModel()) {
        try {
          esConfig.getModelSaver().saveLatestModel(model,0.0);
        }
 catch (        IOException e) {
          throw new RuntimeException("Error saving most recent model",e);
        }
      }
      T bestModel;
      try {
        bestModel=esConfig.getModelSaver().getBestModel();
      }
 catch (      IOException e2) {
        throw new RuntimeException(e2);
      }
      EarlyStoppingResult<T> result=new EarlyStoppingResult<>(EarlyStoppingResult.TerminationReason.IterationTerminationCondition,terminationReason.toString(),scoreVsEpoch,bestModelEpoch,bestModelScore,epochCount,bestModel);
      if (listener != null)       listener.onCompletion(result);
      return result;
    }
    log.info("Completed training epoch {}",epochCount);
    if ((epochCount == 0 && esConfig.getEvaluateEveryNEpochs() == 1) || epochCount % esConfig.getEvaluateEveryNEpochs() == 0) {
      ScoreCalculator sc=esConfig.getScoreCalculator();
      double score=(sc == null ? 0.0 : esConfig.getScoreCalculator().calculateScore(model));
      scoreVsEpoch.put(epochCount - 1,score);
      if (sc != null && score < bestModelScore) {
        if (bestModelEpoch == -1) {
          log.info("Score at epoch {}: {}",epochCount,score);
        }
 else {
          log.info("New best model: score = {}, epoch = {} (previous: score = {}, epoch = {})",score,epochCount,bestModelScore,bestModelEpoch);
        }
        bestModelScore=score;
        bestModelEpoch=epochCount;
        try {
          esConfig.getModelSaver().saveBestModel(model,score);
        }
 catch (        IOException e) {
          throw new RuntimeException("Error saving best model",e);
        }
      }
      if (esConfig.isSaveLastModel()) {
        try {
          esConfig.getModelSaver().saveLatestModel(model,score);
        }
 catch (        IOException e) {
          throw new RuntimeException("Error saving most recent model",e);
        }
      }
      if (listener != null)       listener.onEpoch(epochCount,score,esConfig,model);
      boolean epochTerminate=false;
      EpochTerminationCondition termReason=null;
      for (      EpochTerminationCondition c : esConfig.getEpochTerminationConditions()) {
        if (c.terminate(epochCount,score)) {
          epochTerminate=true;
          termReason=c;
          break;
        }
      }
      if (epochTerminate) {
        log.info("Hit epoch termination condition at epoch {}. Details: {}",epochCount,termReason.toString());
        T bestModel;
        try {
          bestModel=esConfig.getModelSaver().getBestModel();
        }
 catch (        IOException e2) {
          throw new RuntimeException(e2);
        }
        EarlyStoppingResult<T> result=new EarlyStoppingResult<>(EarlyStoppingResult.TerminationReason.EpochTerminationCondition,termReason.toString(),scoreVsEpoch,bestModelEpoch,bestModelScore,epochCount + 1,bestModel);
        if (listener != null)         listener.onCompletion(result);
        return result;
      }
      epochCount++;
    }
  }
}
