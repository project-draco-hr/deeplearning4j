{
  if (!element.isScalar())   throw new IllegalArgumentException("Unable to insert anything but a scalar");
  int ix=offset;
  if (indices.length != shape.length)   throw new IllegalArgumentException("Unable to applyTransformToDestination values: number of indices must be equal to the shape");
  for (int i=0; i < shape.length; i++)   ix+=indices[i] * stride[i];
  if (element instanceof IComplexNDArray) {
    IComplexNumber element2=(IComplexNumber)element.element();
    data[ix]=(float)element2.realComponent();
    data[ix + 1]=(float)element2.imaginaryComponent();
  }
 else {
    float element2=(float)element.element();
    data[ix]=element2;
    data[ix + 1]=0;
  }
  return this;
}
