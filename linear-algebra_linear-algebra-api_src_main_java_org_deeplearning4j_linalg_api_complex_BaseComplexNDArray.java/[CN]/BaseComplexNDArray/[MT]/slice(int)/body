{
  int offset=this.offset + (slice * stride[0]);
  IComplexNDArray ret;
  if (shape.length == 0)   throw new IllegalArgumentException("Can't slice a 0-d ComplexNDArray");
 else   if (shape.length == 1)   ret=NDArrays.createComplex(data,ArrayUtil.empty(),ArrayUtil.empty(),offset,ordering);
 else   if (shape.length == 2) {
    ret=NDArrays.createComplex(data,ArrayUtil.of(shape[1]),Arrays.copyOfRange(stride,1,stride.length),offset,ordering);
  }
 else {
    if (offset >= data.length)     throw new IllegalArgumentException("Offset index is > data.length");
    ret=NDArrays.createComplex(data,Arrays.copyOfRange(shape,1,shape.length),Arrays.copyOfRange(stride,1,stride.length),offset,ordering);
  }
  return ret;
}
