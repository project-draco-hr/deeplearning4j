{
  int offset=this.offset + dimension * stride[slice];
  if (this.offset == 0)   offset*=2;
  IComplexNDArray ret;
  if (shape.length == 2) {
    int st=stride[1];
    if (st == 1) {
      return NDArrays.createComplex(data,new int[]{shape[dimension]},offset,ordering);
    }
 else {
      return NDArrays.createComplex(data,new int[]{shape[dimension]},new int[]{st},offset);
    }
  }
  if (slice == 0)   return slice(dimension);
  return NDArrays.createComplex(data,ArrayUtil.removeIndex(shape,dimension),ArrayUtil.removeIndex(stride,dimension),offset,ordering);
}
