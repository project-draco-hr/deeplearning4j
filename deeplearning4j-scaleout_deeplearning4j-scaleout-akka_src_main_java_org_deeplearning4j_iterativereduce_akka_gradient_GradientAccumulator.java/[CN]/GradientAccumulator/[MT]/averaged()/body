{
  if (workers.isEmpty())   return null;
  MultiLayerGradient gradient=workers.get(0);
  List<NeuralNetworkGradient> firstGradient=gradient.getGradients();
  for (int i=1; i < workers.size(); i++) {
    List<NeuralNetworkGradient> gradients=workers.get(i).getGradients();
    for (int j=0; j < gradients.size(); j++) {
      firstGradient.get(j).add(gradients.get(j));
    }
    gradient.getLogRegGradient().add(workers.get(i).getLogRegGradient());
  }
  for (  NeuralNetworkGradient g : gradient.getGradients()) {
    g.div(workers.size());
  }
  gradient.getLogRegGradient().div(workers.size());
  return gradient;
}
