{
  if (message instanceof DistributedPubSubMediator.SubscribeAck || message instanceof DistributedPubSubMediator.UnsubscribeAck) {
    DistributedPubSubMediator.SubscribeAck ack=(DistributedPubSubMediator.SubscribeAck)message;
    mediator.tell(new DistributedPubSubMediator.Publish(ClusterListener.TOPICS,message),getSelf());
    log.info("Subscribed to " + ack.toString());
  }
 else   if (message instanceof SemanticHashing) {
    if (results == null)     results=new UpdateableEncoderImpl((SemanticHashing)message);
 else     results.set((SemanticHashing)message);
    log.info("Set network");
  }
 else   if (message instanceof Ack) {
    log.info("Ack from master on worker " + id);
  }
 else   unhandled(message);
}
