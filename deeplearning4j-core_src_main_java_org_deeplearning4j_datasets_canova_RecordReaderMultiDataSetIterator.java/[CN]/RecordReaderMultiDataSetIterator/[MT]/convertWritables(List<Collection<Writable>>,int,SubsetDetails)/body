{
  INDArray arr;
  if (details.entireReader)   arr=Nd4j.create(minValues,list.get(0).size());
 else   if (details.oneHot)   arr=Nd4j.zeros(minValues,details.oneHotNumClasses);
 else   arr=Nd4j.create(minValues,details.subsetEndInclusive - details.subsetStart + 1);
  int[] idx=new int[2];
  for (int i=0; i < minValues; i++) {
    idx[0]=i;
    Collection<Writable> c=list.get(i);
    if (details.entireReader) {
      int j=0;
      for (      Writable w : c) {
        idx[1]=j++;
        try {
          arr.putScalar(idx,w.toDouble());
        }
 catch (        UnsupportedOperationException e) {
          if (w instanceof NDArrayWritable) {
            arr.putRow(idx[0],((NDArrayWritable)w).get());
          }
 else {
            throw e;
          }
        }
      }
    }
 else     if (details.oneHot) {
      Writable w=null;
      if (c instanceof List)       w=((List<Writable>)c).get(details.subsetStart);
 else {
        Iterator<Writable> iter=c.iterator();
        for (int k=0; k <= details.subsetStart; k++)         w=iter.next();
      }
      idx[1]=w.toInt();
      arr.putScalar(idx,1.0);
    }
 else {
      Iterator<Writable> iter=c.iterator();
      for (int j=0; j < details.subsetStart; j++)       iter.next();
      int k=0;
      for (int j=details.subsetStart; j <= details.subsetEndInclusive; j++) {
        idx[1]=k++;
        Writable w=iter.next();
        try {
          arr.putScalar(idx,w.toDouble());
        }
 catch (        UnsupportedOperationException e) {
          if (w instanceof NDArrayWritable) {
            arr.putRow(idx[0],((NDArrayWritable)w).get().get(NDArrayIndex.all(),NDArrayIndex.interval(details.subsetStart,details.subsetEndInclusive + 1)));
          }
 else {
            throw e;
          }
        }
      }
    }
  }
  return arr;
}
