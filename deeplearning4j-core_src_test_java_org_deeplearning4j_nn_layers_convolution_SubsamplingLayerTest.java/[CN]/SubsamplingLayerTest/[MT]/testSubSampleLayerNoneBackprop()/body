{
  INDArray expectedContainedEpsilonInput=Nd4j.create(new double[]{1.,1.,1.,1.,1.,1.,1.,1.},new int[]{1,2,2,2});
  INDArray expectedContainedEpsilonResult=Nd4j.create(new double[]{1.,1.,1.,1.,1.,1.,1.,1.},new int[]{1,2,2,2});
  INDArray input=getContainedData();
  Layer layer=getSubsamplingLayer(SubsamplingLayer.PoolingType.NONE);
  layer.setInput(input);
  Pair<Gradient,INDArray> containedOutput=layer.backpropGradient(expectedContainedEpsilonInput);
  assertEquals(expectedContainedEpsilonResult,containedOutput.getSecond());
  assertEquals(null,containedOutput.getFirst().getGradientFor("W"));
  assertEquals(expectedContainedEpsilonResult.shape().length,containedOutput.getSecond().shape().length);
  INDArray input2=getData();
  layer.activate(input2);
  Pair<Gradient,INDArray> out=layer.backpropGradient(epsilon);
  assertEquals(depth,out.getSecond().size(1));
}
