{
  float preTrainLr=0.01f;
  int preTrainEpochs=10000;
  int k=1;
  int nIns=4, nOuts=3;
  int[] hiddenLayerSizes=new int[]{4,3,2};
  float fineTuneLr=0.01f;
  int fineTuneEpochs=10000;
  DBN dbn=new DBN.Builder().withHiddenUnits(RBM.HiddenUnit.RECTIFIED).withVisibleUnits(RBM.VisibleUnit.GAUSSIAN).numberOfInputs(nIns).numberOfOutPuts(nOuts).withActivation(Activations.tanh()).hiddenLayerSizes(hiddenLayerSizes).build();
  INDArray params=dbn.params();
  assertEquals(1,params.rows());
  assertEquals(params.columns(),params.length());
  dbn.setLabels(new NDArray(new DoubleMatrix(1,nOuts)));
  assertEquals(RBM.HiddenUnit.RECTIFIED,dbn.getHiddenUnit());
  assertEquals(RBM.VisibleUnit.GAUSSIAN,dbn.getVisibleUnit());
  RBM r=(RBM)dbn.getLayers()[0];
  assertEquals(RBM.HiddenUnit.RECTIFIED,r.getHiddenType());
  assertEquals(RBM.VisibleUnit.GAUSSIAN,r.getVisibleType());
}
