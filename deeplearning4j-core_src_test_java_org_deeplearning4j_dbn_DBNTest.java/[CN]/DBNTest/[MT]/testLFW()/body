{
  DataSetIterator iter=new LFWDataSetIterator(10,10,14,14);
  DBN dbn=new DBN.Builder().withHiddenUnits(RBM.HiddenUnit.RECTIFIED).withVisibleUnits(RBM.VisibleUnit.GAUSSIAN).hiddenLayerSizes(new int[]{250,150,100}).withOptimizationAlgorithm(NeuralNetwork.OptimizationAlgorithm.CONJUGATE_GRADIENT).numberOfInputs(iter.inputColumns()).numberOfOutPuts(iter.totalOutcomes()).build();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    dbn.pretrain(next.getFirst(),1,1e-5,1000);
  }
  iter.reset();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    dbn.setInput(next.getFirst());
    dbn.finetune(next.getSecond(),1e-4,1000);
  }
  iter.reset();
  Evaluation eval=new Evaluation();
  while (iter.hasNext()) {
    DataSet next=iter.next();
    DoubleMatrix predict=dbn.output(next.getFirst());
    DoubleMatrix labels=next.getSecond();
    eval.eval(labels,predict);
  }
  log.info("Prediction f scores and accuracy");
  log.info(eval.stats());
}
