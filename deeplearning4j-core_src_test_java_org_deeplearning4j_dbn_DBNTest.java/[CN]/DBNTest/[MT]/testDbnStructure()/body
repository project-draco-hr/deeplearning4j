{
  RandomGenerator rng=new MersenneTwister(123);
  double preTrainLr=0.01;
  int preTrainEpochs=10000;
  int k=1;
  int nIns=4, nOuts=3;
  int[] hiddenLayerSizes=new int[]{4,3,2};
  double fineTuneLr=0.01;
  int fineTuneEpochs=10000;
  DBN dbn=new DBN.Builder().withHiddenUnits(RBM.HiddenUnit.RECTIFIED).withVisibleUnits(RBM.VisibleUnit.GAUSSIAN).numberOfInputs(nIns).numberOfOutPuts(nOuts).withActivation(Activations.tanh()).hiddenLayerSizes(hiddenLayerSizes).withRng(rng).build();
  DataSetIterator iter=new IrisDataSetIterator(150,150);
  DataSet next=iter.next(150);
  next.shuffle();
  dbn.init();
  dbn.feedForward(next.getFirst());
  for (int i=0; i < dbn.getnLayers(); i++) {
    assertEquals(dbn.getLayers()[i].gethBias(),dbn.getSigmoidLayers()[i].getB());
  }
}
