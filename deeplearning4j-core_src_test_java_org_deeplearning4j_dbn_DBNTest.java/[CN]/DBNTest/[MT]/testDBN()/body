{
  int n=3900;
  DataSet d=MatrixUtil.xorData(n);
  DoubleMatrix x=d.getFirst();
  DoubleMatrix y=d.getSecond();
  double preTrainLr=0.001;
  int preTrainEpochs=10000;
  int k=1;
  int[] hiddenLayerSizes=new int[]{2,2,2};
  double fineTuneLr=0.001;
  int fineTuneEpochs=10000;
  DBN dbn=new DBN.Builder().useAdGrad(true).hiddenLayerSizes(hiddenLayerSizes).numberOfInputs(d.numInputs()).useRegularization(false).numberOfOutPuts(d.numOutcomes()).build();
  dbn.pretrain(x,k,preTrainLr,preTrainEpochs);
  dbn.finetune(y,fineTuneLr,fineTuneEpochs);
  DoubleMatrix predict=dbn.predict(x);
  Evaluation eval=new Evaluation();
  eval.eval(y,predict);
  log.info(eval.stats());
}
